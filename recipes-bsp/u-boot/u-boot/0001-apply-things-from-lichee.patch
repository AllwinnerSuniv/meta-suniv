From 06fba4aa03c8512f3399781ec54680b3a758c38a Mon Sep 17 00:00:00 2001
From: iotah <writeforever@foxmail.com>
Date: Wed, 26 Apr 2023 10:26:43 +0000
Subject: [PATCH] apply things from lichee

Signed-off-by: iotah <writeforever@foxmail.com>
---
 Makefile                                      |    2 +-
 arch/arm/Kconfig                              |    1 +
 arch/arm/cpu/arm926ejs/Makefile               |    1 +
 arch/arm/cpu/arm926ejs/start.S                |   19 +
 arch/arm/cpu/arm926ejs/sunxi/Makefile         |   16 +
 arch/arm/cpu/arm926ejs/sunxi/config.mk        |    6 +
 arch/arm/cpu/arm926ejs/sunxi/fel_utils.S      |   38 +
 arch/arm/cpu/arm926ejs/sunxi/lowlevel_init.S  |   68 +
 arch/arm/cpu/arm926ejs/sunxi/start.c          |    1 +
 arch/arm/cpu/arm926ejs/sunxi/timer.c          |  113 ++
 arch/arm/cpu/arm926ejs/sunxi/u-boot-spl.lds   |   63 +
 arch/arm/dts/Makefile                         |    1 +
 arch/arm/dts/sun7i-a20-pcduino3.dts           |    1 -
 arch/arm/dts/sun8i-h3-libretech-all-h3-cc.dts |  180 +++
 arch/arm/dts/suniv-f1c100s-licheepi-nano.dts  |   58 +
 arch/arm/dts/suniv-f1c100s.dtsi               |    6 +
 arch/arm/dts/suniv.dtsi                       |  201 +++
 arch/arm/include/asm/arch-rockchip/clock.h    |   10 +
 arch/arm/include/asm/arch-sunxi/clock.h       |    2 +-
 arch/arm/include/asm/arch-sunxi/clock_sun6i.h |   25 +
 arch/arm/include/asm/arch-sunxi/clock_sun9i.h |    4 +
 arch/arm/include/asm/arch-sunxi/cpu_sun4i.h   |    8 +
 arch/arm/include/asm/arch-sunxi/dram.h        |    2 +
 arch/arm/include/asm/arch-sunxi/dram_suniv.h  |   47 +
 arch/arm/include/asm/arch-sunxi/gpio.h        |    6 +
 arch/arm/include/asm/arch-sunxi/spi.h         |   29 +
 arch/arm/include/asm/arch-sunxi/spi_sun4i.h   |   53 +
 arch/arm/include/asm/arch-sunxi/spi_sun6i.h   |   56 +
 arch/arm/mach-sunxi/Kconfig                   |   14 +-
 arch/arm/mach-sunxi/Makefile                  |    2 +
 arch/arm/mach-sunxi/board.c                   |   32 +-
 arch/arm/mach-sunxi/clock.c                   |    3 +-
 arch/arm/mach-sunxi/clock_sun6i.c             |   47 +-
 arch/arm/mach-sunxi/cpu_info.c                |    2 +
 arch/arm/mach-sunxi/dram_helpers.c            |    4 +
 arch/arm/mach-sunxi/dram_suniv.c              |  496 ++++++++
 arch/arm/mach-sunxi/pinmux.c                  |   77 ++
 arch/arm/mach-uniphier/dram_init.c            |   24 +
 board/sunxi/MAINTAINERS                       |   10 +
 board/sunxi/board.c                           |    8 +-
 cmd/Kconfig                                   |    3 +
 configs/CHIP_defconfig                        |    1 -
 configs/CHIP_pro_defconfig                    |    1 -
 configs/a64-olinuxino_defconfig               |    1 +
 configs/f1c100s_nano_uboot_defconfig          | 1128 +++++++++++++++++
 configs/libretech_all_h3_cc_h3_defconfig      |   19 +
 configs/licheepi_nano_defconfig               |    9 +
 configs/licheepi_nano_spiflash_defconfig      |   25 +
 configs/suniv_defconfig                       | 1128 +++++++++++++++++
 configs/uniphier_v8_defconfig                 |    1 +
 down_uboot_spiflash.sh                        |    4 +
 drivers/Makefile                              |    1 +
 drivers/clk/rockchip/clk_rk3036.c             |    7 +
 drivers/clk/rockchip/clk_rk3188.c             |    7 +
 drivers/clk/rockchip/clk_rk322x.c             |    7 +
 drivers/clk/rockchip/clk_rk3288.c             |    7 +
 drivers/clk/rockchip/clk_rk3328.c             |    7 +
 drivers/clk/rockchip/clk_rk3368.c             |    7 +
 drivers/clk/rockchip/clk_rk3399.c             |   21 +
 drivers/clk/rockchip/clk_rv1108.c             |    7 +
 drivers/mmc/Kconfig                           |    2 +-
 drivers/mtd/spi/Kconfig                       |    3 +-
 drivers/mtd/spi/spi_flash_ids.c               |    3 +
 drivers/mtd/spi/sunxi_spi_spl.c               |   56 +-
 drivers/net/sun8i_emac.c                      |    7 +-
 drivers/reset/Kconfig                         |    9 +
 drivers/reset/Makefile                        |    1 +
 drivers/reset/reset-rockchip.c                |  133 ++
 drivers/spi/Kconfig                           |   14 +
 drivers/spi/Makefile                          |    1 +
 drivers/spi/sun6i_spi.c                       |  539 ++++++++
 drivers/usb/musb-new/sunxi.c                  |    9 +-
 drivers/video/Kconfig                         |    2 +
 drivers/video/cfb_console.c                   |    2 +-
 include/configs/suniv.h                       |   36 +
 include/configs/sunxi-common.h                |   66 +-
 include/configs/uniphier.h                    |    2 -
 include/dt-bindings/clock/suniv-ccu.h         |   69 +
 include/dt-bindings/reset/suniv-ccu.h         |   37 +
 lib/Kconfig                                   |    1 +
 tools/Makefile                                |    4 +-
 tools/logos/lichee480320.bmp                  |  Bin 0 -> 154678 bytes
 tools/logos/lichee800480.bmp                  |  Bin 0 -> 385078 bytes
 83 files changed, 5060 insertions(+), 63 deletions(-)
 create mode 100644 arch/arm/cpu/arm926ejs/sunxi/Makefile
 create mode 100644 arch/arm/cpu/arm926ejs/sunxi/config.mk
 create mode 100644 arch/arm/cpu/arm926ejs/sunxi/fel_utils.S
 create mode 100644 arch/arm/cpu/arm926ejs/sunxi/lowlevel_init.S
 create mode 100644 arch/arm/cpu/arm926ejs/sunxi/start.c
 create mode 100644 arch/arm/cpu/arm926ejs/sunxi/timer.c
 create mode 100644 arch/arm/cpu/arm926ejs/sunxi/u-boot-spl.lds
 create mode 100644 arch/arm/dts/sun8i-h3-libretech-all-h3-cc.dts
 create mode 100644 arch/arm/dts/suniv-f1c100s-licheepi-nano.dts
 create mode 100644 arch/arm/dts/suniv-f1c100s.dtsi
 create mode 100644 arch/arm/dts/suniv.dtsi
 create mode 100644 arch/arm/include/asm/arch-sunxi/dram_suniv.h
 create mode 100644 arch/arm/include/asm/arch-sunxi/spi.h
 create mode 100644 arch/arm/include/asm/arch-sunxi/spi_sun4i.h
 create mode 100644 arch/arm/include/asm/arch-sunxi/spi_sun6i.h
 create mode 100644 arch/arm/mach-sunxi/dram_suniv.c
 create mode 100644 configs/f1c100s_nano_uboot_defconfig
 create mode 100644 configs/libretech_all_h3_cc_h3_defconfig
 create mode 100644 configs/licheepi_nano_defconfig
 create mode 100644 configs/licheepi_nano_spiflash_defconfig
 create mode 100644 configs/suniv_defconfig
 create mode 100755 down_uboot_spiflash.sh
 create mode 100644 drivers/reset/reset-rockchip.c
 create mode 100644 drivers/spi/sun6i_spi.c
 create mode 100644 include/configs/suniv.h
 create mode 100644 include/dt-bindings/clock/suniv-ccu.h
 create mode 100644 include/dt-bindings/reset/suniv-ccu.h
 create mode 100644 tools/logos/lichee480320.bmp
 create mode 100644 tools/logos/lichee800480.bmp

diff --git a/Makefile b/Makefile
index d8f419bcd9..2feb527dd0 100644
--- a/Makefile
+++ b/Makefile
@@ -867,7 +867,7 @@ endif
 	@# Check that this build does not use CONFIG options that we do not
 	@# know about unless they are in Kconfig. All the existing CONFIG
 	@# options are whitelisted, so new ones should not be added.
-	$(call cmd,cfgcheck,u-boot.cfg)
+#	$(call cmd,cfgcheck,u-boot.cfg)
 
 PHONY += dtbs
 dtbs: dts/dt.dtb
diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index f2c35e32c6..918424a82a 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -715,6 +715,7 @@ config ARCH_SUNXI
 	select USE_TINY_PRINTF
 	imply CMD_GPT
 	imply FAT_WRITE
+	imply OF_LIBFDT_OVERLAY
 	imply PRE_CONSOLE_BUFFER
 	imply SPL_GPIO_SUPPORT
 	imply SPL_LIBCOMMON_SUPPORT
diff --git a/arch/arm/cpu/arm926ejs/Makefile b/arch/arm/cpu/arm926ejs/Makefile
index 0f730117c0..f23754ce1a 100644
--- a/arch/arm/cpu/arm926ejs/Makefile
+++ b/arch/arm/cpu/arm926ejs/Makefile
@@ -20,6 +20,7 @@ obj-$(CONFIG_MX25) += mx25/
 obj-$(CONFIG_MX27) += mx27/
 obj-$(if $(filter mxs,$(SOC)),y) += mxs/
 obj-$(if $(filter spear,$(SOC)),y) += spear/
+obj-$(CONFIG_ARCH_SUNXI) += sunxi/
 
 # some files can only build in ARM or THUMB2, not THUMB1
 
diff --git a/arch/arm/cpu/arm926ejs/start.S b/arch/arm/cpu/arm926ejs/start.S
index 959d1ed86d..b5212014d4 100644
--- a/arch/arm/cpu/arm926ejs/start.S
+++ b/arch/arm/cpu/arm926ejs/start.S
@@ -18,6 +18,7 @@
 #include <asm-offsets.h>
 #include <config.h>
 #include <common.h>
+#include <linux/linkage.h>
 
 /*
  *************************************************************************
@@ -33,8 +34,13 @@
  */
 
 	.globl	reset
+	.globl	save_boot_params_ret
+	.type   save_boot_params_ret,%function
 
 reset:
+	/* Allow the board to save important registers */
+	b	save_boot_params
+save_boot_params_ret:
 	/*
 	 * set the cpu to SVC32 mode
 	 */
@@ -111,3 +117,16 @@ flush_dcache:
 #endif
 	mov	pc, lr		/* back to my caller */
 #endif /* CONFIG_SKIP_LOWLEVEL_INIT */
+
+/*************************************************************************
+ *
+ * void save_boot_params(u32 r0, u32 r1, u32 r2, u32 r3)
+ *	__attribute__((weak));
+ *
+ * Stack pointer is not yet initialized at this moment
+ * Don't save anything to stack even if compiled with -O0
+ *
+ *************************************************************************/
+WEAK(save_boot_params)
+	b	save_boot_params_ret	/* back to my caller */
+ENDPROC(save_boot_params)
diff --git a/arch/arm/cpu/arm926ejs/sunxi/Makefile b/arch/arm/cpu/arm926ejs/sunxi/Makefile
new file mode 100644
index 0000000000..61b9864f6a
--- /dev/null
+++ b/arch/arm/cpu/arm926ejs/sunxi/Makefile
@@ -0,0 +1,16 @@
+#
+# (C) Copyright 2012 Henrik Nordstrom <henrik@henriknordstrom.net>
+#
+# Based on some other Makefile
+# (C) Copyright 2000-2003
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+obj-y	+= timer.o
+obj-y	+= lowlevel_init.o
+
+ifdef CONFIG_SPL_BUILD
+obj-y	+= fel_utils.o
+CFLAGS_fel_utils.o := -marm
+endif
diff --git a/arch/arm/cpu/arm926ejs/sunxi/config.mk b/arch/arm/cpu/arm926ejs/sunxi/config.mk
new file mode 100644
index 0000000000..76ffec9df6
--- /dev/null
+++ b/arch/arm/cpu/arm926ejs/sunxi/config.mk
@@ -0,0 +1,6 @@
+# Build a combined spl + u-boot image
+ifdef CONFIG_SPL
+ifndef CONFIG_SPL_BUILD
+ALL-y += u-boot-sunxi-with-spl.bin
+endif
+endif
diff --git a/arch/arm/cpu/arm926ejs/sunxi/fel_utils.S b/arch/arm/cpu/arm926ejs/sunxi/fel_utils.S
new file mode 100644
index 0000000000..ca91377008
--- /dev/null
+++ b/arch/arm/cpu/arm926ejs/sunxi/fel_utils.S
@@ -0,0 +1,38 @@
+/*
+ * Utility functions for FEL mode.
+ *
+ * Copyright (c) 2015 Google, Inc
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <asm-offsets.h>
+#include <config.h>
+#include <asm/system.h>
+#include <linux/linkage.h>
+
+ENTRY(save_boot_params)
+	ldr	r0, =fel_stash
+	str	sp, [r0, #0]
+	str	lr, [r0, #4]
+	mrs	lr, cpsr		@ Read CPSR
+	str	lr, [r0, #8]
+	mrc	p15, 0, lr, c1, c0, 0	@ Read CP15 SCTLR Register
+	str	lr, [r0, #12]
+	mrc	p15, 0, lr, c1, c0, 0	@ Read CP15 Control Register
+	str	lr, [r0, #16]
+	b	save_boot_params_ret
+ENDPROC(save_boot_params)
+
+ENTRY(return_to_fel)
+	mov	sp, r0
+	mov	lr, r1
+	ldr	r0, =fel_stash
+	ldr	r1, [r0, #16]
+	mcr	p15, 0, r1, c1, c0, 0	@ Write CP15 Control Register
+	ldr	r1, [r0, #12]
+	mcr	p15, 0, r1, c1, c0, 0	@ Write CP15 SCTLR Register
+	ldr	r1, [r0, #8]
+	msr	cpsr, r1		@ Write CPSR
+	bx	lr
+ENDPROC(return_to_fel)
diff --git a/arch/arm/cpu/arm926ejs/sunxi/lowlevel_init.S b/arch/arm/cpu/arm926ejs/sunxi/lowlevel_init.S
new file mode 100644
index 0000000000..2bfd907026
--- /dev/null
+++ b/arch/arm/cpu/arm926ejs/sunxi/lowlevel_init.S
@@ -0,0 +1,68 @@
+/*
+ * A lowlevel_init function that sets up the stack to call a C function to
+ * perform further init.
+ *
+ * Based on lowlevel_init.S in armv7 directory, which is:
+ *   (C) Copyright 2010 Texas Instruments, <www.ti.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <asm-offsets.h>
+#include <config.h>
+#include <linux/linkage.h>
+
+.pushsection .text.s_init, "ax"
+WEAK(s_init)
+	bx	lr
+ENDPROC(s_init)
+.popsection
+
+.pushsection .text.lowlevel_init, "ax"
+WEAK(lowlevel_init)
+	/*
+	 * Setup a temporary stack. Global data is not available yet.
+	 */
+#if defined(CONFIG_SPL_BUILD) && defined(CONFIG_SPL_STACK)
+	ldr	sp, =CONFIG_SPL_STACK
+#else
+	ldr	sp, =CONFIG_SYS_INIT_SP_ADDR
+#endif
+	bic	sp, sp, #7 /* 8-byte alignment for ABI compliance */
+#ifdef CONFIG_SPL_DM
+	mov	r9, #0
+#else
+	/*
+	 * Set up global data for boards that still need it. This will be
+	 * removed soon.
+	 */
+#ifdef CONFIG_SPL_BUILD
+	ldr	r9, =gdata
+#else
+	sub	sp, sp, #GD_SIZE
+	bic	sp, sp, #7
+	mov	r9, sp
+#endif
+#endif
+	/*
+	 * Save the old lr(passed in ip) and the current lr to stack
+	 */
+	push	{ip, lr}
+
+	/*
+	 * Call the very early init function. This should do only the
+	 * absolute bare minimum to get started. It should not:
+	 *
+	 * - set up DRAM
+	 * - use global_data
+	 * - clear BSS
+	 * - try to start a console
+	 *
+	 * For boards with SPL this should be empty since SPL can do all of
+	 * this init in the SPL board_init_f() function which is called
+	 * immediately after this.
+	 */
+	bl	s_init
+	pop	{ip, pc}
+ENDPROC(lowlevel_init)
+.popsection
diff --git a/arch/arm/cpu/arm926ejs/sunxi/start.c b/arch/arm/cpu/arm926ejs/sunxi/start.c
new file mode 100644
index 0000000000..6b392fa835
--- /dev/null
+++ b/arch/arm/cpu/arm926ejs/sunxi/start.c
@@ -0,0 +1 @@
+/* Intentionally empty. Only needed to get FEL SPL link line right */
diff --git a/arch/arm/cpu/arm926ejs/sunxi/timer.c b/arch/arm/cpu/arm926ejs/sunxi/timer.c
new file mode 100644
index 0000000000..36263896d8
--- /dev/null
+++ b/arch/arm/cpu/arm926ejs/sunxi/timer.c
@@ -0,0 +1,113 @@
+/*
+ * (C) Copyright 2007-2011
+ * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
+ * Tom Cubie <tangliang@allwinnertech.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch/timer.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define TIMER_MODE   (0x0 << 7)	/* continuous mode */
+#define TIMER_DIV    (0x0 << 4)	/* pre scale 1 */
+#define TIMER_SRC    (0x1 << 2)	/* osc24m */
+#define TIMER_RELOAD (0x1 << 1)	/* reload internal value */
+#define TIMER_EN     (0x1 << 0)	/* enable timer */
+
+#define TIMER_CLOCK		(24 * 1000 * 1000)
+#define COUNT_TO_USEC(x)	((x) / 24)
+#define USEC_TO_COUNT(x)	((x) * 24)
+#define TICKS_PER_HZ		(TIMER_CLOCK / CONFIG_SYS_HZ)
+#define TICKS_TO_HZ(x)		((x) / TICKS_PER_HZ)
+
+#define TIMER_LOAD_VAL		0xffffffff
+
+#define TIMER_NUM		0	/* we use timer 0 */
+
+/* read the 32-bit timer */
+static ulong read_timer(void)
+{
+	struct sunxi_timer_reg *timers =
+		(struct sunxi_timer_reg *)SUNXI_TIMER_BASE;
+	struct sunxi_timer *timer = &timers->timer[TIMER_NUM];
+
+	/*
+	 * The hardware timer counts down, therefore we invert to
+	 * produce an incrementing timer.
+	 */
+	return ~readl(&timer->val);
+}
+
+/* init timer register */
+int timer_init(void)
+{
+	struct sunxi_timer_reg *timers =
+		(struct sunxi_timer_reg *)SUNXI_TIMER_BASE;
+	struct sunxi_timer *timer = &timers->timer[TIMER_NUM];
+	writel(TIMER_LOAD_VAL, &timer->inter);
+	writel(TIMER_MODE | TIMER_DIV | TIMER_SRC | TIMER_RELOAD | TIMER_EN,
+	       &timer->ctl);
+
+	return 0;
+}
+
+/* timer without interrupts */
+ulong get_timer(ulong base)
+{
+	return get_timer_masked() - base;
+}
+
+ulong get_timer_masked(void)
+{
+	/* current tick value */
+	ulong now = TICKS_TO_HZ(read_timer());
+
+	if (now >= gd->arch.lastinc)	/* normal (non rollover) */
+		gd->arch.tbl += (now - gd->arch.lastinc);
+	else {
+		/* rollover */
+		gd->arch.tbl += (TICKS_TO_HZ(TIMER_LOAD_VAL)
+				- gd->arch.lastinc) + now;
+	}
+	gd->arch.lastinc = now;
+
+	return gd->arch.tbl;
+}
+
+/* delay x useconds */
+void __udelay(unsigned long usec)
+{
+	long tmo = USEC_TO_COUNT(usec);
+	ulong now, last = read_timer();
+
+	while (tmo > 0) {
+		now = read_timer();
+		if (now > last)	/* normal (non rollover) */
+			tmo -= now - last;
+		else		/* rollover */
+			tmo -= TIMER_LOAD_VAL - last + now;
+		last = now;
+	}
+}
+
+/*
+ * This function is derived from PowerPC code (read timebase as long long).
+ * On ARM it just returns the timer value.
+ */
+unsigned long long get_ticks(void)
+{
+	return get_timer(0);
+}
+
+/*
+ * This function is derived from PowerPC code (timebase clock frequency).
+ * On ARM it returns the number of timer ticks per second.
+ */
+ulong get_tbclk(void)
+{
+	return CONFIG_SYS_HZ;
+}
diff --git a/arch/arm/cpu/arm926ejs/sunxi/u-boot-spl.lds b/arch/arm/cpu/arm926ejs/sunxi/u-boot-spl.lds
new file mode 100644
index 0000000000..1b667807db
--- /dev/null
+++ b/arch/arm/cpu/arm926ejs/sunxi/u-boot-spl.lds
@@ -0,0 +1,63 @@
+/*
+ * (C) Copyright 2018
+ * Icenowy Zheng <icenowy@aosc.io>
+ *
+ * Based on arch/arm/cpu/armv7/sunxi/u-boot-spl.lds:
+ *
+ * (C) Copyright 2012
+ * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
+ * Tom Cubie <tangliang@allwinnertech.com>
+ *
+ * Based on omap-common/u-boot-spl.lds:
+ *
+ * (C) Copyright 2002
+ * Gary Jennejohn, DENX Software Engineering, <garyj@denx.de>
+ *
+ * (C) Copyright 2010
+ * Texas Instruments, <www.ti.com>
+ *	Aneesh V <aneesh@ti.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+MEMORY { .sram : ORIGIN = CONFIG_SPL_TEXT_BASE,\
+		LENGTH = CONFIG_SPL_MAX_SIZE }
+MEMORY { .sdram : ORIGIN = CONFIG_SPL_BSS_START_ADDR, \
+		LENGTH = CONFIG_SPL_BSS_MAX_SIZE }
+
+OUTPUT_FORMAT("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")
+OUTPUT_ARCH(arm)
+ENTRY(_start)
+SECTIONS
+{
+	.text      :
+	{
+		__start = .;
+		*(.vectors)
+		arch/arm/cpu/arm926ejs/start.o	(.text)
+		*(.text*)
+	} > .sram
+
+	. = ALIGN(4);
+	.rodata : { *(SORT_BY_ALIGNMENT(.rodata*)) } >.sram
+
+	. = ALIGN(4);
+	.data : { *(SORT_BY_ALIGNMENT(.data*)) } >.sram
+
+	. = ALIGN(4);
+	.u_boot_list : {
+		KEEP(*(SORT(.u_boot_list*)));
+	} > .sram
+
+	. = ALIGN(4);
+	__image_copy_end = .;
+	_end = .;
+
+	.bss :
+	{
+		. = ALIGN(4);
+		__bss_start = .;
+		*(.bss*)
+		. = ALIGN(4);
+		__bss_end = .;
+	} > .sdram
+}
diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index a895c70284..b4bf01f9cf 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -329,6 +329,7 @@ dtb-$(CONFIG_MACH_SUN8I_A83T) += \
 dtb-$(CONFIG_MACH_SUN8I_H3) += \
 	sun8i-h2-plus-orangepi-zero.dtb \
 	sun8i-h3-bananapi-m2-plus.dtb \
+	sun8i-h3-libretech-all-h3-cc.dtb \
 	sun8i-h3-orangepi-2.dtb \
 	sun8i-h3-orangepi-lite.dtb \
 	sun8i-h3-orangepi-one.dtb \
diff --git a/arch/arm/dts/sun7i-a20-pcduino3.dts b/arch/arm/dts/sun7i-a20-pcduino3.dts
index 37b1e0ee9b..7f449b6a28 100644
--- a/arch/arm/dts/sun7i-a20-pcduino3.dts
+++ b/arch/arm/dts/sun7i-a20-pcduino3.dts
@@ -165,7 +165,6 @@
 	vmmc-supply = <&reg_vcc3v3>;
 	bus-width = <4>;
 	cd-gpios = <&pio 7 1 GPIO_ACTIVE_LOW>; /* PH1 */
-	cd-inverted;
 	status = "okay";
 };
 
diff --git a/arch/arm/dts/sun8i-h3-libretech-all-h3-cc.dts b/arch/arm/dts/sun8i-h3-libretech-all-h3-cc.dts
new file mode 100644
index 0000000000..97b993f636
--- /dev/null
+++ b/arch/arm/dts/sun8i-h3-libretech-all-h3-cc.dts
@@ -0,0 +1,180 @@
+/*
+ * Copyright (C) 2017 Chen-Yu Tsai <wens@csie.org>
+ *
+ * SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+ */
+
+/dts-v1/;
+#include "sun8i-h3.dtsi"
+
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+
+/ {
+	model = "Libre Computer Board ALL-H3-CC H3";
+	compatible = "libretech,all-h3-cc-h3", "allwinner,sun8i-h3";
+
+	aliases {
+		ethernet0 = &emac;
+		serial0 = &uart0;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	leds {
+		compatible = "gpio-leds";
+
+		pwr_led {
+			label = "librecomputer:green:pwr";
+			gpios = <&r_pio 0 10 GPIO_ACTIVE_HIGH>; /* PL10 */
+			default-state = "on";
+		};
+
+		status_led {
+			label = "librecomputer:blue:status";
+			gpios = <&pio 0 7 GPIO_ACTIVE_HIGH>; /* PA7 */
+		};
+	};
+
+	gpio_keys {
+		compatible = "gpio-keys";
+
+		power {
+			label = "power";
+			linux,code = <KEY_POWER>;
+			gpios = <&r_pio 0 2 GPIO_ACTIVE_LOW>; /* PL2 */
+		};
+	};
+
+	reg_vcc1v2: vcc1v2 {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc1v2";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+		regulator-boot-on;
+		vin-supply = <&reg_vcc5v0>;
+		gpio = <&r_pio 0 8 GPIO_ACTIVE_HIGH>; /* PL8 */
+		enable-active-high;
+	};
+
+	reg_vcc3v3: vcc3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		vin-supply = <&reg_vcc5v0>;
+	};
+
+	/* This represents the board's 5V input */
+	reg_vcc5v0: vcc5v0 {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc5v0";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+	};
+
+	reg_vcc_dram: vcc-dram {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc-dram";
+		regulator-min-microvolt = <1500000>;
+		regulator-max-microvolt = <1500000>;
+		regulator-always-on;
+		regulator-boot-on;
+		vin-supply = <&reg_vcc5v0>;
+		gpio = <&r_pio 0 9 GPIO_ACTIVE_HIGH>; /* PL9 */
+		enable-active-high;
+	};
+
+	reg_vcc_io: vcc-io {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc-io";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+		regulator-boot-on;
+		vin-supply = <&reg_vcc3v3>;
+		gpio = <&r_pio 0 5 GPIO_ACTIVE_LOW>; /* PL5 */
+	};
+
+	reg_vdd_cpux: vdd-cpux {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd-cpux";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+		regulator-boot-on;
+		vin-supply = <&reg_vcc5v0>;
+		gpio = <&r_pio 0 8 GPIO_ACTIVE_HIGH>; /* PL8 */
+		enable-active-high;
+	};
+};
+
+&ehci1 {
+	status = "okay";
+};
+
+&ehci2 {
+	status = "okay";
+};
+
+&ehci3 {
+	status = "okay";
+};
+
+&emac {
+	phy = <&phy1>;
+	phy-mode = "mii";
+	allwinner,use-internal-phy;
+	allwinner,leds-active-low;
+	status = "okay";
+
+	phy1: ethernet-phy@1 {
+		reg = <1>;
+	};
+};
+
+&ir {
+	pinctrl-names = "default";
+	pinctrl-0 = <&ir_pins_a>;
+	status = "okay";
+};
+
+&mmc0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&mmc0_pins_a>;
+	vmmc-supply = <&reg_vcc_io>;
+	bus-width = <4>;
+	cd-gpios = <&pio 5 6 GPIO_ACTIVE_HIGH>; /* PF6 */
+	cd-inverted;
+	status = "okay";
+};
+
+&ohci1 {
+	status = "okay";
+};
+
+&ohci2 {
+	status = "okay";
+};
+
+&ohci3 {
+	status = "okay";
+};
+
+&uart0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart0_pins_a>;
+	status = "okay";
+};
+
+&usbphy {
+	/* VBUS on USB ports are always on */
+	usb0_vbus-supply = <&reg_vcc5v0>;
+	usb1_vbus-supply = <&reg_vcc5v0>;
+	usb2_vbus-supply = <&reg_vcc5v0>;
+	usb3_vbus-supply = <&reg_vcc5v0>;
+	status = "okay";
+};
diff --git a/arch/arm/dts/suniv-f1c100s-licheepi-nano.dts b/arch/arm/dts/suniv-f1c100s-licheepi-nano.dts
new file mode 100644
index 0000000000..9c111e6228
--- /dev/null
+++ b/arch/arm/dts/suniv-f1c100s-licheepi-nano.dts
@@ -0,0 +1,58 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR X11)
+/*
+ * Copyright 2018 Icenowy Zheng <icenowy@aosc.io>
+ */
+
+/dts-v1/;
+#include "suniv-f1c100s.dtsi"
+
+#include <dt-bindings/gpio/gpio.h>
+
+/ {
+	model = "Lichee Pi Nano";
+	compatible = "licheepi,licheepi-nano", "allwinner,suniv-f1c100s",
+		     "allwinner,suniv";
+
+	aliases {
+		serial0 = &uart0;
+		spi0 = &spi0;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+};
+
+&otg_sram {
+	status = "okay";
+};
+
+&spi0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&spi0_pins_a>;
+	status = "okay";
+
+	flash@0 {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "winbond,w25q128", "jedec,spi-nor";
+		reg = <0>;
+		spi-max-frequency = <40000000>;
+	};
+};
+
+&uart0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart0_pins_a>;
+	status = "okay";
+};
+
+&usb_otg {
+	dr_mode = "otg";
+	status = "okay";
+};
+
+&usbphy {
+	usb0_id_det-gpio = <&pio 4 2 GPIO_ACTIVE_HIGH>; /* PE2 */
+	status = "okay";
+};
diff --git a/arch/arm/dts/suniv-f1c100s.dtsi b/arch/arm/dts/suniv-f1c100s.dtsi
new file mode 100644
index 0000000000..f084bc8dd1
--- /dev/null
+++ b/arch/arm/dts/suniv-f1c100s.dtsi
@@ -0,0 +1,6 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR X11)
+/*
+ * Copyright 2018 Icenowy Zheng <icenowy@aosc.io>
+ */
+
+#include "suniv.dtsi"
diff --git a/arch/arm/dts/suniv.dtsi b/arch/arm/dts/suniv.dtsi
new file mode 100644
index 0000000000..10da83b53a
--- /dev/null
+++ b/arch/arm/dts/suniv.dtsi
@@ -0,0 +1,201 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR X11)
+/*
+ * Copyright 2018 Icenowy Zheng <icenowy@aosc.io>
+ */
+
+#include <dt-bindings/clock/suniv-ccu.h>
+#include <dt-bindings/reset/suniv-ccu.h>
+
+/ {
+	#address-cells = <1>;
+	#size-cells = <1>;
+	interrupt-parent = <&intc>;
+
+	clocks {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges;
+
+		osc24M: clk-24M {
+			#clock-cells = <0>;
+			compatible = "fixed-clock";
+			clock-frequency = <24000000>;
+			clock-output-names = "osc24M";
+		};
+
+		osc32k: clk-32k {
+			#clock-cells = <0>;
+			compatible = "fixed-clock";
+			clock-frequency = <32768>;
+			clock-output-names = "osc32k";
+		};
+
+		fake100M: clk-100M {
+			#clock-cells = <0>;
+			compatible = "fixed-clock";
+			clock-frequency = <100000000>;
+			clock-output-names = "fake-100M";
+		};
+	};
+
+	cpus {
+		#address-cells = <0>;
+		#size-cells = <0>;
+
+		cpu {
+			compatible = "arm,arm926ej-s";
+			device_type = "cpu";
+		};
+	};
+
+	soc {
+		compatible = "simple-bus";
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges;
+
+		sram-controller@1c00000 {
+			compatible = "allwinner,sun4i-a10-sram-controller";
+			reg = <0x01c00000 0x30>;
+			#address-cells = <1>;
+			#size-cells = <1>;
+			ranges;
+
+			sram_d: sram@10000 {
+				compatible = "mmio-sram";
+				reg = <0x00010000 0x1000>;
+				#address-cells = <1>;
+				#size-cells = <1>;
+				ranges = <0 0x00010000 0x1000>;
+
+				otg_sram: sram-section@0 {
+					compatible = "allwinner,sun4i-a10-sram-d";
+					reg = <0x0000 0x1000>;
+					status = "disabled";
+				};
+			};
+		};
+
+		spi0: spi@1c05000 {
+			compatible = "allwinner,suniv-spi",
+				     "allwinner,sun8i-h3-spi";
+			reg = <0x01c05000 0x1000>;
+			interrupts = <10>;
+			clocks = <&ccu CLK_BUS_SPI0>, <&ccu CLK_BUS_SPI0>;
+			clock-names = "ahb", "mod";
+			resets = <&ccu RST_BUS_SPI0>;
+			status = "disabled";
+			#address-cells = <1>;
+			#size-cells = <0>;
+		};
+
+		ccu: clock@1c20000 {
+			compatible = "allwinner,suniv-ccu";
+			reg = <0x01c20000 0x400>;
+			clocks = <&osc24M>, <&osc32k>;
+			clock-names = "hosc", "losc";
+			#clock-cells = <1>;
+			#reset-cells = <1>;
+		};
+
+		intc: interrupt-controller@1c20400 {
+			compatible = "allwinner,suniv-ic";
+			reg = <0x01c20400 0x400>;
+			interrupt-controller;
+			#interrupt-cells = <1>;
+		};
+
+		pio: pinctrl@1c20800 {
+			compatible = "allwinner,suniv-pinctrl";
+			reg = <0x01c20800 0x400>;
+			interrupts = <38>, <39>, <40>;
+			clocks = <&ccu CLK_BUS_PIO>, <&osc24M>, <&osc32k>;
+			clock-names = "apb", "hosc", "losc";
+			gpio-controller;
+			interrupt-controller;
+			#interrupt-cells = <3>;
+			#gpio-cells = <3>;
+
+			spi0_pins_a: spi0-pins-pc {
+				pins = "PC0", "PC1", "PC2", "PC3";
+				function = "spi0";
+			};
+
+			uart0_pins_a: uart-pins-pe {
+				pins = "PE0", "PE1";
+				function = "uart0";
+			};
+		};
+
+		timer@1c20c00 {
+			compatible = "allwinner,sun4i-a10-timer";
+			reg = <0x01c20c00 0x90>;
+			interrupts = <13>;
+			clocks = <&osc24M>;
+		};
+
+		wdt: watchdog@1c20ca0 {
+			compatible = "allwinner,sun6i-a31-wdt";
+			reg = <0x01c20ca0 0x20>;
+		};
+
+		uart0: serial@1c25000 {
+			compatible = "snps,dw-apb-uart";
+			reg = <0x01c25000 0x400>;
+			interrupts = <1>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&ccu CLK_BUS_UART0>;
+			resets = <&ccu RST_BUS_UART0>;
+			status = "disabled";
+		};
+
+		uart1: serial@1c25400 {
+			compatible = "snps,dw-apb-uart";
+			reg = <0x01c25400 0x400>;
+			interrupts = <2>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&ccu CLK_BUS_UART1>;
+			resets = <&ccu RST_BUS_UART1>;
+			status = "disabled";
+		};
+
+		uart2: serial@1c25800 {
+			compatible = "snps,dw-apb-uart";
+			reg = <0x01c25800 0x400>;
+			interrupts = <3>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&ccu CLK_BUS_UART2>;
+			resets = <&ccu RST_BUS_UART2>;
+			status = "disabled";
+		};
+
+		usb_otg: usb@1c13000 {
+			compatible = "allwinner,suniv-musb";
+			reg = <0x01c13000 0x0400>;
+			clocks = <&ccu CLK_BUS_OTG>;
+			resets = <&ccu RST_BUS_OTG>;
+			interrupts = <26>;
+			interrupt-names = "mc";
+			phys = <&usbphy 0>;
+			phy-names = "usb";
+			extcon = <&usbphy 0>;
+			allwinner,sram = <&otg_sram 1>;
+			status = "disabled";
+		};
+
+		usbphy: phy@1c13400 {
+			compatible = "allwinner,suniv-usb-phy";
+			reg = <0x01c13400 0x10>;
+			reg-names = "phy_ctrl";
+			clocks = <&ccu CLK_USB_PHY0>;
+			clock-names = "usb0_phy";
+			resets = <&ccu RST_USB_PHY0>;
+			reset-names = "usb0_reset";
+			#phy-cells = <1>;
+			status = "disabled";
+		};
+	};
+};
diff --git a/arch/arm/include/asm/arch-rockchip/clock.h b/arch/arm/include/asm/arch-rockchip/clock.h
index 736b2603fd..52641116f3 100644
--- a/arch/arm/include/asm/arch-rockchip/clock.h
+++ b/arch/arm/include/asm/arch-rockchip/clock.h
@@ -85,4 +85,14 @@ void rk3288_clk_configure_cpu(struct rk3288_cru *cru, struct rk3288_grf *grf);
 
 int rockchip_get_clk(struct udevice **devp);
 
+/*
+ * rockchip_reset_bind() - Bind soft reset device as child of clock device
+ *
+ * @pdev: clock udevice
+ * @reg_offset: the first offset in cru for softreset registers
+ * @reg_number: the reg numbers of softreset registers
+ * @return 0 success, or error value
+ */
+int rockchip_reset_bind(struct udevice *pdev, u32 reg_offset, u32 reg_number);
+
 #endif
diff --git a/arch/arm/include/asm/arch-sunxi/clock.h b/arch/arm/include/asm/arch-sunxi/clock.h
index 3747f74d36..304570a9d3 100644
--- a/arch/arm/include/asm/arch-sunxi/clock.h
+++ b/arch/arm/include/asm/arch-sunxi/clock.h
@@ -18,7 +18,7 @@
 #if defined(CONFIG_MACH_SUN8I_A83T)
 #include <asm/arch/clock_sun8i_a83t.h>
 #elif defined(CONFIG_MACH_SUN6I) || defined(CONFIG_MACH_SUN8I) || \
-      defined(CONFIG_MACH_SUN50I)
+      defined(CONFIG_MACH_SUN50I) || defined(CONFIG_MACH_SUNIV)
 #include <asm/arch/clock_sun6i.h>
 #elif defined(CONFIG_MACH_SUN9I)
 #include <asm/arch/clock_sun9i.h>
diff --git a/arch/arm/include/asm/arch-sunxi/clock_sun6i.h b/arch/arm/include/asm/arch-sunxi/clock_sun6i.h
index d328df9597..40a458ab49 100644
--- a/arch/arm/include/asm/arch-sunxi/clock_sun6i.h
+++ b/arch/arm/include/asm/arch-sunxi/clock_sun6i.h
@@ -161,6 +161,14 @@ struct sunxi_ccm_reg {
 	u32 pll_lock_ctrl;	/* 0x320 PLL lock control, R40 only */
 };
 
+/* apb1 bit field */
+#ifdef CONFIG_MACH_SUNIV
+#define APB1_GATE_UART_SHIFT	(20)
+#define APB1_GATE_UART_MASK		(0x7 << APB1_GATE_UART_SHIFT)
+#define APB1_GATE_TWI_SHIFT	(16)
+#define APB1_GATE_TWI_MASK		(0x7 << APB1_GATE_TWI_SHIFT)
+#endif
+
 /* apb2 bit field */
 #define APB2_CLK_SRC_LOSC		(0x0 << 24)
 #define APB2_CLK_SRC_OSC24M		(0x1 << 24)
@@ -218,7 +226,12 @@ struct sunxi_ccm_reg {
 #define CCM_PLL5_CTRL_SIGMA_DELTA_EN	(0x1 << 24)
 #define CCM_PLL5_CTRL_EN		(0x1 << 31)
 
+#if !defined(CONFIG_MACH_SUNIV)
 #define PLL6_CFG_DEFAULT		0x90041811 /* 600 MHz */
+#else
+/* suniv pll6 doesn't have postdiv 2, so k is set to 0 */
+#define PLL6_CFG_DEFAULT		0x90041800
+#endif
 
 #define CCM_PLL6_CTRL_N_SHIFT		8
 #define CCM_PLL6_CTRL_N_MASK		(0x1f << CCM_PLL6_CTRL_N_SHIFT)
@@ -290,6 +303,8 @@ struct sunxi_ccm_reg {
 #define AHB_GATE_OFFSET_USB0		25
 #define AHB_GATE_OFFSET_SATA		24
 #endif
+#define AHB_GATE_OFFSET_SPI1		21
+#define AHB_GATE_OFFSET_SPI0		20
 #define AHB_GATE_OFFSET_MCTL		14
 #define AHB_GATE_OFFSET_GMAC		17
 #define AHB_GATE_OFFSET_NAND0		13
@@ -436,6 +451,8 @@ struct sunxi_ccm_reg {
 #ifdef CONFIG_MACH_SUN8I_R40
 #define AHB_RESET_OFFSET_SATA		24
 #endif
+#define AHB_RESET_OFFSET_SPI1		21
+#define AHB_RESET_OFFSET_SPI0		20
 #define AHB_RESET_OFFSET_GMAC		17
 #define AHB_RESET_OFFSET_MCTL		14
 #define AHB_RESET_OFFSET_MMC3		11
@@ -466,6 +483,14 @@ struct sunxi_ccm_reg {
 #define AHB_RESET_OFFSET_EPHY		2
 #define AHB_RESET_OFFSET_LVDS		0
 
+/* apb1 reset */
+#ifdef CONFIG_MACH_SUNIV
+#define APB1_RESET_UART_SHIFT	(20)
+#define APB1_RESET_UART_MASK		(0x7 << APB1_RESET_UART_SHIFT)
+#define APB1_RESET_TWI_SHIFT	(16)
+#define APB1_RESET_TWI_MASK		(0x7 << APB1_RESET_TWI_SHIFT)
+#endif
+
 /* apb2 reset */
 #define APB2_RESET_UART_SHIFT		(16)
 #define APB2_RESET_UART_MASK		(0xff << APB2_RESET_UART_SHIFT)
diff --git a/arch/arm/include/asm/arch-sunxi/clock_sun9i.h b/arch/arm/include/asm/arch-sunxi/clock_sun9i.h
index 0aeb6408d8..224fc47798 100644
--- a/arch/arm/include/asm/arch-sunxi/clock_sun9i.h
+++ b/arch/arm/include/asm/arch-sunxi/clock_sun9i.h
@@ -195,6 +195,10 @@ struct sunxi_ccm_reg {
 
 /* ahb gate1 field */
 #define AHB_GATE_OFFSET_DMA		24
+#define AHB_GATE_OFFSET_SPI3		23
+#define AHB_GATE_OFFSET_SPI2		22
+#define AHB_GATE_OFFSET_SPI1		21
+#define AHB_GATE_OFFSET_SPI0		20
 
 /* apb1_gate fields */
 #define APB1_GATE_UART_SHIFT		16
diff --git a/arch/arm/include/asm/arch-sunxi/cpu_sun4i.h b/arch/arm/include/asm/arch-sunxi/cpu_sun4i.h
index 2419062d45..e17f4db85c 100644
--- a/arch/arm/include/asm/arch-sunxi/cpu_sun4i.h
+++ b/arch/arm/include/asm/arch-sunxi/cpu_sun4i.h
@@ -111,6 +111,12 @@ defined(CONFIG_MACH_SUN50I)
 
 #define SUNXI_SJTAG_BASE		0x01c23c00
 
+#ifdef CONFIG_MACH_SUNIV
+#define SUNXI_UART0_BASE		0x01c25000
+#define SUNXI_UART1_BASE		0x01c25400
+#define SUNXI_UART2_BASE		0x01c25800
+#endif
+
 #define SUNXI_TP_BASE			0x01c25000
 #define SUNXI_PMU_BASE			0x01c25400
 
@@ -118,9 +124,11 @@ defined(CONFIG_MACH_SUN50I)
 #define SUNXI_CPUCFG_BASE		0x01c25c00
 #endif
 
+#ifndef CONFIG_MACH_SUNIV
 #define SUNXI_UART0_BASE		0x01c28000
 #define SUNXI_UART1_BASE		0x01c28400
 #define SUNXI_UART2_BASE		0x01c28800
+#endif
 #define SUNXI_UART3_BASE		0x01c28c00
 #define SUNXI_UART4_BASE		0x01c29000
 #define SUNXI_UART5_BASE		0x01c29400
diff --git a/arch/arm/include/asm/arch-sunxi/dram.h b/arch/arm/include/asm/arch-sunxi/dram.h
index 80abac95b8..e33cae232b 100644
--- a/arch/arm/include/asm/arch-sunxi/dram.h
+++ b/arch/arm/include/asm/arch-sunxi/dram.h
@@ -28,6 +28,8 @@
 #include <asm/arch/dram_sunxi_dw.h>
 #elif defined(CONFIG_MACH_SUN9I)
 #include <asm/arch/dram_sun9i.h>
+#elif defined(CONFIG_MACH_SUNIV)
+#include <asm/arch/dram_suniv.h>
 #else
 #include <asm/arch/dram_sun4i.h>
 #endif
diff --git a/arch/arm/include/asm/arch-sunxi/dram_suniv.h b/arch/arm/include/asm/arch-sunxi/dram_suniv.h
new file mode 100644
index 0000000000..088eb5b9eb
--- /dev/null
+++ b/arch/arm/include/asm/arch-sunxi/dram_suniv.h
@@ -0,0 +1,47 @@
+/*
+ * suniv DRAM controller register definition
+ *
+ * Copyright (C) 2018 Icenowy Zheng <icenowy@aosc.io>
+ *
+ * Based on xboot's arch/arm32/mach-f1c100s/sys-dram.c, which is:
+ *
+ * Copyright(c) 2007-2018 Jianjun Jiang <8192542@qq.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#define PIO_SDRAM_DRV			(0x2c0)
+#define PIO_SDRAM_PULL			(0x2c4)
+
+#define DRAM_SCONR			(0x00)
+#define DRAM_STMG0R			(0x04)
+#define DRAM_STMG1R			(0x08)
+#define DRAM_SCTLR			(0x0c)
+#define DRAM_SREFR			(0x10)
+#define DRAM_SEXTMR			(0x14)
+#define DRAM_DDLYR			(0x24)
+#define DRAM_DADRR			(0x28)
+#define DRAM_DVALR			(0x2c)
+#define DRAM_DRPTR0			(0x30)
+#define DRAM_DRPTR1			(0x34)
+#define DRAM_DRPTR2			(0x38)
+#define DRAM_DRPTR3			(0x3c)
+#define DRAM_SEFR			(0x40)
+#define DRAM_MAE			(0x44)
+#define DRAM_ASPR			(0x48)
+#define DRAM_SDLY0			(0x4C)
+#define DRAM_SDLY1			(0x50)
+#define DRAM_SDLY2			(0x54)
+#define DRAM_MCR0			(0x100)
+#define DRAM_MCR1			(0x104)
+#define DRAM_MCR2			(0x108)
+#define DRAM_MCR3			(0x10c)
+#define DRAM_MCR4			(0x110)
+#define DRAM_MCR5			(0x114)
+#define DRAM_MCR6			(0x118)
+#define DRAM_MCR7			(0x11c)
+#define DRAM_MCR8			(0x120)
+#define DRAM_MCR9			(0x124)
+#define DRAM_MCR10			(0x128)
+#define DRAM_MCR11			(0x12c)
+#define DRAM_BWCR			(0x140)
diff --git a/arch/arm/include/asm/arch-sunxi/gpio.h b/arch/arm/include/asm/arch-sunxi/gpio.h
index 24f85206c8..b0a946d3b7 100644
--- a/arch/arm/include/asm/arch-sunxi/gpio.h
+++ b/arch/arm/include/asm/arch-sunxi/gpio.h
@@ -167,6 +167,7 @@ enum sunxi_gpio_number {
 #define SUNXI_GPC_NAND		2
 #define SUNXI_GPC_SPI0		3
 #define SUNXI_GPC_SDC2		3
+#define SUNIV_GPC_SPI0		2
 #define SUN6I_GPC_SDC3		4
 #define SUN50I_GPC_SPI0		4
 
@@ -174,6 +175,7 @@ enum sunxi_gpio_number {
 #define SUNXI_GPD_LCD0		2
 #define SUNXI_GPD_LVDS0		3
 
+#define SUNIV_GPE_UART0		5
 #define SUN5I_GPE_SDC2		3
 #define SUN8I_GPE_TWI2		3
 
@@ -240,4 +242,8 @@ int axp_gpio_init(void);
 static inline int axp_gpio_init(void) { return 0; }
 #endif
 
+int sunxi_gpio_parse_pin_name(const char *pin_name);
+int sunxi_gpio_setup_dt_pins(const void * volatile fdt_blob, int node,
+			     const char * mux_name, int mux_sel);
+
 #endif /* _SUNXI_GPIO_H */
diff --git a/arch/arm/include/asm/arch-sunxi/spi.h b/arch/arm/include/asm/arch-sunxi/spi.h
new file mode 100644
index 0000000000..66301b24d5
--- /dev/null
+++ b/arch/arm/include/asm/arch-sunxi/spi.h
@@ -0,0 +1,29 @@
+/*
+ * (C) Copyright 2017 Whitebox Systems / Northend Systems B.V.
+ * S.J.R. van Schaik <stephan@whiteboxsystems.nl>
+ * M.B.W. Wajer <merlijn@whiteboxsystems.nl>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef _SUNXI_SPI_H
+#define _SUNXI_SPI_H
+
+#if defined(CONFIG_MACH_SUN6I) || defined(CONFIG_MACH_SUN8I) || \
+	defined(CONFIG_MACH_SUN9I) || defined(CONFIG_MACH_SUN50I)
+#include <asm/arch/spi_sun6i.h>
+#else
+#include <asm/arch/spi_sun4i.h>
+#endif
+
+#define SUNXI_SPI_BURST_CNT(cnt)	((cnt) & 0xffffff)
+#define SUNXI_SPI_XMIT_CNT(cnt)		((cnt) & 0xffffff)
+
+#define SUNXI_SPI_CLK_CTL_CDR2_MASK	0xff
+#define SUNXI_SPI_CLK_CTL_CDR2(div)	((div) & SUNXI_SPI_CLK_CTL_CDR2_MASK)
+#define SUNXI_SPI_CLK_CTL_CDR1_MASK	0xf
+#define SUNXI_SPI_CLK_CTL_CDR1(div)		\
+	(((div) & SUNXI_SPI_CLK_CTL_CDR1_MASK) << 8)
+#define SUNXI_SPI_CLK_CTL_DRS		BIT(12)
+
+#endif /* _SUNXI_SPI_H */
diff --git a/arch/arm/include/asm/arch-sunxi/spi_sun4i.h b/arch/arm/include/asm/arch-sunxi/spi_sun4i.h
new file mode 100644
index 0000000000..c94519651f
--- /dev/null
+++ b/arch/arm/include/asm/arch-sunxi/spi_sun4i.h
@@ -0,0 +1,53 @@
+/*
+ * (C) Copyright 2017 Whitebox Systems / Northend Systems B.V.
+ * S.J.R. van Schaik <stephan@whiteboxsystems.nl>
+ * M.B.W. Wajer <merlijn@whiteboxsystems.nl>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef _SUNXI_SPI_SUN4I_H
+#define _SUNXI_SPI_SUN4I_H
+
+struct sunxi_spi_regs {
+	uint32_t rx_data;	/* 0x00 */
+	uint32_t tx_data;	/* 0x04 */
+	union {
+		uint32_t glb_ctl;
+		uint32_t xfer_ctl;
+		uint32_t fifo_ctl;
+		uint32_t burst_ctl;
+	};			/* 0x08 */
+	uint32_t int_ctl;	/* 0x0c */
+	uint32_t int_sta;	/* 0x10 */
+	uint32_t dma_ctl;	/* 0x14 */
+	uint32_t wait;		/* 0x18 */
+	uint32_t clk_ctl;	/* 0x1c */
+	uint32_t burst_cnt;	/* 0x20 */
+	uint32_t xmit_cnt;	/* 0x24 */
+	uint32_t fifo_sta;	/* 0x28 */
+};
+
+#define SUNXI_SPI_CTL_SRST		0
+
+#define SUNXI_SPI_CTL_ENABLE		BIT(0)
+#define SUNXI_SPI_CTL_MASTER		BIT(1)
+#define SUNXI_SPI_CTL_CPHA		BIT(2)
+#define SUNXI_SPI_CTL_CPOL		BIT(3)
+#define SUNXI_SPI_CTL_CS_ACTIVE_LOW	BIT(4)
+#define SUNXI_SPI_CTL_TF_RST		BIT(8)
+#define SUNXI_SPI_CTL_RF_RST		BIT(9)
+#define SUNXI_SPI_CTL_XCH		BIT(10)
+#define SUNXI_SPI_CTL_CS_MASK		0x3000
+#define SUNXI_SPI_CTL_CS(cs)		(((cs) << 12) & SUNXI_SPI_CTL_CS_MASK)
+#define SUNXI_SPI_CTL_DHB		BIT(15)
+#define SUNXI_SPI_CTL_CS_MANUAL		BIT(16)
+#define SUNXI_SPI_CTL_CS_LEVEL		BIT(17)
+#define SUNXI_SPI_CTL_TP		BIT(18)
+
+#define SUNXI_SPI_FIFO_RF_CNT_MASK	0x7f
+#define SUNXI_SPI_FIFO_RF_CNT_BITS	0
+#define SUNXI_SPI_FIFO_TF_CNT_MASK	0x7f
+#define SUNXI_SPI_FIFO_TF_CNT_BITS	16
+
+#endif /* _SUNXI_SPI_SUN4I_H */
diff --git a/arch/arm/include/asm/arch-sunxi/spi_sun6i.h b/arch/arm/include/asm/arch-sunxi/spi_sun6i.h
new file mode 100644
index 0000000000..d9241848f9
--- /dev/null
+++ b/arch/arm/include/asm/arch-sunxi/spi_sun6i.h
@@ -0,0 +1,56 @@
+/*
+ * (C) Copyright 2017 Whitebox Systems / Northend Systems B.V.
+ * S.J.R. van Schaik <stephan@whiteboxsystems.nl>
+ * M.B.W. Wajer <merlijn@whiteboxsystems.nl>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef _SUNXI_SPI_SUN6I_H
+#define _SUNXI_SPI_SUN6I_H
+
+struct sunxi_spi_regs {
+	uint32_t unused0[1];
+	uint32_t glb_ctl;	/* 0x04 */
+	uint32_t xfer_ctl;	/* 0x08 */
+	uint32_t unused1[1];
+	uint32_t int_ctl;	/* 0x10 */
+	uint32_t int_sta;	/* 0x14 */
+	uint32_t fifo_ctl;	/* 0x18 */
+	uint32_t fifo_sta;	/* 0x1c */
+	uint32_t wait;		/* 0x20 */
+	uint32_t clk_ctl;	/* 0x24 */
+	uint32_t unused2[2];
+	uint32_t burst_cnt;	/* 0x30 */
+	uint32_t xmit_cnt;	/* 0x34 */
+	uint32_t burst_ctl;	/* 0x38 */
+	uint32_t unused3[113];
+	uint32_t tx_data;	/* 0x200 */
+	uint32_t unused4[63];
+	uint32_t rx_data;	/* 0x300 */
+};
+
+#define SUNXI_SPI_CTL_ENABLE		BIT(0)
+#define SUNXI_SPI_CTL_MASTER		BIT(1)
+#define SUNXI_SPI_CTL_TP		BIT(7)
+#define SUNXI_SPI_CTL_SRST		BIT(31)
+
+#define SUNXI_SPI_CTL_CPHA		BIT(0)
+#define SUNXI_SPI_CTL_CPOL		BIT(1)
+#define SUNXI_SPI_CTL_CS_ACTIVE_LOW	BIT(2)
+#define SUNXI_SPI_CTL_CS_MASK		0x30
+#define SUNXI_SPI_CTL_CS(cs)		(((cs) << 4) & SUNXI_SPI_CTL_CS_MASK)
+#define SUNXI_SPI_CTL_CS_MANUAL		BIT(6)
+#define SUNXI_SPI_CTL_CS_LEVEL		BIT(7)
+#define SUNXI_SPI_CTL_DHB		BIT(8)
+#define SUNXI_SPI_CTL_XCH		BIT(31)
+
+#define SUNXI_SPI_CTL_RF_RST		BIT(15)
+#define SUNXI_SPI_CTL_TF_RST		BIT(31)
+
+#define SUNXI_SPI_FIFO_RF_CNT_MASK	0x7f
+#define SUNXI_SPI_FIFO_RF_CNT_BITS	0
+#define SUNXI_SPI_FIFO_TF_CNT_MASK	0x7f
+#define SUNXI_SPI_FIFO_TF_CNT_BITS	16
+
+#endif /* _SUNXI_SPI_SUN6I_H */
diff --git a/arch/arm/mach-sunxi/Kconfig b/arch/arm/mach-sunxi/Kconfig
index 1fededd0a3..d24d8f4f42 100644
--- a/arch/arm/mach-sunxi/Kconfig
+++ b/arch/arm/mach-sunxi/Kconfig
@@ -1,7 +1,8 @@
 if ARCH_SUNXI
 
 config SPL_LDSCRIPT
-	default "arch/arm/cpu/armv7/sunxi/u-boot-spl.lds" if !ARM64
+	default "arch/arm/cpu/arm926ejs/sunxi/u-boot-spl.lds" if MACH_SUNIV
+	default "arch/arm/cpu/armv7/sunxi/u-boot-spl.lds" if !ARM64 && !MACH_SUNIV
 
 config IDENT_STRING
 	default " Allwinner Technology"
@@ -67,6 +68,12 @@ choice
 	prompt "Sunxi SoC Variant"
 	optional
 
+config MACH_SUNIV
+	bool "suniv (Allwinner F1C100s/F1C200s/F1C600/R6)"
+	select CPU_ARM926EJS
+	select SUNXI_GEN_SUN6I
+	select SUPPORT_SPL
+
 config MACH_SUN4I
 	bool "sun4i (Allwinner A10)"
 	select CPU_V7
@@ -393,6 +400,7 @@ config DRAM_ODT_CORRECTION
 endif
 
 config SYS_CLK_FREQ
+	default 408000000 if MACH_SUNIV
 	default 1008000000 if MACH_SUN4I
 	default 1008000000 if MACH_SUN5I
 	default 1008000000 if MACH_SUN6I
@@ -402,6 +410,7 @@ config SYS_CLK_FREQ
 	default 1008000000 if MACH_SUN9I
 
 config SYS_CONFIG_NAME
+	default "suniv" if MACH_SUNIV
 	default "sun4i" if MACH_SUN4I
 	default "sun5i" if MACH_SUN5I
 	default "sun6i" if MACH_SUN6I
@@ -624,7 +633,7 @@ config VIDEO_SUNXI
 
 config VIDEO_HDMI
 	bool "HDMI output support"
-	depends on VIDEO_SUNXI && !MACH_SUN8I
+	depends on VIDEO_SUNXI && !MACH_SUN8I && !MACH_SUNIV
 	default y
 	---help---
 	Say Y here to add support for outputting video over HDMI.
@@ -839,6 +848,7 @@ config GMAC_TX_DELAY
 	Set the GMAC Transmit Clock Delay Chain value.
 
 config SPL_STACK_R_ADDR
+	default 0x81e00000 if MACH_SUNIV
 	default 0x4fe00000 if MACH_SUN4I
 	default 0x4fe00000 if MACH_SUN5I
 	default 0x4fe00000 if MACH_SUN6I
diff --git a/arch/arm/mach-sunxi/Makefile b/arch/arm/mach-sunxi/Makefile
index 2a3c379b72..228dc47129 100644
--- a/arch/arm/mach-sunxi/Makefile
+++ b/arch/arm/mach-sunxi/Makefile
@@ -22,6 +22,7 @@ obj-$(CONFIG_MACH_SUN9I)	+= prcm.o
 obj-$(CONFIG_MACH_SUN6I)	+= p2wi.o
 obj-$(CONFIG_MACH_SUN8I)	+= rsb.o
 obj-$(CONFIG_MACH_SUN9I)	+= rsb.o
+obj-$(CONFIG_MACH_SUNIV)	+= clock_sun6i.o
 obj-$(CONFIG_MACH_SUN4I)	+= clock_sun4i.o
 obj-$(CONFIG_MACH_SUN5I)	+= clock_sun4i.o
 obj-$(CONFIG_MACH_SUN6I)	+= clock_sun6i.o
@@ -41,6 +42,7 @@ obj-$(CONFIG_AXP809_POWER)	+= pmic_bus.o
 obj-$(CONFIG_AXP818_POWER)	+= pmic_bus.o
 
 ifdef CONFIG_SPL_BUILD
+obj-$(CONFIG_MACH_SUNIV)	+= dram_suniv.o
 obj-$(CONFIG_MACH_SUN4I)	+= dram_sun4i.o
 obj-$(CONFIG_MACH_SUN5I)	+= dram_sun4i.o
 obj-$(CONFIG_MACH_SUN6I)	+= dram_sun6i.o
diff --git a/arch/arm/mach-sunxi/board.c b/arch/arm/mach-sunxi/board.c
index 0c60ee04da..6afbb7affa 100644
--- a/arch/arm/mach-sunxi/board.c
+++ b/arch/arm/mach-sunxi/board.c
@@ -74,7 +74,8 @@ static int gpio_init(void)
 	sunxi_gpio_set_cfgpin(SUNXI_GPB(22), SUNXI_GPIO_INPUT);
 	sunxi_gpio_set_cfgpin(SUNXI_GPB(23), SUNXI_GPIO_INPUT);
 #endif
-#if defined(CONFIG_MACH_SUN8I) && !defined(CONFIG_MACH_SUN8I_R40)
+#if (defined(CONFIG_MACH_SUN8I) && !defined(CONFIG_MACH_SUN8I_R40)) || \
+    defined(CONFIG_MACH_SUNIV)
 	sunxi_gpio_set_cfgpin(SUNXI_GPF(2), SUN8I_GPF_UART0);
 	sunxi_gpio_set_cfgpin(SUNXI_GPF(4), SUN8I_GPF_UART0);
 #else
@@ -82,6 +83,10 @@ static int gpio_init(void)
 	sunxi_gpio_set_cfgpin(SUNXI_GPF(4), SUNXI_GPF_UART0);
 #endif
 	sunxi_gpio_set_pull(SUNXI_GPF(4), 1);
+#elif CONFIG_CONS_INDEX == 1 && defined(CONFIG_MACH_SUNIV)
+	sunxi_gpio_set_cfgpin(SUNXI_GPE(0), SUNIV_GPE_UART0);
+	sunxi_gpio_set_cfgpin(SUNXI_GPE(1), SUNIV_GPE_UART0);
+	sunxi_gpio_set_pull(SUNXI_GPE(1), SUNXI_GPIO_PULL_UP);
 #elif CONFIG_CONS_INDEX == 1 && (defined(CONFIG_MACH_SUN4I) || \
 				 defined(CONFIG_MACH_SUN7I) || \
 				 defined(CONFIG_MACH_SUN8I_R40))
@@ -186,7 +191,8 @@ void s_init(void)
 	/* No H3 BSP, boot0 seems to not modify SUNXI_SRAMC_BASE + 0x44 */
 #endif
 
-#if !defined(CONFIG_ARM_CORTEX_CPU_IS_UP) && !defined(CONFIG_ARM64)
+#if !defined(CONFIG_ARM_CORTEX_CPU_IS_UP) && !defined(CONFIG_ARM64) && \
+	!defined(CONFIG_MACH_SUNIV)
 	/* Enable SMP mode for CPU0, by setting bit 6 of Auxiliary Ctl reg */
 	asm volatile(
 		"mrc p15, 0, r0, c1, c0, 1\n"
@@ -255,10 +261,32 @@ uint32_t sunxi_get_boot_device(void)
 }
 
 #ifdef CONFIG_SPL_BUILD
+
+#ifndef CONFIG_MACH_SUNIV
 u32 spl_boot_device(void)
 {
 	return sunxi_get_boot_device();
 }
+#else
+/*
+ * suniv BROM do not pass the boot media type to SPL, so we try with the
+ * boot sequence in BROM: mmc0->spinor->fail.
+ */
+void board_boot_order(u32 *spl_boot_list)
+{
+	/*
+	 * See the comments above in sunxi_get_boot_device() for infomation
+	 * about FEL boot.
+	 */
+	if (!is_boot0_magic(SPL_ADDR + 4)) {
+		spl_boot_list[0] = BOOT_DEVICE_BOARD;
+		return;
+	}
+
+	spl_boot_list[0] = BOOT_DEVICE_MMC1;
+	spl_boot_list[1] = BOOT_DEVICE_SPI;
+}
+#endif
 
 /* No confirmation data available in SPL yet. Hardcode bootmode */
 u32 spl_boot_mode(const u32 boot_device)
diff --git a/arch/arm/mach-sunxi/clock.c b/arch/arm/mach-sunxi/clock.c
index e6f53f91e6..7eba89c0a7 100644
--- a/arch/arm/mach-sunxi/clock.c
+++ b/arch/arm/mach-sunxi/clock.c
@@ -37,7 +37,8 @@ int clock_init(void)
 }
 
 /* These functions are shared between various SoCs so put them here. */
-#if defined CONFIG_SUNXI_GEN_SUN6I && !defined CONFIG_MACH_SUN9I
+#if defined CONFIG_SUNXI_GEN_SUN6I && !defined CONFIG_MACH_SUN9I && \
+	!defined CONFIG_MACH_SUNIV
 int clock_twi_onoff(int port, int state)
 {
 	struct sunxi_ccm_reg *const ccm =
diff --git a/arch/arm/mach-sunxi/clock_sun6i.c b/arch/arm/mach-sunxi/clock_sun6i.c
index 870ff5b1e0..a01b0dbe1b 100644
--- a/arch/arm/mach-sunxi/clock_sun6i.c
+++ b/arch/arm/mach-sunxi/clock_sun6i.c
@@ -22,7 +22,8 @@ void clock_init_safe(void)
 	struct sunxi_ccm_reg * const ccm =
 		(struct sunxi_ccm_reg *)SUNXI_CCM_BASE;
 
-#if !defined(CONFIG_MACH_SUNXI_H3_H5) && !defined(CONFIG_MACH_SUN50I)
+#if !defined(CONFIG_MACH_SUNXI_H3_H5) && !defined(CONFIG_MACH_SUN50I) && \
+	!defined(CONFIG_MACH_SUNIV)
 	struct sunxi_prcm_reg * const prcm =
 		(struct sunxi_prcm_reg *)SUNXI_PRCM_BASE;
 
@@ -48,9 +49,11 @@ void clock_init_safe(void)
 
 	writel(AHB1_ABP1_DIV_DEFAULT, &ccm->ahb1_apb1_div);
 
+#ifndef CONFIG_MACH_SUNIV
 	writel(MBUS_CLK_DEFAULT, &ccm->mbus0_clk_cfg);
 	if (IS_ENABLED(CONFIG_MACH_SUN6I))
 		writel(MBUS_CLK_DEFAULT, &ccm->mbus1_clk_cfg);
+#endif
 
 #if defined(CONFIG_MACH_SUN8I_R40) && defined(CONFIG_SUNXI_AHCI)
 	setbits_le32(&ccm->sata_pll_cfg, CCM_SATA_PLL_DEFAULT);
@@ -86,6 +89,7 @@ void clock_init_uart(void)
 	struct sunxi_ccm_reg *const ccm =
 		(struct sunxi_ccm_reg *)SUNXI_CCM_BASE;
 
+#ifndef CONFIG_MACH_SUNIV
 	/* uart clock source is apb2 */
 	writel(APB2_CLK_SRC_OSC24M|
 	       APB2_CLK_RATE_N_1|
@@ -101,6 +105,24 @@ void clock_init_uart(void)
 	setbits_le32(&ccm->apb2_reset_cfg,
 		     1 << (APB2_RESET_UART_SHIFT +
 			   CONFIG_CONS_INDEX - 1));
+#else
+	/* suniv doesn't have apb2, so uart clock source is apb1 */
+	writel(PLL6_CFG_DEFAULT, &ccm->pll6_cfg);
+	while (!(readl(&ccm->pll6_cfg) & CCM_PLL6_CTRL_LOCK))
+		;
+
+	writel(AHB1_ABP1_DIV_DEFAULT, &ccm->ahb1_apb1_div);
+
+	/* open the clock for uart */
+	setbits_le32(&ccm->apb1_gate,
+		     CLK_GATE_OPEN << (APB1_GATE_UART_SHIFT +
+				       CONFIG_CONS_INDEX - 1));
+
+	/* deassert uart reset */
+	setbits_le32(&ccm->apb1_reset_cfg,
+		     1 << (APB1_RESET_UART_SHIFT +
+			   CONFIG_CONS_INDEX - 1));
+#endif
 #else
 	/* enable R_PIO and R_UART clocks, and de-assert resets */
 	prcm_apb0_enable(PRCM_APB0_GATE_PIO | PRCM_APB0_GATE_UART);
@@ -124,10 +146,15 @@ void clock_set_pll1(unsigned int clk)
 	}
 
 	/* Switch to 24MHz clock while changing PLL1 */
+#ifndef CONFIG_MACH_SUNIV
 	writel(AXI_DIV_3 << AXI_DIV_SHIFT |
 	       ATB_DIV_2 << ATB_DIV_SHIFT |
 	       CPU_CLK_SRC_OSC24M << CPU_CLK_SRC_SHIFT,
 	       &ccm->cpu_axi_cfg);
+#else
+	writel(CPU_CLK_SRC_OSC24M << CPU_CLK_SRC_SHIFT,
+	       &ccm->cpu_axi_cfg);
+#endif
 
 	/*
 	 * sun6i: PLL1 rate = ((24000000 * n * k) >> 0) / m   (p is ignored)
@@ -136,13 +163,27 @@ void clock_set_pll1(unsigned int clk)
 	writel(CCM_PLL1_CTRL_EN | CCM_PLL1_CTRL_P(p) |
 	       CCM_PLL1_CTRL_N(clk / (24000000 * k / m)) |
 	       CCM_PLL1_CTRL_K(k) | CCM_PLL1_CTRL_M(m), &ccm->pll1_cfg);
+#ifndef CONFIG_MACH_SUNIV
 	sdelay(200);
+#else
+	do {
+		/* ARM926EJ-S code do not have sdelay */
+		volatile int i = 200;
+
+		while (i > 0) i--;
+	} while(0);
+#endif
 
 	/* Switch CPU to PLL1 */
+#ifndef CONFIG_MACH_SUNIV
 	writel(AXI_DIV_3 << AXI_DIV_SHIFT |
 	       ATB_DIV_2 << ATB_DIV_SHIFT |
 	       CPU_CLK_SRC_PLL1 << CPU_CLK_SRC_SHIFT,
 	       &ccm->cpu_axi_cfg);
+#else
+	writel(CPU_CLK_SRC_PLL1 << CPU_CLK_SRC_SHIFT,
+	       &ccm->cpu_axi_cfg);
+#endif
 }
 #endif
 
@@ -312,7 +353,11 @@ unsigned int clock_get_pll6(void)
 	uint32_t rval = readl(&ccm->pll6_cfg);
 	int n = ((rval & CCM_PLL6_CTRL_N_MASK) >> CCM_PLL6_CTRL_N_SHIFT) + 1;
 	int k = ((rval & CCM_PLL6_CTRL_K_MASK) >> CCM_PLL6_CTRL_K_SHIFT) + 1;
+#ifndef CONFIG_MACH_SUNIV
 	return 24000000 * n * k / 2;
+#else
+	return 24000000 * n * k;
+#endif
 }
 
 unsigned int clock_get_mipi_pll(void)
diff --git a/arch/arm/mach-sunxi/cpu_info.c b/arch/arm/mach-sunxi/cpu_info.c
index 25a5ec26a0..f856a32178 100644
--- a/arch/arm/mach-sunxi/cpu_info.c
+++ b/arch/arm/mach-sunxi/cpu_info.c
@@ -57,6 +57,8 @@ int print_cpuinfo(void)
 {
 #ifdef CONFIG_MACH_SUN4I
 	puts("CPU:   Allwinner A10 (SUN4I)\n");
+#elif defined CONFIG_MACH_SUNIV
+	puts("CPU:   Allwinner F Series (SUNIV)\n");
 #elif defined CONFIG_MACH_SUN5I
 	u32 val = readl(SUNXI_SID_BASE + 0x08);
 	switch ((val >> 12) & 0xf) {
diff --git a/arch/arm/mach-sunxi/dram_helpers.c b/arch/arm/mach-sunxi/dram_helpers.c
index 95143d19ab..2a87cded9a 100644
--- a/arch/arm/mach-sunxi/dram_helpers.c
+++ b/arch/arm/mach-sunxi/dram_helpers.c
@@ -26,7 +26,10 @@ void mctl_await_completion(u32 *reg, u32 mask, u32 val)
 
 /*
  * Test if memory at offset offset matches memory at begin of DRAM
+ *
+ * Note: dsb() is not available on ARMv5 in Thumb mode
  */
+#ifndef CONFIG_MACH_SUNIV
 bool mctl_mem_matches(u32 offset)
 {
 	/* Try to write different values to RAM at two addresses */
@@ -37,3 +40,4 @@ bool mctl_mem_matches(u32 offset)
 	return readl(CONFIG_SYS_SDRAM_BASE) ==
 	       readl((ulong)CONFIG_SYS_SDRAM_BASE + offset);
 }
+#endif
diff --git a/arch/arm/mach-sunxi/dram_suniv.c b/arch/arm/mach-sunxi/dram_suniv.c
new file mode 100644
index 0000000000..40aebf6eba
--- /dev/null
+++ b/arch/arm/mach-sunxi/dram_suniv.c
@@ -0,0 +1,496 @@
+/*
+ * suniv DRAM initialization
+ *
+ * Copyright (C) 2018 Icenowy Zheng <icenowy@aosc.io>
+ *
+ * Based on xboot's arch/arm32/mach-f1c100s/sys-dram.c, which is:
+ *
+ * Copyright(c) 2007-2018 Jianjun Jiang <8192542@qq.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/dram.h>
+#include <asm/arch/gpio.h>
+
+#define SDR_T_CAS			(0x2)
+#define SDR_T_RAS			(0x8)
+#define SDR_T_RCD			(0x3)
+#define SDR_T_RP			(0x3)
+#define SDR_T_WR			(0x3)
+#define SDR_T_RFC			(0xd)
+#define SDR_T_XSR			(0xf9)
+#define SDR_T_RC			(0xb)
+#define SDR_T_INIT			(0x8)
+#define SDR_T_INIT_REF			(0x7)
+#define SDR_T_WTR			(0x2)
+#define SDR_T_RRD			(0x2)
+#define SDR_T_XP			(0x0)
+
+enum dram_type
+{
+	DRAM_TYPE_SDR	= 0,
+	DRAM_TYPE_DDR	= 1,
+	/* Not supported yet. */
+	DRAM_TYPE_MDDR	= 2,
+};
+
+struct dram_para
+{
+	u32 size;		/* dram size (unit: MByte) */
+	u32 clk;		/* dram work clock (unit: MHz) */
+	u32 access_mode;	/* 0: interleave mode 1: sequence mode */
+	u32 cs_num;		/* dram chip count  1: one chip  2: two chip */
+	u32 ddr8_remap;		/* for 8bits data width DDR 0: normal  1: 8bits */
+	enum dram_type sdr_ddr;
+	u32 bwidth;		/* dram bus width */
+	u32 col_width;		/* column address width */
+	u32 row_width;		/* row address width */
+	u32 bank_size;		/* dram bank count */
+	u32 cas;		/* dram cas */
+};
+
+struct dram_para suniv_dram_para = {
+	.size = 32,
+	.clk = 156,
+	.access_mode = 1,
+	.cs_num = 1,
+	.ddr8_remap = 0,
+	.sdr_ddr = DRAM_TYPE_DDR,
+	.bwidth = 16,
+	.col_width = 10,
+	.row_width = 13,
+	.bank_size = 4,
+	.cas = 0x3,
+};
+
+static int dram_initial(void)
+{
+	unsigned int time = 0xffffff;
+
+	setbits_le32(SUNXI_DRAMC_BASE + DRAM_SCTLR, 0x1);
+	while((readl(SUNXI_DRAMC_BASE + DRAM_SCTLR) & 0x1) && time--)
+	{
+		if(time == 0)
+			return 0;
+	}
+	return 1;
+}
+
+static int dram_delay_scan(void)
+{
+	unsigned int time = 0xffffff;
+
+	setbits_le32(SUNXI_DRAMC_BASE + DRAM_DDLYR, 0x1);
+	while((readl(SUNXI_DRAMC_BASE + DRAM_DDLYR) & 0x1) && time--)
+	{
+		if(time == 0)
+			return 0;
+	}
+	return 1;
+}
+
+static void dram_set_autofresh_cycle(u32 clk)
+{
+	u32 val = 0;
+	u32 row = 0;
+	u32 temp = 0;
+
+	row = readl(SUNXI_DRAMC_BASE + DRAM_SCONR);
+	row &= 0x1e0;
+	row >>= 0x5;
+
+	if(row == 0xc)
+	{
+		if(clk >= 1000000)
+		{
+			temp = clk + (clk >> 3) + (clk >> 4) + (clk >> 5);
+			while(temp >= (10000000 >> 6))
+			{
+				temp -= (10000000 >> 6);
+				val++;
+			}
+		}
+		else
+		{
+			val = (clk * 499) >> 6;
+		}
+	}
+	else if(row == 0xb)
+	{
+		if(clk >= 1000000)
+		{
+			temp = clk + (clk >> 3) + (clk >> 4) + (clk >> 5);
+			while(temp >= (10000000 >> 7))
+			{
+				temp -= (10000000 >> 7);
+				val++;
+			}
+		}
+		else
+		{
+			val = (clk * 499) >> 5;
+		}
+	}
+	writel(val, SUNXI_DRAMC_BASE + DRAM_SREFR);
+}
+
+static int dram_para_setup(struct dram_para * para)
+{
+	u32 val = 0;
+
+	val = (para->ddr8_remap) | (0x1 << 1) |
+	      ((para->bank_size >> 2) << 3) |
+	      ((para->cs_num >> 1) << 4) |
+	      ((para->row_width - 1) << 5) |
+	      ((para->col_width - 1) << 9) |
+	      ((para->sdr_ddr ? (para->bwidth >> 4) : (para->bwidth >> 5)) << 13) |
+	      (para->access_mode << 15) |
+	      (para->sdr_ddr << 16);
+
+	writel(val, SUNXI_DRAMC_BASE + DRAM_SCONR);
+	setbits_le32(SUNXI_DRAMC_BASE + DRAM_SCTLR, 0x1 << 19);
+	return dram_initial();
+}
+
+static u32 dram_check_delay(u32 bwidth)
+{
+	u32 dsize;
+	int i,j;
+	u32 num = 0;
+	u32 dflag = 0;
+
+	dsize = ((bwidth == 16) ? 4 : 2);
+	for(i = 0; i < dsize; i++)
+	{
+		if(i == 0)
+			dflag = readl(SUNXI_DRAMC_BASE + DRAM_DRPTR0);
+		else if(i == 1)
+			dflag = readl(SUNXI_DRAMC_BASE + DRAM_DRPTR1);
+		else if(i == 2)
+			dflag = readl(SUNXI_DRAMC_BASE + DRAM_DRPTR2);
+		else if(i == 3)
+			dflag = readl(SUNXI_DRAMC_BASE + DRAM_DRPTR3);
+
+		for(j = 0; j < 32; j++)
+		{
+			if(dflag & 0x1)
+				num++;
+			dflag >>= 1;
+		}
+	}
+	return num;
+}
+
+static int sdr_readpipe_scan(void)
+{
+	u32 k = 0;
+
+	for(k = 0; k < 32; k++)
+	{
+		writel(k, CONFIG_SYS_SDRAM_BASE + 4 * k);
+	}
+	for(k = 0; k < 32; k++)
+	{
+		if(readl(CONFIG_SYS_SDRAM_BASE + 4 * k) != k)
+			return 0;
+	}
+	return 1;
+}
+
+static u32 sdr_readpipe_select(void)
+{
+	u32 value = 0;
+	u32 i = 0;
+	for(i = 0; i < 8; i++)
+	{
+		clrsetbits_le32(SUNXI_DRAMC_BASE + DRAM_SCTLR,
+				0x7 << 6, i << 6);
+		if(sdr_readpipe_scan())
+		{
+			value = i;
+			return value;
+		}
+	}
+	return value;
+}
+
+static u32 dram_check_type(struct dram_para * para)
+{
+	u32 times = 0;
+	int i;
+
+	for(i = 0; i < 8; i++)
+	{
+		clrsetbits_le32(SUNXI_DRAMC_BASE + DRAM_SCTLR,
+				0x7 << 6, i << 6);
+		dram_delay_scan();
+		if(readl(SUNXI_DRAMC_BASE + DRAM_DDLYR) & 0x30)
+			times++;
+	}
+
+	if(times == 8)
+	{
+		para->sdr_ddr = DRAM_TYPE_SDR;
+		return 0;
+	}
+	else
+	{
+		para->sdr_ddr = DRAM_TYPE_DDR;
+		return 1;
+	}
+}
+
+static u32 dram_scan_readpipe(struct dram_para * para)
+{
+	u32 rp_best = 0, rp_val = 0;
+	u32 readpipe[8];
+	int i;
+
+	if(para->sdr_ddr == DRAM_TYPE_DDR)
+	{
+		for(i = 0; i < 8; i++)
+		{
+			clrsetbits_le32(SUNXI_DRAMC_BASE + DRAM_SCTLR,
+					0x7 << 6, i << 6);
+			dram_delay_scan();
+			readpipe[i] = 0;
+			if((((readl(SUNXI_DRAMC_BASE + DRAM_DDLYR) >> 4) & 0x3) == 0x0) &&
+				(((readl(SUNXI_DRAMC_BASE + DRAM_DDLYR) >> 4) & 0x1) == 0x0))
+			{
+				readpipe[i] = dram_check_delay(para->bwidth);
+			}
+			if(rp_val < readpipe[i])
+			{
+				rp_val = readpipe[i];
+				rp_best = i;
+			}
+		}
+		clrsetbits_le32(SUNXI_DRAMC_BASE + DRAM_SCTLR,
+				0x7 << 6, rp_best << 6);
+		dram_delay_scan();
+	}
+	else
+	{
+		clrbits_le32(SUNXI_DRAMC_BASE + DRAM_SCONR,
+			     (0x1 << 16) | (0x3 << 13));
+		rp_best = sdr_readpipe_select();
+		clrsetbits_le32(SUNXI_DRAMC_BASE + DRAM_SCTLR,
+				0x7 << 6, rp_best << 6);
+	}
+	return 0;
+}
+
+static u32 dram_get_dram_size(struct dram_para * para)
+{
+	u32 colflag = 10, rowflag = 13;
+	u32 val1 = 0;
+	u32 count = 0;
+	u32 addr1, addr2;
+	int i;
+
+	para->col_width = colflag;
+	para->row_width = rowflag;
+	dram_para_setup(para);
+	dram_scan_readpipe(para);
+	for(i = 0; i < 32; i++)
+	{
+		*((u8 *)(CONFIG_SYS_SDRAM_BASE + 0x200 + i)) = 0x11;
+		*((u8 *)(CONFIG_SYS_SDRAM_BASE + 0x600 + i)) = 0x22;
+	}
+	for(i = 0; i < 32; i++)
+	{
+		val1 = *((u8 *)(CONFIG_SYS_SDRAM_BASE + 0x200 + i));
+		if(val1 == 0x22)
+			count++;
+	}
+	if(count == 32)
+	{
+		colflag = 9;
+	}
+	else
+	{
+		colflag = 10;
+	}
+	count = 0;
+	para->col_width = colflag;
+	para->row_width = rowflag;
+	dram_para_setup(para);
+	if(colflag == 10)
+	{
+		addr1 = CONFIG_SYS_SDRAM_BASE + 0x400000;
+		addr2 = CONFIG_SYS_SDRAM_BASE + 0xc00000;
+	}
+	else
+	{
+		addr1 = CONFIG_SYS_SDRAM_BASE + 0x200000;
+		addr2 = CONFIG_SYS_SDRAM_BASE + 0x600000;
+	}
+	for(i = 0; i < 32; i++)
+	{
+		*((u8 *)(addr1 + i)) = 0x33;
+		*((u8 *)(addr2 + i)) = 0x44;
+	}
+	for(i = 0; i < 32; i++)
+	{
+		val1 = *((u8 *)(addr1 + i));
+		if(val1 == 0x44)
+		{
+			count++;
+		}
+	}
+	if(count == 32)
+	{
+		rowflag = 12;
+	}
+	else
+	{
+		rowflag = 13;
+	}
+	para->col_width = colflag;
+	para->row_width = rowflag;
+	if(para->row_width != 13)
+	{
+		para->size = 16;
+	}
+	else if(para->col_width == 10)
+	{
+		para->size = 64;
+	}
+	else
+	{
+		para->size = 32;
+	}
+	dram_set_autofresh_cycle(para->clk);
+	para->access_mode = 0;
+	dram_para_setup(para);
+
+	return 0;
+}
+
+static void simple_dram_check(void)
+{
+	volatile u32 *dram = (u32*) CONFIG_SYS_SDRAM_BASE;
+	int i;
+
+	for(i = 0; i < 0x40; i++)
+	{
+		dram[i] = i;
+	}
+
+	for(i = 0; i < 0x40; i++)
+	{
+		if (dram[i] != i) {
+			printf("DRAM initialization failed: dram[0x%x] != 0x%x.", i, dram[i]);
+			while(1) {}
+		}
+	}
+
+	for(i = 0; i < 0x10000; i += 0x40)
+	{
+		dram[i] = i;
+	}
+
+	for(i = 0; i < 0x10000; i += 0x40)
+	{
+		if (dram[i] != i) {
+			printf("DRAM initialization failed: dram[0x%x] != 0x%x.", i, dram[i]);
+			while(1) {}
+		}
+	}
+}
+
+static void do_dram_init(struct dram_para * para)
+{
+	struct sunxi_ccm_reg * const ccm =
+		(struct sunxi_ccm_reg *)SUNXI_CCM_BASE;
+	u32 val;
+	u8 m; /* PLL_DDR clock factor */
+
+	sunxi_gpio_set_cfgpin(SUNXI_GPB(3), 0x7);
+	udelay(5000);
+	/* TODO: dig out what's them... some analog register? */
+	if(((para->cas) >> 3) & 0x1)
+	{
+		setbits_le32(SUNXI_PIO_BASE + 0x2c4, (0x1 << 23) | (0x20 << 17));
+	}
+
+	if((para->clk >= 144) && (para->clk <= 180))
+	{
+		writel(0xaaa, SUNXI_PIO_BASE + 0x2c0);
+	}
+	if(para->clk >= 180)
+	{
+		writel(0xfff, SUNXI_PIO_BASE + 0x2c0);
+	}
+
+	if(para->cas & BIT(4))
+	{
+		writel(0xd1303333, &ccm->pll5_pattern_cfg);
+	}
+	else if(para->cas & BIT(5))
+	{
+		writel(0xcce06666, &ccm->pll5_pattern_cfg);
+	}
+	else if(para->cas & BIT(6))
+	{
+		writel(0xc8909999, &ccm->pll5_pattern_cfg);
+	}
+	else if(para->cas & BIT(7))
+	{
+		writel(0xc440cccc, &ccm->pll5_pattern_cfg);
+	}
+
+	if((para->clk) <= 96)
+		m = 2;
+	else
+		m = 1;
+
+	val = CCM_PLL5_CTRL_EN | CCM_PLL5_CTRL_UPD |
+	      CCM_PLL5_CTRL_N((para->clk * 2) / (24 / m)) |
+	      CCM_PLL5_CTRL_K(1) | CCM_PLL5_CTRL_M(m);
+	if(para->cas & GENMASK(7, 4))
+	{
+		val |= CCM_PLL5_CTRL_SIGMA_DELTA_EN;
+	}
+	writel(val, &ccm->pll5_cfg);
+	setbits_le32(&ccm->pll5_cfg, CCM_PLL5_CTRL_UPD);
+	mctl_await_completion(&ccm->pll5_cfg, BIT(28), BIT(28));
+	udelay(5000);
+
+	setbits_le32(&ccm->ahb_gate0, (1 << AHB_GATE_OFFSET_MCTL));
+	clrbits_le32(&ccm->ahb_reset0_cfg, (1 << AHB_RESET_OFFSET_MCTL));
+	udelay(50);
+	setbits_le32(&ccm->ahb_reset0_cfg, (1 << AHB_RESET_OFFSET_MCTL));
+
+	clrsetbits_le32(SUNXI_PIO_BASE + 0x2c4, (1 << 16),
+			((para->sdr_ddr == DRAM_TYPE_DDR) << 16));
+
+	val = (SDR_T_CAS << 0) | (SDR_T_RAS << 3) | (SDR_T_RCD << 7) |
+	      (SDR_T_RP << 10) | (SDR_T_WR << 13) | (SDR_T_RFC << 15) |
+	      (SDR_T_XSR << 19) | (SDR_T_RC << 28);
+	writel(val, SUNXI_DRAMC_BASE + DRAM_STMG0R);
+	val = (SDR_T_INIT << 0) | (SDR_T_INIT_REF << 16) | (SDR_T_WTR << 20) |
+	      (SDR_T_RRD << 22) | (SDR_T_XP << 25);
+	writel(val, SUNXI_DRAMC_BASE + DRAM_STMG1R);
+	dram_para_setup(para);
+	dram_check_type(para);
+
+	clrsetbits_le32(SUNXI_PIO_BASE + 0x2c4, (1 << 16),
+			((para->sdr_ddr == DRAM_TYPE_DDR) << 16));
+
+	dram_set_autofresh_cycle(para->clk);
+	dram_scan_readpipe(para);
+	dram_get_dram_size(para);
+	simple_dram_check();
+}
+
+unsigned long sunxi_dram_init(void)
+{
+	do_dram_init(&suniv_dram_para);
+
+	return suniv_dram_para.size * 1024 * 1024;
+}
diff --git a/arch/arm/mach-sunxi/pinmux.c b/arch/arm/mach-sunxi/pinmux.c
index b026f78ca5..f1e1e8f091 100644
--- a/arch/arm/mach-sunxi/pinmux.c
+++ b/arch/arm/mach-sunxi/pinmux.c
@@ -9,6 +9,9 @@
 #include <common.h>
 #include <asm/io.h>
 #include <asm/arch/gpio.h>
+#include <fdtdec.h>
+#include <fdt_support.h>
+#include <dt-bindings/pinctrl/sun4i-a10.h>
 
 void sunxi_gpio_set_cfgbank(struct sunxi_gpio *pio, int bank_offset, u32 val)
 {
@@ -69,3 +72,77 @@ int sunxi_gpio_set_pull(u32 pin, u32 val)
 
 	return 0;
 }
+
+int sunxi_gpio_parse_pin_name(const char *pin_name)
+{
+	int pin;
+
+	if (pin_name[0] != 'P')
+		return -1;
+
+	if (pin_name[1] < 'A' || pin_name[1] > 'Z')
+		return -1;
+
+	pin = (pin_name[1] - 'A') << 5;
+	pin += simple_strtol(&pin_name[2], NULL, 10);
+
+	return pin;
+}
+
+int sunxi_gpio_setup_dt_pins(const void * volatile fdt_blob, int node,
+			     const char * mux_name, int mux_sel)
+{
+	int drive, pull, pin, i;
+	const char *pin_name;
+	int offset;
+
+	offset = fdtdec_lookup_phandle(fdt_blob, node, "pinctrl-0");
+	if (offset < 0)
+		return offset;
+
+	drive = fdt_getprop_u32_default_node(fdt_blob, offset, 0,
+					     "drive-strength", 0);
+	if (drive) {
+		if (drive <= 10)
+			drive = SUN4I_PINCTRL_10_MA;
+		else if (drive <= 20)
+			drive = SUN4I_PINCTRL_20_MA;
+		else if (drive <= 30)
+			drive = SUN4I_PINCTRL_30_MA;
+		else
+			drive = SUN4I_PINCTRL_40_MA;
+	} else {
+		drive = fdt_getprop_u32_default_node(fdt_blob, offset, 0,
+						     "allwinner,drive", 4);
+	}
+
+	if (fdt_get_property(fdt_blob, offset, "bias-pull-up", NULL))
+		pull = SUN4I_PINCTRL_PULL_UP;
+	else if (fdt_get_property(fdt_blob, offset, "bias-disable", NULL))
+		pull = SUN4I_PINCTRL_NO_PULL;
+	else if (fdt_get_property(fdt_blob, offset, "bias-pull-down", NULL))
+		pull = SUN4I_PINCTRL_PULL_DOWN;
+	else
+		pull = fdt_getprop_u32_default_node(fdt_blob, offset, 0,
+						    "allwinner,pull", 0);
+
+	for (i = 0; ; i++) {
+		pin_name = fdt_stringlist_get(fdt_blob, offset,
+					      "allwinner,pins", i, NULL);
+		if (!pin_name) {
+			pin_name = fdt_stringlist_get(fdt_blob, offset,
+						      "pins", i, NULL);
+			if (!pin_name)
+				break;
+		}
+		pin = sunxi_gpio_parse_pin_name(pin_name);
+		if (pin < 0)
+			continue;
+
+		sunxi_gpio_set_cfgpin(pin, mux_sel);
+		sunxi_gpio_set_drv(pin, drive);
+		sunxi_gpio_set_pull(pin, pull);
+	}
+
+	return i;
+}
diff --git a/arch/arm/mach-uniphier/dram_init.c b/arch/arm/mach-uniphier/dram_init.c
index e9672d2f1b..f678114251 100644
--- a/arch/arm/mach-uniphier/dram_init.c
+++ b/arch/arm/mach-uniphier/dram_init.c
@@ -205,6 +205,7 @@ int dram_init(void)
 		return ret;
 
 	for (i = 0; i < ARRAY_SIZE(dram_map); i++) {
+		unsigned long max_size;
 
 		if (!dram_map[i].size)
 			break;
@@ -218,9 +219,32 @@ int dram_init(void)
 							dram_map[i].base)
 			break;
 
+		/*
+		 * Do not use memory that exceeds 32bit address range.  U-Boot
+		 * relocates itself to the end of the effectively available RAM.
+		 * This could be a problem for DMA engines that do not support
+		 * 64bit address (SDMA of SDHCI, UniPhier AV-ether, etc.)
+		 */
+		if (dram_map[i].base >= 1ULL << 32)
+			break;
+
+		max_size = (1ULL << 32) - dram_map[i].base;
+
+		if (dram_map[i].size > max_size) {
+			gd->ram_size += max_size;
+			break;
+		}
+
 		gd->ram_size += dram_map[i].size;
 	}
 
+	/*
+	 * LD20 uses the last 64 byte for each channel for dynamic
+	 * DDR PHY training
+	 */
+	if (uniphier_get_soc_id() == UNIPHIER_LD20_ID)
+		gd->ram_size -= 64;
+
 	return 0;
 }
 
diff --git a/board/sunxi/MAINTAINERS b/board/sunxi/MAINTAINERS
index ee24d70913..362edffc42 100644
--- a/board/sunxi/MAINTAINERS
+++ b/board/sunxi/MAINTAINERS
@@ -266,6 +266,11 @@ M:	Siarhei Siamashka <siarhei.siamashka@gmail.com>
 S:	Maintained
 F:	configs/MSI_Primo81_defconfig
 
+LIBRETECH ALL-H3-CC H3 BOARD
+M:	Chen-Yu Tsai <wens@csie.org>
+S:	Maintained
+F:	configs/libretech_all_h3_cc_h3_defconfig
+
 NANOPI-M1 BOARD
 M:	Mylène Josserand <mylene.josserand@free-electrons.com>
 S:	Maintained
@@ -374,6 +379,11 @@ S:	Maintained
 F:	configs/Sunchip_CX-A99_defconfig
 W:	https://linux-sunxi.org/Sunchip_CX-A99
 
+TBS A711 BOARD
+M:	Maxime Ripard <maxime.ripard@free-electrons.com>
+S:	Maintained
+F:	configs/tbs_a711_defconfig
+
 WEXLER-TAB7200 BOARD
 M:	Aleksei Mamlin <mamlinav@gmail.com>
 S:	Maintained
diff --git a/board/sunxi/board.c b/board/sunxi/board.c
index dcacdf3e62..4acbe0d6b5 100644
--- a/board/sunxi/board.c
+++ b/board/sunxi/board.c
@@ -180,7 +180,7 @@ int board_init(void)
 
 	gd->bd->bi_boot_params = (PHYS_SDRAM_0 + 0x100);
 
-#ifndef CONFIG_ARM64
+#if !defined(CONFIG_ARM64) && !defined(CONFIG_MACH_SUNIV)
 	asm volatile("mrc p15, 0, %0, c0, c1, 1" : "=r"(id_pfr1));
 	debug("id_pfr1: 0x%08x\n", id_pfr1);
 	/* Generic Timer Extension available? */
@@ -207,7 +207,7 @@ int board_init(void)
 #endif
 		}
 	}
-#endif /* !CONFIG_ARM64 */
+#endif /* !CONFIG_ARM64 && !CONFIG_MACH_SUNIV */
 
 	ret = axp_gpio_init();
 	if (ret)
@@ -291,17 +291,19 @@ void board_nand_init(void)
 #ifdef CONFIG_MMC
 static void mmc_pinmux_setup(int sdc)
 {
-	unsigned int pin;
+	__maybe_unused unsigned int pin;
 	__maybe_unused int pins;
 
 	switch (sdc) {
 	case 0:
 		/* SDC0: PF0-PF5 */
+#ifndef CONFIG_UART0_PORT_F
 		for (pin = SUNXI_GPF(0); pin <= SUNXI_GPF(5); pin++) {
 			sunxi_gpio_set_cfgpin(pin, SUNXI_GPF_SDC0);
 			sunxi_gpio_set_pull(pin, SUNXI_GPIO_PULL_UP);
 			sunxi_gpio_set_drv(pin, 2);
 		}
+#endif
 		break;
 
 	case 1:
diff --git a/cmd/Kconfig b/cmd/Kconfig
index c033223526..0fd5d04a27 100644
--- a/cmd/Kconfig
+++ b/cmd/Kconfig
@@ -397,6 +397,7 @@ menu "Memory commands"
 config CMD_CRC32
 	bool "crc32"
 	select HASH
+	default n if ARCH_SUNXI
 	default y
 	help
 	  Compute CRC32.
@@ -538,6 +539,7 @@ config CMD_LZMADEC
 
 config CMD_UNZIP
 	bool "unzip"
+	default n if ARCH_SUNXI
 	default y if CMD_BOOTI
 	help
 	  Uncompress a zip-compressed memory region.
@@ -1126,6 +1128,7 @@ config CMD_GETTIME
 # TODO: rename to CMD_SLEEP
 config CMD_MISC
 	bool "sleep"
+	default n if ARCH_SUNXI
 	default y
 	help
 	  Delay execution for some time
diff --git a/configs/CHIP_defconfig b/configs/CHIP_defconfig
index 062ac76e6d..2452d42a87 100644
--- a/configs/CHIP_defconfig
+++ b/configs/CHIP_defconfig
@@ -20,4 +20,3 @@ CONFIG_AXP_ALDO4_VOLT=3300
 CONFIG_USB_EHCI_HCD=y
 CONFIG_USB_MUSB_GADGET=y
 CONFIG_SYS_USB_EVENT_POLL_VIA_INT_QUEUE=y
-CONFIG_OF_LIBFDT_OVERLAY=y
diff --git a/configs/CHIP_pro_defconfig b/configs/CHIP_pro_defconfig
index f47aead6f9..02e79b5bb5 100644
--- a/configs/CHIP_pro_defconfig
+++ b/configs/CHIP_pro_defconfig
@@ -25,4 +25,3 @@ CONFIG_AXP_ALDO4_VOLT=3300
 CONFIG_USB_EHCI_HCD=y
 CONFIG_USB_MUSB_GADGET=y
 CONFIG_SYS_USB_EVENT_POLL_VIA_INT_QUEUE=y
-CONFIG_OF_LIBFDT_OVERLAY=y
diff --git a/configs/a64-olinuxino_defconfig b/configs/a64-olinuxino_defconfig
index 63a0048702..02da392067 100644
--- a/configs/a64-olinuxino_defconfig
+++ b/configs/a64-olinuxino_defconfig
@@ -2,6 +2,7 @@ CONFIG_ARM=y
 CONFIG_ARCH_SUNXI=y
 CONFIG_MACH_SUN50I=y
 CONFIG_RESERVE_ALLWINNER_BOOT0_HEADER=y
+CONFIG_MMC_SUNXI_SLOT_EXTRA=2
 CONFIG_DEFAULT_DEVICE_TREE="sun50i-a64-olinuxino"
 # CONFIG_SYS_MALLOC_CLEAR_ON_INIT is not set
 CONFIG_SPL=y
diff --git a/configs/f1c100s_nano_uboot_defconfig b/configs/f1c100s_nano_uboot_defconfig
new file mode 100644
index 0000000000..ac938f6702
--- /dev/null
+++ b/configs/f1c100s_nano_uboot_defconfig
@@ -0,0 +1,1128 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# U-Boot 2018.01 Configuration
+#
+CONFIG_CREATE_ARCH_SYMLINK=y
+# CONFIG_ARC is not set
+CONFIG_ARM=y
+# CONFIG_M68K is not set
+# CONFIG_MICROBLAZE is not set
+# CONFIG_MIPS is not set
+# CONFIG_NDS32 is not set
+# CONFIG_NIOS2 is not set
+# CONFIG_PPC is not set
+# CONFIG_SANDBOX is not set
+# CONFIG_SH is not set
+# CONFIG_X86 is not set
+# CONFIG_XTENSA is not set
+CONFIG_SYS_ARCH="arm"
+CONFIG_SYS_CPU="arm926ejs"
+CONFIG_SYS_SOC="sunxi"
+CONFIG_SYS_BOARD="sunxi"
+CONFIG_SYS_CONFIG_NAME="suniv"
+
+#
+# ARM architecture
+#
+CONFIG_ARM_ASM_UNIFIED=y
+CONFIG_CPU_ARM926EJS=y
+CONFIG_SYS_ARM_ARCH=5
+CONFIG_SYS_CACHE_SHIFT_5=y
+CONFIG_SYS_CACHELINE_SIZE=32
+# CONFIG_SEMIHOSTING is not set
+CONFIG_SYS_THUMB_BUILD=y
+CONFIG_SPL_SYS_THUMB_BUILD=y
+# CONFIG_SYS_L2CACHE_OFF is not set
+# CONFIG_ENABLE_ARM_SOC_BOOT0_HOOK is not set
+# CONFIG_ARM_CORTEX_CPU_IS_UP is not set
+CONFIG_USE_ARCH_MEMCPY=y
+CONFIG_SPL_USE_ARCH_MEMCPY=y
+CONFIG_USE_ARCH_MEMSET=y
+CONFIG_SPL_USE_ARCH_MEMSET=y
+# CONFIG_ARM64_SUPPORT_AARCH32 is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_TARGET_EDB93XX is not set
+# CONFIG_TARGET_ASPENITE is not set
+# CONFIG_TARGET_GPLUGD is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_KIRKWOOD is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_TARGET_DEVKIT3250 is not set
+# CONFIG_TARGET_WORK_92105 is not set
+# CONFIG_TARGET_APF27 is not set
+# CONFIG_TARGET_APX4DEVKIT is not set
+# CONFIG_TARGET_XFI3 is not set
+# CONFIG_TARGET_M28EVK is not set
+# CONFIG_TARGET_MX23EVK is not set
+# CONFIG_TARGET_MX28EVK is not set
+# CONFIG_TARGET_MX23_OLINUXINO is not set
+# CONFIG_TARGET_BG0900 is not set
+# CONFIG_TARGET_SANSA_FUZE_PLUS is not set
+# CONFIG_TARGET_SC_SPS_1 is not set
+# CONFIG_ORION5X is not set
+# CONFIG_TARGET_SPEAR300 is not set
+# CONFIG_TARGET_SPEAR310 is not set
+# CONFIG_TARGET_SPEAR320 is not set
+# CONFIG_TARGET_SPEAR600 is not set
+# CONFIG_TARGET_STV0991 is not set
+# CONFIG_TARGET_X600 is not set
+# CONFIG_TARGET_IMX31_PHYCORE is not set
+# CONFIG_TARGET_IMX31_PHYCORE_EET is not set
+# CONFIG_TARGET_MX31ADS is not set
+# CONFIG_TARGET_MX31PDK is not set
+# CONFIG_TARGET_WOODBURN is not set
+# CONFIG_TARGET_WOODBURN_SD is not set
+# CONFIG_TARGET_FLEA3 is not set
+# CONFIG_TARGET_MX35PDK is not set
+# CONFIG_ARCH_BCM283X is not set
+# CONFIG_TARGET_VEXPRESS_CA15_TC2 is not set
+# CONFIG_TARGET_VEXPRESS_CA5X2 is not set
+# CONFIG_TARGET_VEXPRESS_CA9X4 is not set
+# CONFIG_TARGET_BCM23550_W1D is not set
+# CONFIG_TARGET_BCM28155_AP is not set
+# CONFIG_TARGET_BCMCYGNUS is not set
+# CONFIG_TARGET_BCMNSP is not set
+# CONFIG_TARGET_BCMNS2 is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_S5PC1XX is not set
+# CONFIG_ARCH_HIGHBANK is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_KEYSTONE is not set
+# CONFIG_ARCH_OMAP2PLUS is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MX25 is not set
+# CONFIG_ARCH_MX7ULP is not set
+# CONFIG_ARCH_MX7 is not set
+# CONFIG_ARCH_MX6 is not set
+CONFIG_SPL_LDSCRIPT="arch/arm/cpu/arm926ejs/sunxi/u-boot-spl.lds"
+# CONFIG_ARCH_MX5 is not set
+# CONFIG_ARCH_QEMU is not set
+# CONFIG_ARCH_RMOBILE is not set
+# CONFIG_TARGET_S32V234EVB is not set
+# CONFIG_ARCH_SNAPDRAGON is not set
+# CONFIG_ARCH_SOCFPGA is not set
+CONFIG_ARCH_SUNXI=y
+# CONFIG_TARGET_TS4600 is not set
+# CONFIG_ARCH_VF610 is not set
+# CONFIG_ARCH_ZYNQ is not set
+# CONFIG_ARCH_ZYNQMP is not set
+# CONFIG_TEGRA is not set
+# CONFIG_TARGET_VEXPRESS64_AEMV8A is not set
+# CONFIG_TARGET_VEXPRESS64_BASE_FVP is not set
+# CONFIG_TARGET_VEXPRESS64_BASE_FVP_DRAM is not set
+# CONFIG_TARGET_VEXPRESS64_JUNO is not set
+# CONFIG_TARGET_LS2080A_EMU is not set
+# CONFIG_TARGET_LS2080A_SIMU is not set
+# CONFIG_TARGET_LS1088AQDS is not set
+# CONFIG_TARGET_LS2080AQDS is not set
+# CONFIG_TARGET_LS2080ARDB is not set
+# CONFIG_TARGET_LS2081ARDB is not set
+# CONFIG_TARGET_HIKEY is not set
+# CONFIG_TARGET_POPLAR is not set
+# CONFIG_TARGET_LS1012AQDS is not set
+# CONFIG_TARGET_LS1012ARDB is not set
+# CONFIG_TARGET_LS1012AFRDM is not set
+# CONFIG_TARGET_LS1088ARDB is not set
+# CONFIG_TARGET_LS1021AQDS is not set
+# CONFIG_TARGET_LS1021ATWR is not set
+# CONFIG_TARGET_LS1021AIOT is not set
+# CONFIG_TARGET_LS1043AQDS is not set
+# CONFIG_TARGET_LS1043ARDB is not set
+# CONFIG_TARGET_LS1046AQDS is not set
+# CONFIG_TARGET_LS1046ARDB is not set
+# CONFIG_TARGET_H2200 is not set
+# CONFIG_TARGET_ZIPITZ2 is not set
+# CONFIG_TARGET_COLIBRI_PXA270 is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_STM32 is not set
+# CONFIG_ARCH_STI is not set
+# CONFIG_ARCH_ROCKCHIP is not set
+# CONFIG_TARGET_THUNDERX_88XX is not set
+# CONFIG_ARCH_ASPEED is not set
+CONFIG_SPL_GPIO_SUPPORT=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_SYS_MALLOC_F_LEN=0x400
+CONFIG_CONS_INDEX=1
+CONFIG_SPL_MMC_SUPPORT=y
+CONFIG_SPL_SERIAL_SUPPORT=y
+# CONFIG_SPL_DRIVERS_MISC_SUPPORT is not set
+CONFIG_ENV_SIZE=0x8000
+CONFIG_ENV_OFFSET=0xf8000
+CONFIG_SPL_LIBDISK_SUPPORT=y
+# CONFIG_SPL_NAND_SUPPORT is not set
+# CONFIG_SPL_SPI_FLASH_SUPPORT is not set
+# CONFIG_SPL_SPI_SUPPORT is not set
+# CONFIG_SPL_WATCHDOG_SUPPORT is not set
+CONFIG_IDENT_STRING=" Allwinner Technology"
+# CONFIG_SUNXI_HIGH_SRAM is not set
+CONFIG_SUNXI_GEN_SUN6I=y
+CONFIG_MACH_SUNIV=y
+# CONFIG_MACH_SUN4I is not set
+# CONFIG_MACH_SUN5I is not set
+# CONFIG_MACH_SUN6I is not set
+# CONFIG_MACH_SUN7I is not set
+# CONFIG_MACH_SUN8I_A23 is not set
+# CONFIG_MACH_SUN8I_A33 is not set
+# CONFIG_MACH_SUN8I_A83T is not set
+# CONFIG_MACH_SUN8I_H3 is not set
+# CONFIG_MACH_SUN8I_R40 is not set
+# CONFIG_MACH_SUN8I_V3S is not set
+# CONFIG_MACH_SUN9I is not set
+# CONFIG_MACH_SUN50I is not set
+# CONFIG_MACH_SUN50I_H5 is not set
+# CONFIG_RESERVE_ALLWINNER_BOOT0_HEADER is not set
+CONFIG_DRAM_CLK=156
+CONFIG_DRAM_ZQ=0
+# CONFIG_DRAM_ODT_EN is not set
+CONFIG_SYS_CLK_FREQ=408000000
+# CONFIG_UART0_PORT_F is not set
+# CONFIG_OLD_SUNXI_KERNEL_COMPAT is not set
+CONFIG_MACPWR=""
+CONFIG_MMC0_CD_PIN=""
+CONFIG_MMC1_CD_PIN=""
+CONFIG_MMC2_CD_PIN=""
+CONFIG_MMC3_CD_PIN=""
+CONFIG_MMC1_PINS=""
+CONFIG_MMC2_PINS=""
+CONFIG_MMC3_PINS=""
+CONFIG_MMC_SUNXI_SLOT_EXTRA=-1
+CONFIG_INITIAL_USB_SCAN_DELAY=0
+CONFIG_USB0_VBUS_PIN=""
+CONFIG_USB0_VBUS_DET=""
+CONFIG_USB0_ID_DET=""
+CONFIG_USB1_VBUS_PIN=""
+CONFIG_USB2_VBUS_PIN=""
+CONFIG_USB3_VBUS_PIN=""
+# CONFIG_I2C0_ENABLE is not set
+# CONFIG_I2C1_ENABLE is not set
+# CONFIG_I2C2_ENABLE is not set
+# CONFIG_R_I2C_ENABLE is not set
+# CONFIG_AXP_GPIO is not set
+CONFIG_VIDEO_SUNXI=y
+CONFIG_VIDEO_LCD_MODE="x:800,y:480,depth:18,pclk_khz:33000,le:87,ri:40,up:31,lo:13,hs:1,vs:1,sync:3,vmode:0"
+CONFIG_VIDEO_LCD_DCLK_PHASE=1
+CONFIG_VIDEO_LCD_POWER=""
+CONFIG_VIDEO_LCD_RESET=""
+CONFIG_VIDEO_LCD_BL_EN=""
+CONFIG_VIDEO_LCD_BL_PWM="PE6"
+CONFIG_VIDEO_LCD_BL_PWM_ACTIVE_LOW=y
+# CONFIG_VIDEO_LCD_PANEL_I2C is not set
+CONFIG_VIDEO_LCD_IF_PARALLEL=y
+# CONFIG_SUNXI_DE2 is not set
+CONFIG_VIDEO_LCD_PANEL_PARALLEL=y
+# CONFIG_VIDEO_LCD_PANEL_LVDS is not set
+# CONFIG_VIDEO_LCD_PANEL_MIPI_4_LANE_513_MBPS_VIA_SSD2828 is not set
+# CONFIG_VIDEO_LCD_PANEL_EDP_4_LANE_1620M_VIA_ANX9804 is not set
+# CONFIG_VIDEO_LCD_PANEL_HITACHI_TX18D42VM is not set
+# CONFIG_VIDEO_LCD_TL059WV5C0 is not set
+CONFIG_SATAPWR=""
+CONFIG_GMAC_TX_DELAY=0
+CONFIG_SPL_STACK_R_ADDR=0x81e00000
+# CONFIG_SPL_FAT_SUPPORT is not set
+# CONFIG_CMD_DEKBLOB is not set
+# CONFIG_CMD_HDMIDETECT is not set
+
+#
+# ARM debug
+#
+# CONFIG_DEBUG_LL is not set
+CONFIG_DEFAULT_DEVICE_TREE="suniv-f1c100s-licheepi-nano"
+CONFIG_SMBIOS_PRODUCT_NAME="sunxi"
+# CONFIG_DEBUG_UART is not set
+# CONFIG_AHCI is not set
+
+#
+# General setup
+#
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_SYS_MALLOC_F=y
+CONFIG_SPL_SYS_MALLOC_F_LEN=0x400
+CONFIG_TPL_SYS_MALLOC_F_LEN=0x400
+CONFIG_EXPERT=y
+CONFIG_SYS_MALLOC_CLEAR_ON_INIT=y
+# CONFIG_TOOLS_DEBUG is not set
+# CONFIG_PHYS_64BIT is not set
+
+#
+# Boot images
+#
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+# CONFIG_FIT is not set
+CONFIG_OF_BOARD_SETUP=y
+# CONFIG_OF_SYSTEM_SETUP is not set
+# CONFIG_OF_STDOUT_VIA_ALIAS is not set
+CONFIG_SYS_EXTRA_OPTIONS=""
+CONFIG_ARCH_FIXUP_FDT_MEMORY=y
+
+#
+# API
+#
+# CONFIG_API is not set
+
+#
+# Boot timing
+#
+# CONFIG_BOOTSTAGE is not set
+CONFIG_BOOTSTAGE_RECORD_COUNT=30
+CONFIG_SPL_BOOTSTAGE_RECORD_COUNT=5
+CONFIG_BOOTSTAGE_STASH_ADDR=0
+CONFIG_BOOTSTAGE_STASH_SIZE=0x1000
+
+#
+# Boot media
+#
+# CONFIG_NAND_BOOT is not set
+# CONFIG_ONENAND_BOOT is not set
+# CONFIG_QSPI_BOOT is not set
+# CONFIG_SATA_BOOT is not set
+# CONFIG_SD_BOOT is not set
+# CONFIG_SPI_BOOT is not set
+CONFIG_BOOTDELAY=2
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="console=ttyS0,115200 panic=5 rootwait root=/dev/mtdblock3 rw rootfstype=jffs2"
+# CONFIG_USE_BOOTCOMMAND is not set
+
+#
+# Console
+#
+CONFIG_MENU=y
+# CONFIG_CONSOLE_RECORD is not set
+CONFIG_LOGLEVEL=4
+CONFIG_SPL_LOGLEVEL=4
+# CONFIG_SILENT_CONSOLE is not set
+CONFIG_PRE_CONSOLE_BUFFER=y
+CONFIG_PRE_CON_BUF_SZ=4096
+CONFIG_PRE_CON_BUF_ADDR=0x4f000000
+# CONFIG_CONSOLE_MUX is not set
+# CONFIG_SYS_CONSOLE_IS_IN_ENV is not set
+# CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE is not set
+# CONFIG_SYS_CONSOLE_ENV_OVERWRITE is not set
+# CONFIG_SYS_CONSOLE_INFO_QUIET is not set
+CONFIG_SYS_STDIO_DEREGISTER=y
+
+#
+# Logging
+#
+# CONFIG_LOG is not set
+# CONFIG_SPL_LOG is not set
+CONFIG_DEFAULT_FDT_FILE=""
+# CONFIG_VERSION_VARIABLE is not set
+CONFIG_DISPLAY_CPUINFO=y
+CONFIG_DISPLAY_BOARDINFO=y
+
+#
+# Start-up hooks
+#
+# CONFIG_ARCH_EARLY_INIT_R is not set
+# CONFIG_ARCH_MISC_INIT is not set
+# CONFIG_BOARD_EARLY_INIT_F is not set
+
+#
+# Security support
+#
+
+#
+# SPL / TPL
+#
+CONFIG_SUPPORT_SPL=y
+CONFIG_SPL=y
+# CONFIG_SPL_BOARD_INIT is not set
+# CONFIG_SPL_BOOTROM_SUPPORT is not set
+CONFIG_SPL_RAW_IMAGE_SUPPORT=y
+CONFIG_SPL_LEGACY_IMAGE_SUPPORT=y
+CONFIG_SPL_SYS_MALLOC_SIMPLE=y
+# CONFIG_TPL_SYS_MALLOC_SIMPLE is not set
+CONFIG_SPL_STACK_R=y
+CONFIG_SPL_STACK_R_MALLOC_SIMPLE_LEN=0x100000
+# CONFIG_SPL_SEPARATE_BSS is not set
+# CONFIG_SPL_DISPLAY_PRINT is not set
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x50
+# CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_PARTITION is not set
+# CONFIG_SPL_CPU_SUPPORT is not set
+# CONFIG_SPL_CRYPTO_SUPPORT is not set
+# CONFIG_SPL_HASH_SUPPORT is not set
+# CONFIG_SPL_DMA_SUPPORT is not set
+# CONFIG_SPL_ENV_SUPPORT is not set
+# CONFIG_SPL_EXT_SUPPORT is not set
+# CONFIG_SPL_FPGA_SUPPORT is not set
+# CONFIG_SPL_I2C_SUPPORT is not set
+# CONFIG_SPL_MPC8XXX_INIT_DDR_SUPPORT is not set
+# CONFIG_SPL_MTD_SUPPORT is not set
+# CONFIG_SPL_MUSB_NEW_SUPPORT is not set
+# CONFIG_SPL_NET_SUPPORT is not set
+# CONFIG_SPL_NO_CPU_SUPPORT is not set
+# CONFIG_SPL_NOR_SUPPORT is not set
+# CONFIG_SPL_XIP_SUPPORT is not set
+# CONFIG_SPL_ONENAND_SUPPORT is not set
+# CONFIG_SPL_OS_BOOT is not set
+# CONFIG_SPL_PCI_SUPPORT is not set
+# CONFIG_SPL_PCH_SUPPORT is not set
+# CONFIG_SPL_POST_MEM_SUPPORT is not set
+CONFIG_SPL_POWER_SUPPORT=y
+# CONFIG_SPL_RAM_SUPPORT is not set
+# CONFIG_SPL_RTC_SUPPORT is not set
+# CONFIG_SPL_SATA_SUPPORT is not set
+# CONFIG_SPL_THERMAL is not set
+# CONFIG_SPL_USB_HOST_SUPPORT is not set
+# CONFIG_SPL_USB_GADGET_SUPPORT is not set
+# CONFIG_SPL_YMODEM_SUPPORT is not set
+
+#
+# Command line interface
+#
+CONFIG_CMDLINE=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="=> "
+
+#
+# Autoboot options
+#
+CONFIG_AUTOBOOT=y
+# CONFIG_AUTOBOOT_KEYED is not set
+
+#
+# FASTBOOT
+#
+# CONFIG_FASTBOOT is not set
+
+#
+# Commands
+#
+
+#
+# Info commands
+#
+CONFIG_CMD_BDI=y
+# CONFIG_CMD_CONFIG is not set
+CONFIG_CMD_CONSOLE=y
+# CONFIG_CMD_CPU is not set
+# CONFIG_CMD_LICENSE is not set
+
+#
+# Boot commands
+#
+CONFIG_CMD_BOOTD=y
+CONFIG_CMD_BOOTM=y
+CONFIG_CMD_BOOTZ=y
+CONFIG_CMD_BOOTEFI=y
+CONFIG_CMD_BOOTEFI_HELLO_COMPILE=y
+# CONFIG_CMD_BOOTEFI_HELLO is not set
+# CONFIG_CMD_BOOTEFI_SELFTEST is not set
+# CONFIG_CMD_BOOTMENU is not set
+CONFIG_CMD_ELF=y
+CONFIG_CMD_FDT=y
+CONFIG_CMD_GO=y
+CONFIG_CMD_RUN=y
+CONFIG_CMD_IMI=y
+# CONFIG_CMD_IMLS is not set
+CONFIG_CMD_XIMG=y
+# CONFIG_CMD_POWEROFF is not set
+# CONFIG_CMD_SPL is not set
+# CONFIG_CMD_THOR_DOWNLOAD is not set
+# CONFIG_CMD_ZBOOT is not set
+
+#
+# Environment commands
+#
+# CONFIG_CMD_ASKENV is not set
+CONFIG_CMD_EXPORTENV=y
+CONFIG_CMD_IMPORTENV=y
+CONFIG_CMD_EDITENV=y
+# CONFIG_CMD_GREPENV is not set
+CONFIG_CMD_SAVEENV=y
+CONFIG_CMD_ENV_EXISTS=y
+# CONFIG_CMD_ENV_CALLBACK is not set
+# CONFIG_CMD_ENV_FLAGS is not set
+
+#
+# Memory commands
+#
+# CONFIG_CMD_CRC32 is not set
+# CONFIG_CMD_EEPROM is not set
+# CONFIG_LOOPW is not set
+# CONFIG_CMD_MD5SUM is not set
+# CONFIG_CMD_MEMINFO is not set
+CONFIG_CMD_MEMORY=y
+# CONFIG_CMD_MEMTEST is not set
+# CONFIG_CMD_MX_CYCLIC is not set
+# CONFIG_CMD_SHA1SUM is not set
+# CONFIG_CMD_STRINGS is not set
+
+#
+# Compression commands
+#
+# CONFIG_CMD_LZMADEC is not set
+# CONFIG_CMD_UNZIP is not set
+# CONFIG_CMD_ZIP is not set
+
+#
+# Device access commands
+#
+# CONFIG_CMD_ARMFLASH is not set
+# CONFIG_CMD_CLK is not set
+# CONFIG_CMD_DEMO is not set
+# CONFIG_CMD_DFU is not set
+CONFIG_CMD_DM=y
+# CONFIG_CMD_FDC is not set
+# CONFIG_CMD_FLASH is not set
+# CONFIG_CMD_FPGA is not set
+# CONFIG_CMD_FPGAD is not set
+# CONFIG_CMD_FUSE is not set
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_GPT=y
+CONFIG_RANDOM_UUID=y
+# CONFIG_CMD_GPT_RENAME is not set
+# CONFIG_CMD_IDE is not set
+# CONFIG_CMD_IO is not set
+# CONFIG_CMD_IOTRACE is not set
+# CONFIG_CMD_I2C is not set
+CONFIG_CMD_LOADB=y
+CONFIG_CMD_LOADS=y
+CONFIG_CMD_MMC=y
+# CONFIG_CMD_NAND is not set
+# CONFIG_CMD_MMC_SPI is not set
+# CONFIG_CMD_ONENAND is not set
+CONFIG_CMD_PART=y
+# CONFIG_CMD_PCI is not set
+# CONFIG_CMD_PCMCIA is not set
+# CONFIG_CMD_READ is not set
+# CONFIG_CMD_SATA is not set
+# CONFIG_CMD_SAVES is not set
+# CONFIG_CMD_SDRAM is not set
+CONFIG_CMD_SF=y
+# CONFIG_CMD_SF_TEST is not set
+CONFIG_CMD_SPI=y
+# CONFIG_CMD_TSI148 is not set
+# CONFIG_CMD_UNIVERSE is not set
+CONFIG_CMD_USB=y
+# CONFIG_CMD_USB_SDP is not set
+# CONFIG_CMD_USB_MASS_STORAGE is not set
+
+#
+# Shell scripting commands
+#
+CONFIG_CMD_ECHO=y
+CONFIG_CMD_ITEST=y
+CONFIG_CMD_SOURCE=y
+CONFIG_CMD_SETEXPR=y
+
+#
+# Network commands
+#
+CONFIG_CMD_NET=y
+# CONFIG_CMD_TFTPPUT is not set
+# CONFIG_CMD_TFTPSRV is not set
+# CONFIG_CMD_RARP is not set
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_PXE=y
+CONFIG_CMD_NFS=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+# CONFIG_CMD_CDP is not set
+# CONFIG_CMD_SNTP is not set
+# CONFIG_CMD_DNS is not set
+# CONFIG_CMD_LINK_LOCAL is not set
+# CONFIG_CMD_ETHSW is not set
+
+#
+# Misc commands
+#
+# CONFIG_CMD_BMP is not set
+# CONFIG_CMD_BSP is not set
+# CONFIG_CMD_BKOPS_ENABLE is not set
+# CONFIG_CMD_CACHE is not set
+# CONFIG_CMD_DISPLAY is not set
+# CONFIG_CMD_LED is not set
+# CONFIG_CMD_DATE is not set
+# CONFIG_CMD_TIME is not set
+# CONFIG_CMD_GETTIME is not set
+# CONFIG_CMD_MISC is not set
+# CONFIG_CMD_TIMER is not set
+# CONFIG_CMD_QFW is not set
+# CONFIG_CMD_TERMINAL is not set
+# CONFIG_CMD_UUID is not set
+
+#
+# Power commands
+#
+
+#
+# Security commands
+#
+# CONFIG_CMD_AES is not set
+# CONFIG_CMD_BLOB is not set
+# CONFIG_CMD_HASH is not set
+
+#
+# Firmware commands
+#
+
+#
+# Filesystem commands
+#
+# CONFIG_CMD_BTRFS is not set
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+# CONFIG_CMD_EXT4_WRITE is not set
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_CMD_FS_UUID is not set
+# CONFIG_CMD_JFFS2 is not set
+# CONFIG_CMD_MTDPARTS is not set
+# CONFIG_CMD_REISER is not set
+# CONFIG_CMD_SCSI is not set
+# CONFIG_CMD_ZFS is not set
+
+#
+# Debug commands
+#
+# CONFIG_CMD_BEDBUG is not set
+# CONFIG_CMD_DIAG is not set
+# CONFIG_CMD_KGDB is not set
+# CONFIG_CMD_LOG is not set
+# CONFIG_CMD_TRACE is not set
+# CONFIG_CMD_UBI is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITIONS=y
+# CONFIG_MAC_PARTITION is not set
+# CONFIG_SPL_MAC_PARTITION is not set
+CONFIG_DOS_PARTITION=y
+CONFIG_SPL_DOS_PARTITION=y
+CONFIG_ISO_PARTITION=y
+CONFIG_SPL_ISO_PARTITION=y
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_SPL_AMIGA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+CONFIG_EFI_PARTITION_ENTRIES_NUMBERS=56
+CONFIG_EFI_PARTITION_ENTRIES_OFF=0
+CONFIG_SPL_EFI_PARTITION=y
+CONFIG_PARTITION_UUIDS=y
+CONFIG_SPL_PARTITION_UUIDS=y
+# CONFIG_PARTITION_TYPE_GUID is not set
+CONFIG_SUPPORT_OF_CONTROL=y
+CONFIG_DTC=y
+CONFIG_PYLIBFDT=y
+CONFIG_DTOC=y
+CONFIG_BINMAN=y
+
+#
+# Device Tree Control
+#
+CONFIG_OF_CONTROL=y
+# CONFIG_OF_BOARD_FIXUP is not set
+# CONFIG_SPL_OF_CONTROL is not set
+# CONFIG_OF_LIVE is not set
+CONFIG_OF_SEPARATE=y
+# CONFIG_OF_EMBED is not set
+# CONFIG_OF_BOARD is not set
+# CONFIG_MULTI_DTB_FIT is not set
+CONFIG_MKIMAGE_DTC_PATH="dtc"
+
+#
+# Environment
+#
+# CONFIG_ENV_IS_NOWHERE is not set
+# CONFIG_ENV_IS_IN_EEPROM is not set
+# CONFIG_ENV_IS_IN_FAT is not set
+# CONFIG_ENV_IS_IN_FLASH is not set
+# CONFIG_ENV_IS_IN_MMC is not set
+# CONFIG_ENV_IS_IN_NAND is not set
+# CONFIG_ENV_IS_IN_NVRAM is not set
+# CONFIG_ENV_IS_IN_ONENAND is not set
+# CONFIG_ENV_IS_IN_REMOTE is not set
+CONFIG_ENV_IS_IN_SPI_FLASH=y
+# CONFIG_ENV_IS_IN_UBI is not set
+CONFIG_NET=y
+# CONFIG_NET_RANDOM_ETHADDR is not set
+# CONFIG_NETCONSOLE is not set
+CONFIG_NET_TFTP_VARS=y
+CONFIG_BOOTP_PXE_CLIENTARCH=0x15
+CONFIG_BOOTP_VCI_STRING="U-Boot.arm"
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_DM=y
+# CONFIG_SPL_DM is not set
+CONFIG_DM_WARN=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_DEVICE_REMOVE=y
+CONFIG_DM_STDIO=y
+CONFIG_DM_SEQ_ALIAS=y
+# CONFIG_SPL_DM_SEQ_ALIAS is not set
+# CONFIG_REGMAP is not set
+# CONFIG_DEVRES is not set
+CONFIG_SIMPLE_BUS=y
+CONFIG_OF_TRANSLATE=y
+CONFIG_DM_DEV_READ_INLINE=y
+# CONFIG_ADC is not set
+# CONFIG_ADC_EXYNOS is not set
+# CONFIG_ADC_SANDBOX is not set
+# CONFIG_SARADC_ROCKCHIP is not set
+# CONFIG_SATA is not set
+# CONFIG_SCSI_AHCI is not set
+
+#
+# SATA/SCSI device support
+#
+# CONFIG_DWC_AHSATA is not set
+# CONFIG_FSL_SATA is not set
+# CONFIG_MVSATA_IDE is not set
+# CONFIG_SATA_MV is not set
+# CONFIG_SATA_SIL is not set
+# CONFIG_SATA_SIL3114 is not set
+# CONFIG_BLK is not set
+# CONFIG_BLOCK_CACHE is not set
+# CONFIG_IDE is not set
+
+#
+# Boot count support
+#
+# CONFIG_BOOTCOUNT is not set
+
+#
+# Clock
+#
+# CONFIG_CLK is not set
+# CONFIG_CPU is not set
+
+#
+# Hardware crypto devices
+#
+# CONFIG_FSL_CAAM is not set
+# CONFIG_SYS_FSL_SEC_BE is not set
+# CONFIG_SYS_FSL_SEC_LE is not set
+
+#
+# Demo for driver model
+#
+# CONFIG_DM_DEMO is not set
+
+#
+# DFU support
+#
+
+#
+# DMA Support
+#
+# CONFIG_DMA is not set
+# CONFIG_TI_EDMA3 is not set
+
+#
+# FPGA support
+#
+# CONFIG_FPGA_ALTERA is not set
+# CONFIG_FPGA_SOCFPGA is not set
+# CONFIG_FPGA_XILINX is not set
+
+#
+# GPIO Support
+#
+CONFIG_DM_GPIO=y
+# CONFIG_ALTERA_PIO is not set
+# CONFIG_DWAPB_GPIO is not set
+# CONFIG_AT91_GPIO is not set
+# CONFIG_ATMEL_PIO4 is not set
+# CONFIG_INTEL_BROADWELL_GPIO is not set
+# CONFIG_INTEL_ICH6_GPIO is not set
+# CONFIG_IMX_RGPIO2P is not set
+# CONFIG_HSDK_CREG_GPIO is not set
+# CONFIG_LPC32XX_GPIO is not set
+# CONFIG_MSM_GPIO is not set
+# CONFIG_CMD_PCA953X is not set
+# CONFIG_ROCKCHIP_GPIO is not set
+# CONFIG_CMD_TCA642X is not set
+# CONFIG_TEGRA_GPIO is not set
+# CONFIG_TEGRA186_GPIO is not set
+# CONFIG_VYBRID_GPIO is not set
+# CONFIG_DM_74X164 is not set
+# CONFIG_DM_PCA953X is not set
+# CONFIG_MPC85XX_GPIO is not set
+
+#
+# I2C support
+#
+# CONFIG_DM_I2C is not set
+# CONFIG_DM_I2C_COMPAT is not set
+# CONFIG_SYS_I2C_DW is not set
+# CONFIG_SYS_I2C_IMX_LPI2C is not set
+CONFIG_DM_KEYBOARD=y
+# CONFIG_CROS_EC_KEYB is not set
+# CONFIG_I8042_KEYB is not set
+
+#
+# LED Support
+#
+# CONFIG_LED is not set
+# CONFIG_LED_STATUS is not set
+
+#
+# Mailbox Controller Support
+#
+# CONFIG_DM_MAILBOX is not set
+
+#
+# Memory Controller drivers
+#
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MISC is not set
+# CONFIG_CROS_EC is not set
+# CONFIG_DS4510 is not set
+# CONFIG_FSL_SEC_MON is not set
+# CONFIG_MXC_OCOTP is not set
+# CONFIG_NUVOTON_NCT6102D is not set
+# CONFIG_PWRSEQ is not set
+# CONFIG_PCA9551_LED is not set
+# CONFIG_WINBOND_W83627 is not set
+
+#
+# MMC Host controller Support
+#
+CONFIG_MMC=y
+# CONFIG_DM_MMC is not set
+# CONFIG_SPL_MMC_TINY is not set
+# CONFIG_MMC_DW is not set
+# CONFIG_MMC_MXC is not set
+# CONFIG_MMC_MXS is not set
+# CONFIG_MMC_PCI is not set
+# CONFIG_MMC_OMAP_HS is not set
+# CONFIG_MMC_SDHCI is not set
+CONFIG_MMC_SUNXI=y
+# CONFIG_FTSDC010 is not set
+
+#
+# MTD Support
+#
+# CONFIG_MTD is not set
+# CONFIG_MTD_NOR_FLASH is not set
+# CONFIG_NAND is not set
+
+#
+# SPI Flash Support
+#
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_BAR=y
+# CONFIG_SF_DUAL_FLASH is not set
+# CONFIG_SPI_FLASH_ATMEL is not set
+# CONFIG_SPI_FLASH_EON is not set
+CONFIG_SPI_FLASH_GIGADEVICE=y
+CONFIG_SPI_FLASH_MACRONIX=y
+# CONFIG_SPI_FLASH_SPANSION is not set
+# CONFIG_SPI_FLASH_STMICRO is not set
+# CONFIG_SPI_FLASH_SST is not set
+CONFIG_SPI_FLASH_WINBOND=y
+CONFIG_SPI_FLASH_USE_4K_SECTORS=y
+# CONFIG_SPI_FLASH_DATAFLASH is not set
+# CONFIG_SPI_FLASH_MTD is not set
+CONFIG_SPL_SPI_SUNXI=y
+
+#
+# UBI support
+#
+# CONFIG_MTD_UBI is not set
+# CONFIG_BITBANGMII is not set
+# CONFIG_MV88E6352_SWITCH is not set
+# CONFIG_PHYLIB is not set
+CONFIG_DM_ETH=y
+CONFIG_NETDEVICES=y
+# CONFIG_PHY_GIGE is not set
+# CONFIG_ALTERA_TSE is not set
+# CONFIG_BCM_SF2_ETH is not set
+# CONFIG_DWC_ETH_QOS is not set
+# CONFIG_E1000 is not set
+# CONFIG_ETH_DESIGNWARE is not set
+# CONFIG_ETHOC is not set
+# CONFIG_FTMAC100 is not set
+# CONFIG_MACB is not set
+# CONFIG_RGMII is not set
+# CONFIG_RTL8139 is not set
+# CONFIG_RTL8169 is not set
+# CONFIG_SMC911X is not set
+# CONFIG_SUN7I_GMAC is not set
+# CONFIG_SUN4I_EMAC is not set
+# CONFIG_SUN8I_EMAC is not set
+# CONFIG_PCI is not set
+
+#
+# PHY Subsystem
+#
+# CONFIG_PHY is not set
+# CONFIG_SPL_PHY is not set
+# CONFIG_MVEBU_COMPHY_SUPPORT is not set
+
+#
+# Pin controllers
+#
+# CONFIG_PINCTRL is not set
+
+#
+# Power
+#
+
+#
+# Power Domain Support
+#
+# CONFIG_POWER_DOMAIN is not set
+# CONFIG_DM_PMIC is not set
+# CONFIG_PMIC_AS3722 is not set
+# CONFIG_POWER_MC34VR500 is not set
+# CONFIG_DM_REGULATOR is not set
+CONFIG_SUNXI_NO_PMIC=y
+# CONFIG_DM_PWM is not set
+# CONFIG_PWM_SANDBOX is not set
+# CONFIG_RAM is not set
+
+#
+# Remote Processor drivers
+#
+
+#
+# Reset Controller Support
+#
+# CONFIG_DM_RESET is not set
+
+#
+# Real Time Clock
+#
+# CONFIG_DM_RTC is not set
+# CONFIG_RTC_S35392A is not set
+# CONFIG_SCSI is not set
+
+#
+# Serial drivers
+#
+CONFIG_BAUDRATE=115200
+CONFIG_REQUIRE_SERIAL_CONSOLE=y
+CONFIG_SERIAL_PRESENT=y
+CONFIG_SPL_SERIAL_PRESENT=y
+CONFIG_DM_SERIAL=y
+# CONFIG_SERIAL_RX_BUFFER is not set
+# CONFIG_SPL_DM_SERIAL is not set
+# CONFIG_TPL_DM_SERIAL is not set
+# CONFIG_DEBUG_UART_SKIP_INIT is not set
+# CONFIG_ALTERA_JTAG_UART is not set
+# CONFIG_ALTERA_UART is not set
+# CONFIG_ATMEL_USART is not set
+# CONFIG_FSL_LPUART is not set
+# CONFIG_MVEBU_A3700_UART is not set
+# CONFIG_NULLDEV_SERIAL is not set
+CONFIG_SYS_NS16550=y
+# CONFIG_MSM_SERIAL is not set
+# CONFIG_PXA_SERIAL is not set
+
+#
+# Sound support
+#
+# CONFIG_SOUND is not set
+
+#
+# SPI Support
+#
+CONFIG_DM_SPI=y
+# CONFIG_ALTERA_SPI is not set
+# CONFIG_CADENCE_QSPI is not set
+# CONFIG_DESIGNWARE_SPI is not set
+# CONFIG_EXYNOS_SPI is not set
+# CONFIG_FSL_DSPI is not set
+# CONFIG_ICH_SPI is not set
+# CONFIG_MVEBU_A3700_SPI is not set
+# CONFIG_ROCKCHIP_SPI is not set
+CONFIG_SUN6I_SPI=y
+# CONFIG_TEGRA114_SPI is not set
+# CONFIG_TEGRA20_SFLASH is not set
+# CONFIG_TEGRA20_SLINK is not set
+# CONFIG_TEGRA210_QSPI is not set
+# CONFIG_XILINX_SPI is not set
+# CONFIG_SOFT_SPI is not set
+# CONFIG_FSL_ESPI is not set
+# CONFIG_FSL_QSPI is not set
+# CONFIG_ATCSPI200_SPI is not set
+# CONFIG_TI_QSPI is not set
+# CONFIG_OMAP3_SPI is not set
+
+#
+# SPMI support
+#
+# CONFIG_SPMI is not set
+
+#
+# System reset device drivers
+#
+# CONFIG_SYSRESET is not set
+# CONFIG_SYSRESET_SYSCON is not set
+# CONFIG_SYSRESET_WATCHDOG is not set
+# CONFIG_DM_THERMAL is not set
+
+#
+# Timer Support
+#
+# CONFIG_TIMER is not set
+
+#
+# TPM support
+#
+CONFIG_USB=y
+CONFIG_DM_USB=y
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_XHCI_HCD is not set
+# CONFIG_USB_EHCI_HCD is not set
+# CONFIG_USB_OHCI_HCD is not set
+# CONFIG_USB_UHCI_HCD is not set
+# CONFIG_USB_DWC2 is not set
+# CONFIG_USB_DWC3 is not set
+
+#
+# MUSB Controller Driver
+#
+# CONFIG_USB_MUSB_HOST is not set
+# CONFIG_USB_MUSB_GADGET is not set
+# CONFIG_USB_MUSB_TI is not set
+
+#
+# ULPI drivers
+#
+
+#
+# USB peripherals
+#
+CONFIG_USB_STORAGE=y
+CONFIG_USB_KEYBOARD=y
+CONFIG_SYS_USB_EVENT_POLL=y
+# CONFIG_SYS_USB_EVENT_POLL_VIA_INT_QUEUE is not set
+# CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP is not set
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="Allwinner Technology"
+CONFIG_USB_GADGET_VENDOR_NUM=0x1f3a
+CONFIG_USB_GADGET_PRODUCT_NUM=0x1010
+# CONFIG_USB_GADGET_ATMEL_USBA is not set
+# CONFIG_USB_GADGET_BCM_UDC_OTG_PHY is not set
+# CONFIG_USB_GADGET_DWC2_OTG is not set
+# CONFIG_CI_UDC is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+# CONFIG_USB_GADGET_DOWNLOAD is not set
+# CONFIG_USB_ETHER is not set
+# CONFIG_USB_HOST_ETHER is not set
+
+#
+# Graphics support
+#
+# CONFIG_DM_VIDEO is not set
+# CONFIG_SYS_WHITE_ON_BLACK is not set
+# CONFIG_NO_FB_CLEAR is not set
+
+#
+# TrueType Fonts
+#
+# CONFIG_VIDEO_VESA is not set
+# CONFIG_VIDEO_LCD_ANX9804 is not set
+# CONFIG_VIDEO_LCD_SSD2828 is not set
+# CONFIG_VIDEO_LCD_HITACHI_TX18D42VM is not set
+# CONFIG_VIDEO_MVEBU is not set
+# CONFIG_DISPLAY is not set
+# CONFIG_VIDEO_FSL_DCU_FB is not set
+# CONFIG_VIDEO_TEGRA20 is not set
+# CONFIG_VIDEO_BRIDGE is not set
+CONFIG_VIDEO=y
+CONFIG_CFB_CONSOLE=y
+# CONFIG_CFB_CONSOLE_ANSI is not set
+CONFIG_VGA_AS_SINGLE_DEVICE=y
+CONFIG_VIDEO_SW_CURSOR=y
+# CONFIG_CONSOLE_EXTRA_INFO is not set
+CONFIG_CONSOLE_SCROLL_LINES=1
+CONFIG_SYS_CONSOLE_BG_COL=0x00
+CONFIG_SYS_CONSOLE_FG_COL=0xa0
+# CONFIG_LCD is not set
+# CONFIG_VIDEO_SIMPLE is not set
+# CONFIG_VIDEO_DT_SIMPLEFB is not set
+
+#
+# Watchdog Timer Support
+#
+# CONFIG_BCM2835_WDT is not set
+# CONFIG_ULP_WATCHDOG is not set
+# CONFIG_WDT is not set
+# CONFIG_PHYS_TO_BUS is not set
+
+#
+# File systems
+#
+# CONFIG_FS_BTRFS is not set
+# CONFIG_FS_CBFS is not set
+CONFIG_FS_FAT=y
+CONFIG_FAT_WRITE=y
+CONFIG_FS_FAT_MAX_CLUSTSIZE=65536
+# CONFIG_FS_JFFS2 is not set
+# CONFIG_FS_CRAMFS is not set
+# CONFIG_YAFFS2 is not set
+
+#
+# Library routines
+#
+# CONFIG_BCH is not set
+# CONFIG_CC_OPTIMIZE_LIBS_FOR_SPEED is not set
+CONFIG_HAVE_PRIVATE_LIBGCC=y
+CONFIG_USE_PRIVATE_LIBGCC=y
+CONFIG_SYS_HZ=1000
+CONFIG_USE_TINY_PRINTF=y
+# CONFIG_PANIC_HANG is not set
+# CONFIG_REGEX is not set
+# CONFIG_LIB_RAND is not set
+# CONFIG_SPL_TINY_MEMSET is not set
+# CONFIG_TPL_TINY_MEMSET is not set
+# CONFIG_BITREVERSE is not set
+# CONFIG_CMD_DHRYSTONE is not set
+
+#
+# Security support
+#
+# CONFIG_AES is not set
+# CONFIG_RSA is not set
+# CONFIG_TPM is not set
+
+#
+# Hashing Support
+#
+# CONFIG_SHA1 is not set
+# CONFIG_SHA256 is not set
+# CONFIG_SHA_HW_ACCEL is not set
+
+#
+# Compression Support
+#
+# CONFIG_LZ4 is not set
+# CONFIG_LZMA is not set
+# CONFIG_LZO is not set
+# CONFIG_SPL_LZO is not set
+# CONFIG_SPL_GZIP is not set
+# CONFIG_ERRNO_STR is not set
+CONFIG_OF_LIBFDT=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_SPL_OF_LIBFDT is not set
+# CONFIG_FDT_FIXUP_PARTITIONS is not set
+
+#
+# System tables
+#
+CONFIG_GENERATE_SMBIOS_TABLE=y
+CONFIG_SMBIOS_MANUFACTURER=""
+CONFIG_EFI_LOADER=y
+# CONFIG_UNIT_TEST is not set
diff --git a/configs/libretech_all_h3_cc_h3_defconfig b/configs/libretech_all_h3_cc_h3_defconfig
new file mode 100644
index 0000000000..1ae02c2e68
--- /dev/null
+++ b/configs/libretech_all_h3_cc_h3_defconfig
@@ -0,0 +1,19 @@
+CONFIG_ARM=y
+CONFIG_ARCH_SUNXI=y
+CONFIG_MACH_SUN8I_H3=y
+CONFIG_DRAM_CLK=672
+CONFIG_DRAM_ZQ=3881979
+CONFIG_DRAM_ODT_EN=y
+CONFIG_R_I2C_ENABLE=y
+CONFIG_DEFAULT_DEVICE_TREE="sun8i-h3-libretech-all-h3-cc"
+# CONFIG_SYS_MALLOC_CLEAR_ON_INIT is not set
+CONFIG_SPL=y
+CONFIG_SPL_I2C_SUPPORT=y
+# CONFIG_CMD_FLASH is not set
+# CONFIG_CMD_FPGA is not set
+# CONFIG_SPL_DOS_PARTITION is not set
+# CONFIG_SPL_ISO_PARTITION is not set
+# CONFIG_SPL_EFI_PARTITION is not set
+CONFIG_SUN8I_EMAC=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_SYS_USB_EVENT_POLL_VIA_INT_QUEUE=y
diff --git a/configs/licheepi_nano_defconfig b/configs/licheepi_nano_defconfig
new file mode 100644
index 0000000000..6e455baadf
--- /dev/null
+++ b/configs/licheepi_nano_defconfig
@@ -0,0 +1,9 @@
+CONFIG_ARM=y
+CONFIG_ARCH_SUNXI=y
+CONFIG_MACH_SUNIV=y
+CONFIG_DRAM_CLK=156
+CONFIG_DRAM_ZQ=0
+# CONFIG_VIDEO_SUNXI is not set
+CONFIG_DEFAULT_DEVICE_TREE="suniv-f1c100s-licheepi-nano"
+CONFIG_SPL=y
+# CONFIG_SPL_DM_SERIAL is not set
diff --git a/configs/licheepi_nano_spiflash_defconfig b/configs/licheepi_nano_spiflash_defconfig
new file mode 100644
index 0000000000..07b6a27dbe
--- /dev/null
+++ b/configs/licheepi_nano_spiflash_defconfig
@@ -0,0 +1,25 @@
+CONFIG_ARM=y
+CONFIG_ARCH_SUNXI=y
+CONFIG_ENV_SIZE=0x8000
+CONFIG_ENV_OFFSET=0xf8000
+CONFIG_MACH_SUNIV=y
+CONFIG_DRAM_CLK=156
+CONFIG_DRAM_ZQ=0
+# CONFIG_VIDEO_SUNXI is not set
+CONFIG_DEFAULT_DEVICE_TREE="suniv-f1c100s-licheepi-nano"
+CONFIG_SPL=y
+# CONFIG_CMD_FLASH is not set
+# CONFIG_CMD_FPGA is not set
+CONFIG_CMD_SF=y
+CONFIG_CMD_SPI=y
+CONFIG_ENV_IS_IN_SPI_FLASH=y
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_BAR=y
+CONFIG_SPI_FLASH_GIGADEVICE=y
+CONFIG_SPI_FLASH_MACRONIX=y
+CONFIG_SPI_FLASH_WINBOND=y
+CONFIG_SPL_SPI_SUNXI=y
+# CONFIG_SPL_DM_SERIAL is not set
+CONFIG_DM_SPI=y
+CONFIG_SUN6I_SPI=y
diff --git a/configs/suniv_defconfig b/configs/suniv_defconfig
new file mode 100644
index 0000000000..ac938f6702
--- /dev/null
+++ b/configs/suniv_defconfig
@@ -0,0 +1,1128 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# U-Boot 2018.01 Configuration
+#
+CONFIG_CREATE_ARCH_SYMLINK=y
+# CONFIG_ARC is not set
+CONFIG_ARM=y
+# CONFIG_M68K is not set
+# CONFIG_MICROBLAZE is not set
+# CONFIG_MIPS is not set
+# CONFIG_NDS32 is not set
+# CONFIG_NIOS2 is not set
+# CONFIG_PPC is not set
+# CONFIG_SANDBOX is not set
+# CONFIG_SH is not set
+# CONFIG_X86 is not set
+# CONFIG_XTENSA is not set
+CONFIG_SYS_ARCH="arm"
+CONFIG_SYS_CPU="arm926ejs"
+CONFIG_SYS_SOC="sunxi"
+CONFIG_SYS_BOARD="sunxi"
+CONFIG_SYS_CONFIG_NAME="suniv"
+
+#
+# ARM architecture
+#
+CONFIG_ARM_ASM_UNIFIED=y
+CONFIG_CPU_ARM926EJS=y
+CONFIG_SYS_ARM_ARCH=5
+CONFIG_SYS_CACHE_SHIFT_5=y
+CONFIG_SYS_CACHELINE_SIZE=32
+# CONFIG_SEMIHOSTING is not set
+CONFIG_SYS_THUMB_BUILD=y
+CONFIG_SPL_SYS_THUMB_BUILD=y
+# CONFIG_SYS_L2CACHE_OFF is not set
+# CONFIG_ENABLE_ARM_SOC_BOOT0_HOOK is not set
+# CONFIG_ARM_CORTEX_CPU_IS_UP is not set
+CONFIG_USE_ARCH_MEMCPY=y
+CONFIG_SPL_USE_ARCH_MEMCPY=y
+CONFIG_USE_ARCH_MEMSET=y
+CONFIG_SPL_USE_ARCH_MEMSET=y
+# CONFIG_ARM64_SUPPORT_AARCH32 is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_TARGET_EDB93XX is not set
+# CONFIG_TARGET_ASPENITE is not set
+# CONFIG_TARGET_GPLUGD is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_KIRKWOOD is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_TARGET_DEVKIT3250 is not set
+# CONFIG_TARGET_WORK_92105 is not set
+# CONFIG_TARGET_APF27 is not set
+# CONFIG_TARGET_APX4DEVKIT is not set
+# CONFIG_TARGET_XFI3 is not set
+# CONFIG_TARGET_M28EVK is not set
+# CONFIG_TARGET_MX23EVK is not set
+# CONFIG_TARGET_MX28EVK is not set
+# CONFIG_TARGET_MX23_OLINUXINO is not set
+# CONFIG_TARGET_BG0900 is not set
+# CONFIG_TARGET_SANSA_FUZE_PLUS is not set
+# CONFIG_TARGET_SC_SPS_1 is not set
+# CONFIG_ORION5X is not set
+# CONFIG_TARGET_SPEAR300 is not set
+# CONFIG_TARGET_SPEAR310 is not set
+# CONFIG_TARGET_SPEAR320 is not set
+# CONFIG_TARGET_SPEAR600 is not set
+# CONFIG_TARGET_STV0991 is not set
+# CONFIG_TARGET_X600 is not set
+# CONFIG_TARGET_IMX31_PHYCORE is not set
+# CONFIG_TARGET_IMX31_PHYCORE_EET is not set
+# CONFIG_TARGET_MX31ADS is not set
+# CONFIG_TARGET_MX31PDK is not set
+# CONFIG_TARGET_WOODBURN is not set
+# CONFIG_TARGET_WOODBURN_SD is not set
+# CONFIG_TARGET_FLEA3 is not set
+# CONFIG_TARGET_MX35PDK is not set
+# CONFIG_ARCH_BCM283X is not set
+# CONFIG_TARGET_VEXPRESS_CA15_TC2 is not set
+# CONFIG_TARGET_VEXPRESS_CA5X2 is not set
+# CONFIG_TARGET_VEXPRESS_CA9X4 is not set
+# CONFIG_TARGET_BCM23550_W1D is not set
+# CONFIG_TARGET_BCM28155_AP is not set
+# CONFIG_TARGET_BCMCYGNUS is not set
+# CONFIG_TARGET_BCMNSP is not set
+# CONFIG_TARGET_BCMNS2 is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_S5PC1XX is not set
+# CONFIG_ARCH_HIGHBANK is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_KEYSTONE is not set
+# CONFIG_ARCH_OMAP2PLUS is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MX25 is not set
+# CONFIG_ARCH_MX7ULP is not set
+# CONFIG_ARCH_MX7 is not set
+# CONFIG_ARCH_MX6 is not set
+CONFIG_SPL_LDSCRIPT="arch/arm/cpu/arm926ejs/sunxi/u-boot-spl.lds"
+# CONFIG_ARCH_MX5 is not set
+# CONFIG_ARCH_QEMU is not set
+# CONFIG_ARCH_RMOBILE is not set
+# CONFIG_TARGET_S32V234EVB is not set
+# CONFIG_ARCH_SNAPDRAGON is not set
+# CONFIG_ARCH_SOCFPGA is not set
+CONFIG_ARCH_SUNXI=y
+# CONFIG_TARGET_TS4600 is not set
+# CONFIG_ARCH_VF610 is not set
+# CONFIG_ARCH_ZYNQ is not set
+# CONFIG_ARCH_ZYNQMP is not set
+# CONFIG_TEGRA is not set
+# CONFIG_TARGET_VEXPRESS64_AEMV8A is not set
+# CONFIG_TARGET_VEXPRESS64_BASE_FVP is not set
+# CONFIG_TARGET_VEXPRESS64_BASE_FVP_DRAM is not set
+# CONFIG_TARGET_VEXPRESS64_JUNO is not set
+# CONFIG_TARGET_LS2080A_EMU is not set
+# CONFIG_TARGET_LS2080A_SIMU is not set
+# CONFIG_TARGET_LS1088AQDS is not set
+# CONFIG_TARGET_LS2080AQDS is not set
+# CONFIG_TARGET_LS2080ARDB is not set
+# CONFIG_TARGET_LS2081ARDB is not set
+# CONFIG_TARGET_HIKEY is not set
+# CONFIG_TARGET_POPLAR is not set
+# CONFIG_TARGET_LS1012AQDS is not set
+# CONFIG_TARGET_LS1012ARDB is not set
+# CONFIG_TARGET_LS1012AFRDM is not set
+# CONFIG_TARGET_LS1088ARDB is not set
+# CONFIG_TARGET_LS1021AQDS is not set
+# CONFIG_TARGET_LS1021ATWR is not set
+# CONFIG_TARGET_LS1021AIOT is not set
+# CONFIG_TARGET_LS1043AQDS is not set
+# CONFIG_TARGET_LS1043ARDB is not set
+# CONFIG_TARGET_LS1046AQDS is not set
+# CONFIG_TARGET_LS1046ARDB is not set
+# CONFIG_TARGET_H2200 is not set
+# CONFIG_TARGET_ZIPITZ2 is not set
+# CONFIG_TARGET_COLIBRI_PXA270 is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_STM32 is not set
+# CONFIG_ARCH_STI is not set
+# CONFIG_ARCH_ROCKCHIP is not set
+# CONFIG_TARGET_THUNDERX_88XX is not set
+# CONFIG_ARCH_ASPEED is not set
+CONFIG_SPL_GPIO_SUPPORT=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_SYS_MALLOC_F_LEN=0x400
+CONFIG_CONS_INDEX=1
+CONFIG_SPL_MMC_SUPPORT=y
+CONFIG_SPL_SERIAL_SUPPORT=y
+# CONFIG_SPL_DRIVERS_MISC_SUPPORT is not set
+CONFIG_ENV_SIZE=0x8000
+CONFIG_ENV_OFFSET=0xf8000
+CONFIG_SPL_LIBDISK_SUPPORT=y
+# CONFIG_SPL_NAND_SUPPORT is not set
+# CONFIG_SPL_SPI_FLASH_SUPPORT is not set
+# CONFIG_SPL_SPI_SUPPORT is not set
+# CONFIG_SPL_WATCHDOG_SUPPORT is not set
+CONFIG_IDENT_STRING=" Allwinner Technology"
+# CONFIG_SUNXI_HIGH_SRAM is not set
+CONFIG_SUNXI_GEN_SUN6I=y
+CONFIG_MACH_SUNIV=y
+# CONFIG_MACH_SUN4I is not set
+# CONFIG_MACH_SUN5I is not set
+# CONFIG_MACH_SUN6I is not set
+# CONFIG_MACH_SUN7I is not set
+# CONFIG_MACH_SUN8I_A23 is not set
+# CONFIG_MACH_SUN8I_A33 is not set
+# CONFIG_MACH_SUN8I_A83T is not set
+# CONFIG_MACH_SUN8I_H3 is not set
+# CONFIG_MACH_SUN8I_R40 is not set
+# CONFIG_MACH_SUN8I_V3S is not set
+# CONFIG_MACH_SUN9I is not set
+# CONFIG_MACH_SUN50I is not set
+# CONFIG_MACH_SUN50I_H5 is not set
+# CONFIG_RESERVE_ALLWINNER_BOOT0_HEADER is not set
+CONFIG_DRAM_CLK=156
+CONFIG_DRAM_ZQ=0
+# CONFIG_DRAM_ODT_EN is not set
+CONFIG_SYS_CLK_FREQ=408000000
+# CONFIG_UART0_PORT_F is not set
+# CONFIG_OLD_SUNXI_KERNEL_COMPAT is not set
+CONFIG_MACPWR=""
+CONFIG_MMC0_CD_PIN=""
+CONFIG_MMC1_CD_PIN=""
+CONFIG_MMC2_CD_PIN=""
+CONFIG_MMC3_CD_PIN=""
+CONFIG_MMC1_PINS=""
+CONFIG_MMC2_PINS=""
+CONFIG_MMC3_PINS=""
+CONFIG_MMC_SUNXI_SLOT_EXTRA=-1
+CONFIG_INITIAL_USB_SCAN_DELAY=0
+CONFIG_USB0_VBUS_PIN=""
+CONFIG_USB0_VBUS_DET=""
+CONFIG_USB0_ID_DET=""
+CONFIG_USB1_VBUS_PIN=""
+CONFIG_USB2_VBUS_PIN=""
+CONFIG_USB3_VBUS_PIN=""
+# CONFIG_I2C0_ENABLE is not set
+# CONFIG_I2C1_ENABLE is not set
+# CONFIG_I2C2_ENABLE is not set
+# CONFIG_R_I2C_ENABLE is not set
+# CONFIG_AXP_GPIO is not set
+CONFIG_VIDEO_SUNXI=y
+CONFIG_VIDEO_LCD_MODE="x:800,y:480,depth:18,pclk_khz:33000,le:87,ri:40,up:31,lo:13,hs:1,vs:1,sync:3,vmode:0"
+CONFIG_VIDEO_LCD_DCLK_PHASE=1
+CONFIG_VIDEO_LCD_POWER=""
+CONFIG_VIDEO_LCD_RESET=""
+CONFIG_VIDEO_LCD_BL_EN=""
+CONFIG_VIDEO_LCD_BL_PWM="PE6"
+CONFIG_VIDEO_LCD_BL_PWM_ACTIVE_LOW=y
+# CONFIG_VIDEO_LCD_PANEL_I2C is not set
+CONFIG_VIDEO_LCD_IF_PARALLEL=y
+# CONFIG_SUNXI_DE2 is not set
+CONFIG_VIDEO_LCD_PANEL_PARALLEL=y
+# CONFIG_VIDEO_LCD_PANEL_LVDS is not set
+# CONFIG_VIDEO_LCD_PANEL_MIPI_4_LANE_513_MBPS_VIA_SSD2828 is not set
+# CONFIG_VIDEO_LCD_PANEL_EDP_4_LANE_1620M_VIA_ANX9804 is not set
+# CONFIG_VIDEO_LCD_PANEL_HITACHI_TX18D42VM is not set
+# CONFIG_VIDEO_LCD_TL059WV5C0 is not set
+CONFIG_SATAPWR=""
+CONFIG_GMAC_TX_DELAY=0
+CONFIG_SPL_STACK_R_ADDR=0x81e00000
+# CONFIG_SPL_FAT_SUPPORT is not set
+# CONFIG_CMD_DEKBLOB is not set
+# CONFIG_CMD_HDMIDETECT is not set
+
+#
+# ARM debug
+#
+# CONFIG_DEBUG_LL is not set
+CONFIG_DEFAULT_DEVICE_TREE="suniv-f1c100s-licheepi-nano"
+CONFIG_SMBIOS_PRODUCT_NAME="sunxi"
+# CONFIG_DEBUG_UART is not set
+# CONFIG_AHCI is not set
+
+#
+# General setup
+#
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_SYS_MALLOC_F=y
+CONFIG_SPL_SYS_MALLOC_F_LEN=0x400
+CONFIG_TPL_SYS_MALLOC_F_LEN=0x400
+CONFIG_EXPERT=y
+CONFIG_SYS_MALLOC_CLEAR_ON_INIT=y
+# CONFIG_TOOLS_DEBUG is not set
+# CONFIG_PHYS_64BIT is not set
+
+#
+# Boot images
+#
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+# CONFIG_FIT is not set
+CONFIG_OF_BOARD_SETUP=y
+# CONFIG_OF_SYSTEM_SETUP is not set
+# CONFIG_OF_STDOUT_VIA_ALIAS is not set
+CONFIG_SYS_EXTRA_OPTIONS=""
+CONFIG_ARCH_FIXUP_FDT_MEMORY=y
+
+#
+# API
+#
+# CONFIG_API is not set
+
+#
+# Boot timing
+#
+# CONFIG_BOOTSTAGE is not set
+CONFIG_BOOTSTAGE_RECORD_COUNT=30
+CONFIG_SPL_BOOTSTAGE_RECORD_COUNT=5
+CONFIG_BOOTSTAGE_STASH_ADDR=0
+CONFIG_BOOTSTAGE_STASH_SIZE=0x1000
+
+#
+# Boot media
+#
+# CONFIG_NAND_BOOT is not set
+# CONFIG_ONENAND_BOOT is not set
+# CONFIG_QSPI_BOOT is not set
+# CONFIG_SATA_BOOT is not set
+# CONFIG_SD_BOOT is not set
+# CONFIG_SPI_BOOT is not set
+CONFIG_BOOTDELAY=2
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="console=ttyS0,115200 panic=5 rootwait root=/dev/mtdblock3 rw rootfstype=jffs2"
+# CONFIG_USE_BOOTCOMMAND is not set
+
+#
+# Console
+#
+CONFIG_MENU=y
+# CONFIG_CONSOLE_RECORD is not set
+CONFIG_LOGLEVEL=4
+CONFIG_SPL_LOGLEVEL=4
+# CONFIG_SILENT_CONSOLE is not set
+CONFIG_PRE_CONSOLE_BUFFER=y
+CONFIG_PRE_CON_BUF_SZ=4096
+CONFIG_PRE_CON_BUF_ADDR=0x4f000000
+# CONFIG_CONSOLE_MUX is not set
+# CONFIG_SYS_CONSOLE_IS_IN_ENV is not set
+# CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE is not set
+# CONFIG_SYS_CONSOLE_ENV_OVERWRITE is not set
+# CONFIG_SYS_CONSOLE_INFO_QUIET is not set
+CONFIG_SYS_STDIO_DEREGISTER=y
+
+#
+# Logging
+#
+# CONFIG_LOG is not set
+# CONFIG_SPL_LOG is not set
+CONFIG_DEFAULT_FDT_FILE=""
+# CONFIG_VERSION_VARIABLE is not set
+CONFIG_DISPLAY_CPUINFO=y
+CONFIG_DISPLAY_BOARDINFO=y
+
+#
+# Start-up hooks
+#
+# CONFIG_ARCH_EARLY_INIT_R is not set
+# CONFIG_ARCH_MISC_INIT is not set
+# CONFIG_BOARD_EARLY_INIT_F is not set
+
+#
+# Security support
+#
+
+#
+# SPL / TPL
+#
+CONFIG_SUPPORT_SPL=y
+CONFIG_SPL=y
+# CONFIG_SPL_BOARD_INIT is not set
+# CONFIG_SPL_BOOTROM_SUPPORT is not set
+CONFIG_SPL_RAW_IMAGE_SUPPORT=y
+CONFIG_SPL_LEGACY_IMAGE_SUPPORT=y
+CONFIG_SPL_SYS_MALLOC_SIMPLE=y
+# CONFIG_TPL_SYS_MALLOC_SIMPLE is not set
+CONFIG_SPL_STACK_R=y
+CONFIG_SPL_STACK_R_MALLOC_SIMPLE_LEN=0x100000
+# CONFIG_SPL_SEPARATE_BSS is not set
+# CONFIG_SPL_DISPLAY_PRINT is not set
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x50
+# CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_PARTITION is not set
+# CONFIG_SPL_CPU_SUPPORT is not set
+# CONFIG_SPL_CRYPTO_SUPPORT is not set
+# CONFIG_SPL_HASH_SUPPORT is not set
+# CONFIG_SPL_DMA_SUPPORT is not set
+# CONFIG_SPL_ENV_SUPPORT is not set
+# CONFIG_SPL_EXT_SUPPORT is not set
+# CONFIG_SPL_FPGA_SUPPORT is not set
+# CONFIG_SPL_I2C_SUPPORT is not set
+# CONFIG_SPL_MPC8XXX_INIT_DDR_SUPPORT is not set
+# CONFIG_SPL_MTD_SUPPORT is not set
+# CONFIG_SPL_MUSB_NEW_SUPPORT is not set
+# CONFIG_SPL_NET_SUPPORT is not set
+# CONFIG_SPL_NO_CPU_SUPPORT is not set
+# CONFIG_SPL_NOR_SUPPORT is not set
+# CONFIG_SPL_XIP_SUPPORT is not set
+# CONFIG_SPL_ONENAND_SUPPORT is not set
+# CONFIG_SPL_OS_BOOT is not set
+# CONFIG_SPL_PCI_SUPPORT is not set
+# CONFIG_SPL_PCH_SUPPORT is not set
+# CONFIG_SPL_POST_MEM_SUPPORT is not set
+CONFIG_SPL_POWER_SUPPORT=y
+# CONFIG_SPL_RAM_SUPPORT is not set
+# CONFIG_SPL_RTC_SUPPORT is not set
+# CONFIG_SPL_SATA_SUPPORT is not set
+# CONFIG_SPL_THERMAL is not set
+# CONFIG_SPL_USB_HOST_SUPPORT is not set
+# CONFIG_SPL_USB_GADGET_SUPPORT is not set
+# CONFIG_SPL_YMODEM_SUPPORT is not set
+
+#
+# Command line interface
+#
+CONFIG_CMDLINE=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="=> "
+
+#
+# Autoboot options
+#
+CONFIG_AUTOBOOT=y
+# CONFIG_AUTOBOOT_KEYED is not set
+
+#
+# FASTBOOT
+#
+# CONFIG_FASTBOOT is not set
+
+#
+# Commands
+#
+
+#
+# Info commands
+#
+CONFIG_CMD_BDI=y
+# CONFIG_CMD_CONFIG is not set
+CONFIG_CMD_CONSOLE=y
+# CONFIG_CMD_CPU is not set
+# CONFIG_CMD_LICENSE is not set
+
+#
+# Boot commands
+#
+CONFIG_CMD_BOOTD=y
+CONFIG_CMD_BOOTM=y
+CONFIG_CMD_BOOTZ=y
+CONFIG_CMD_BOOTEFI=y
+CONFIG_CMD_BOOTEFI_HELLO_COMPILE=y
+# CONFIG_CMD_BOOTEFI_HELLO is not set
+# CONFIG_CMD_BOOTEFI_SELFTEST is not set
+# CONFIG_CMD_BOOTMENU is not set
+CONFIG_CMD_ELF=y
+CONFIG_CMD_FDT=y
+CONFIG_CMD_GO=y
+CONFIG_CMD_RUN=y
+CONFIG_CMD_IMI=y
+# CONFIG_CMD_IMLS is not set
+CONFIG_CMD_XIMG=y
+# CONFIG_CMD_POWEROFF is not set
+# CONFIG_CMD_SPL is not set
+# CONFIG_CMD_THOR_DOWNLOAD is not set
+# CONFIG_CMD_ZBOOT is not set
+
+#
+# Environment commands
+#
+# CONFIG_CMD_ASKENV is not set
+CONFIG_CMD_EXPORTENV=y
+CONFIG_CMD_IMPORTENV=y
+CONFIG_CMD_EDITENV=y
+# CONFIG_CMD_GREPENV is not set
+CONFIG_CMD_SAVEENV=y
+CONFIG_CMD_ENV_EXISTS=y
+# CONFIG_CMD_ENV_CALLBACK is not set
+# CONFIG_CMD_ENV_FLAGS is not set
+
+#
+# Memory commands
+#
+# CONFIG_CMD_CRC32 is not set
+# CONFIG_CMD_EEPROM is not set
+# CONFIG_LOOPW is not set
+# CONFIG_CMD_MD5SUM is not set
+# CONFIG_CMD_MEMINFO is not set
+CONFIG_CMD_MEMORY=y
+# CONFIG_CMD_MEMTEST is not set
+# CONFIG_CMD_MX_CYCLIC is not set
+# CONFIG_CMD_SHA1SUM is not set
+# CONFIG_CMD_STRINGS is not set
+
+#
+# Compression commands
+#
+# CONFIG_CMD_LZMADEC is not set
+# CONFIG_CMD_UNZIP is not set
+# CONFIG_CMD_ZIP is not set
+
+#
+# Device access commands
+#
+# CONFIG_CMD_ARMFLASH is not set
+# CONFIG_CMD_CLK is not set
+# CONFIG_CMD_DEMO is not set
+# CONFIG_CMD_DFU is not set
+CONFIG_CMD_DM=y
+# CONFIG_CMD_FDC is not set
+# CONFIG_CMD_FLASH is not set
+# CONFIG_CMD_FPGA is not set
+# CONFIG_CMD_FPGAD is not set
+# CONFIG_CMD_FUSE is not set
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_GPT=y
+CONFIG_RANDOM_UUID=y
+# CONFIG_CMD_GPT_RENAME is not set
+# CONFIG_CMD_IDE is not set
+# CONFIG_CMD_IO is not set
+# CONFIG_CMD_IOTRACE is not set
+# CONFIG_CMD_I2C is not set
+CONFIG_CMD_LOADB=y
+CONFIG_CMD_LOADS=y
+CONFIG_CMD_MMC=y
+# CONFIG_CMD_NAND is not set
+# CONFIG_CMD_MMC_SPI is not set
+# CONFIG_CMD_ONENAND is not set
+CONFIG_CMD_PART=y
+# CONFIG_CMD_PCI is not set
+# CONFIG_CMD_PCMCIA is not set
+# CONFIG_CMD_READ is not set
+# CONFIG_CMD_SATA is not set
+# CONFIG_CMD_SAVES is not set
+# CONFIG_CMD_SDRAM is not set
+CONFIG_CMD_SF=y
+# CONFIG_CMD_SF_TEST is not set
+CONFIG_CMD_SPI=y
+# CONFIG_CMD_TSI148 is not set
+# CONFIG_CMD_UNIVERSE is not set
+CONFIG_CMD_USB=y
+# CONFIG_CMD_USB_SDP is not set
+# CONFIG_CMD_USB_MASS_STORAGE is not set
+
+#
+# Shell scripting commands
+#
+CONFIG_CMD_ECHO=y
+CONFIG_CMD_ITEST=y
+CONFIG_CMD_SOURCE=y
+CONFIG_CMD_SETEXPR=y
+
+#
+# Network commands
+#
+CONFIG_CMD_NET=y
+# CONFIG_CMD_TFTPPUT is not set
+# CONFIG_CMD_TFTPSRV is not set
+# CONFIG_CMD_RARP is not set
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_PXE=y
+CONFIG_CMD_NFS=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+# CONFIG_CMD_CDP is not set
+# CONFIG_CMD_SNTP is not set
+# CONFIG_CMD_DNS is not set
+# CONFIG_CMD_LINK_LOCAL is not set
+# CONFIG_CMD_ETHSW is not set
+
+#
+# Misc commands
+#
+# CONFIG_CMD_BMP is not set
+# CONFIG_CMD_BSP is not set
+# CONFIG_CMD_BKOPS_ENABLE is not set
+# CONFIG_CMD_CACHE is not set
+# CONFIG_CMD_DISPLAY is not set
+# CONFIG_CMD_LED is not set
+# CONFIG_CMD_DATE is not set
+# CONFIG_CMD_TIME is not set
+# CONFIG_CMD_GETTIME is not set
+# CONFIG_CMD_MISC is not set
+# CONFIG_CMD_TIMER is not set
+# CONFIG_CMD_QFW is not set
+# CONFIG_CMD_TERMINAL is not set
+# CONFIG_CMD_UUID is not set
+
+#
+# Power commands
+#
+
+#
+# Security commands
+#
+# CONFIG_CMD_AES is not set
+# CONFIG_CMD_BLOB is not set
+# CONFIG_CMD_HASH is not set
+
+#
+# Firmware commands
+#
+
+#
+# Filesystem commands
+#
+# CONFIG_CMD_BTRFS is not set
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+# CONFIG_CMD_EXT4_WRITE is not set
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_CMD_FS_UUID is not set
+# CONFIG_CMD_JFFS2 is not set
+# CONFIG_CMD_MTDPARTS is not set
+# CONFIG_CMD_REISER is not set
+# CONFIG_CMD_SCSI is not set
+# CONFIG_CMD_ZFS is not set
+
+#
+# Debug commands
+#
+# CONFIG_CMD_BEDBUG is not set
+# CONFIG_CMD_DIAG is not set
+# CONFIG_CMD_KGDB is not set
+# CONFIG_CMD_LOG is not set
+# CONFIG_CMD_TRACE is not set
+# CONFIG_CMD_UBI is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITIONS=y
+# CONFIG_MAC_PARTITION is not set
+# CONFIG_SPL_MAC_PARTITION is not set
+CONFIG_DOS_PARTITION=y
+CONFIG_SPL_DOS_PARTITION=y
+CONFIG_ISO_PARTITION=y
+CONFIG_SPL_ISO_PARTITION=y
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_SPL_AMIGA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+CONFIG_EFI_PARTITION_ENTRIES_NUMBERS=56
+CONFIG_EFI_PARTITION_ENTRIES_OFF=0
+CONFIG_SPL_EFI_PARTITION=y
+CONFIG_PARTITION_UUIDS=y
+CONFIG_SPL_PARTITION_UUIDS=y
+# CONFIG_PARTITION_TYPE_GUID is not set
+CONFIG_SUPPORT_OF_CONTROL=y
+CONFIG_DTC=y
+CONFIG_PYLIBFDT=y
+CONFIG_DTOC=y
+CONFIG_BINMAN=y
+
+#
+# Device Tree Control
+#
+CONFIG_OF_CONTROL=y
+# CONFIG_OF_BOARD_FIXUP is not set
+# CONFIG_SPL_OF_CONTROL is not set
+# CONFIG_OF_LIVE is not set
+CONFIG_OF_SEPARATE=y
+# CONFIG_OF_EMBED is not set
+# CONFIG_OF_BOARD is not set
+# CONFIG_MULTI_DTB_FIT is not set
+CONFIG_MKIMAGE_DTC_PATH="dtc"
+
+#
+# Environment
+#
+# CONFIG_ENV_IS_NOWHERE is not set
+# CONFIG_ENV_IS_IN_EEPROM is not set
+# CONFIG_ENV_IS_IN_FAT is not set
+# CONFIG_ENV_IS_IN_FLASH is not set
+# CONFIG_ENV_IS_IN_MMC is not set
+# CONFIG_ENV_IS_IN_NAND is not set
+# CONFIG_ENV_IS_IN_NVRAM is not set
+# CONFIG_ENV_IS_IN_ONENAND is not set
+# CONFIG_ENV_IS_IN_REMOTE is not set
+CONFIG_ENV_IS_IN_SPI_FLASH=y
+# CONFIG_ENV_IS_IN_UBI is not set
+CONFIG_NET=y
+# CONFIG_NET_RANDOM_ETHADDR is not set
+# CONFIG_NETCONSOLE is not set
+CONFIG_NET_TFTP_VARS=y
+CONFIG_BOOTP_PXE_CLIENTARCH=0x15
+CONFIG_BOOTP_VCI_STRING="U-Boot.arm"
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_DM=y
+# CONFIG_SPL_DM is not set
+CONFIG_DM_WARN=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_DEVICE_REMOVE=y
+CONFIG_DM_STDIO=y
+CONFIG_DM_SEQ_ALIAS=y
+# CONFIG_SPL_DM_SEQ_ALIAS is not set
+# CONFIG_REGMAP is not set
+# CONFIG_DEVRES is not set
+CONFIG_SIMPLE_BUS=y
+CONFIG_OF_TRANSLATE=y
+CONFIG_DM_DEV_READ_INLINE=y
+# CONFIG_ADC is not set
+# CONFIG_ADC_EXYNOS is not set
+# CONFIG_ADC_SANDBOX is not set
+# CONFIG_SARADC_ROCKCHIP is not set
+# CONFIG_SATA is not set
+# CONFIG_SCSI_AHCI is not set
+
+#
+# SATA/SCSI device support
+#
+# CONFIG_DWC_AHSATA is not set
+# CONFIG_FSL_SATA is not set
+# CONFIG_MVSATA_IDE is not set
+# CONFIG_SATA_MV is not set
+# CONFIG_SATA_SIL is not set
+# CONFIG_SATA_SIL3114 is not set
+# CONFIG_BLK is not set
+# CONFIG_BLOCK_CACHE is not set
+# CONFIG_IDE is not set
+
+#
+# Boot count support
+#
+# CONFIG_BOOTCOUNT is not set
+
+#
+# Clock
+#
+# CONFIG_CLK is not set
+# CONFIG_CPU is not set
+
+#
+# Hardware crypto devices
+#
+# CONFIG_FSL_CAAM is not set
+# CONFIG_SYS_FSL_SEC_BE is not set
+# CONFIG_SYS_FSL_SEC_LE is not set
+
+#
+# Demo for driver model
+#
+# CONFIG_DM_DEMO is not set
+
+#
+# DFU support
+#
+
+#
+# DMA Support
+#
+# CONFIG_DMA is not set
+# CONFIG_TI_EDMA3 is not set
+
+#
+# FPGA support
+#
+# CONFIG_FPGA_ALTERA is not set
+# CONFIG_FPGA_SOCFPGA is not set
+# CONFIG_FPGA_XILINX is not set
+
+#
+# GPIO Support
+#
+CONFIG_DM_GPIO=y
+# CONFIG_ALTERA_PIO is not set
+# CONFIG_DWAPB_GPIO is not set
+# CONFIG_AT91_GPIO is not set
+# CONFIG_ATMEL_PIO4 is not set
+# CONFIG_INTEL_BROADWELL_GPIO is not set
+# CONFIG_INTEL_ICH6_GPIO is not set
+# CONFIG_IMX_RGPIO2P is not set
+# CONFIG_HSDK_CREG_GPIO is not set
+# CONFIG_LPC32XX_GPIO is not set
+# CONFIG_MSM_GPIO is not set
+# CONFIG_CMD_PCA953X is not set
+# CONFIG_ROCKCHIP_GPIO is not set
+# CONFIG_CMD_TCA642X is not set
+# CONFIG_TEGRA_GPIO is not set
+# CONFIG_TEGRA186_GPIO is not set
+# CONFIG_VYBRID_GPIO is not set
+# CONFIG_DM_74X164 is not set
+# CONFIG_DM_PCA953X is not set
+# CONFIG_MPC85XX_GPIO is not set
+
+#
+# I2C support
+#
+# CONFIG_DM_I2C is not set
+# CONFIG_DM_I2C_COMPAT is not set
+# CONFIG_SYS_I2C_DW is not set
+# CONFIG_SYS_I2C_IMX_LPI2C is not set
+CONFIG_DM_KEYBOARD=y
+# CONFIG_CROS_EC_KEYB is not set
+# CONFIG_I8042_KEYB is not set
+
+#
+# LED Support
+#
+# CONFIG_LED is not set
+# CONFIG_LED_STATUS is not set
+
+#
+# Mailbox Controller Support
+#
+# CONFIG_DM_MAILBOX is not set
+
+#
+# Memory Controller drivers
+#
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MISC is not set
+# CONFIG_CROS_EC is not set
+# CONFIG_DS4510 is not set
+# CONFIG_FSL_SEC_MON is not set
+# CONFIG_MXC_OCOTP is not set
+# CONFIG_NUVOTON_NCT6102D is not set
+# CONFIG_PWRSEQ is not set
+# CONFIG_PCA9551_LED is not set
+# CONFIG_WINBOND_W83627 is not set
+
+#
+# MMC Host controller Support
+#
+CONFIG_MMC=y
+# CONFIG_DM_MMC is not set
+# CONFIG_SPL_MMC_TINY is not set
+# CONFIG_MMC_DW is not set
+# CONFIG_MMC_MXC is not set
+# CONFIG_MMC_MXS is not set
+# CONFIG_MMC_PCI is not set
+# CONFIG_MMC_OMAP_HS is not set
+# CONFIG_MMC_SDHCI is not set
+CONFIG_MMC_SUNXI=y
+# CONFIG_FTSDC010 is not set
+
+#
+# MTD Support
+#
+# CONFIG_MTD is not set
+# CONFIG_MTD_NOR_FLASH is not set
+# CONFIG_NAND is not set
+
+#
+# SPI Flash Support
+#
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_BAR=y
+# CONFIG_SF_DUAL_FLASH is not set
+# CONFIG_SPI_FLASH_ATMEL is not set
+# CONFIG_SPI_FLASH_EON is not set
+CONFIG_SPI_FLASH_GIGADEVICE=y
+CONFIG_SPI_FLASH_MACRONIX=y
+# CONFIG_SPI_FLASH_SPANSION is not set
+# CONFIG_SPI_FLASH_STMICRO is not set
+# CONFIG_SPI_FLASH_SST is not set
+CONFIG_SPI_FLASH_WINBOND=y
+CONFIG_SPI_FLASH_USE_4K_SECTORS=y
+# CONFIG_SPI_FLASH_DATAFLASH is not set
+# CONFIG_SPI_FLASH_MTD is not set
+CONFIG_SPL_SPI_SUNXI=y
+
+#
+# UBI support
+#
+# CONFIG_MTD_UBI is not set
+# CONFIG_BITBANGMII is not set
+# CONFIG_MV88E6352_SWITCH is not set
+# CONFIG_PHYLIB is not set
+CONFIG_DM_ETH=y
+CONFIG_NETDEVICES=y
+# CONFIG_PHY_GIGE is not set
+# CONFIG_ALTERA_TSE is not set
+# CONFIG_BCM_SF2_ETH is not set
+# CONFIG_DWC_ETH_QOS is not set
+# CONFIG_E1000 is not set
+# CONFIG_ETH_DESIGNWARE is not set
+# CONFIG_ETHOC is not set
+# CONFIG_FTMAC100 is not set
+# CONFIG_MACB is not set
+# CONFIG_RGMII is not set
+# CONFIG_RTL8139 is not set
+# CONFIG_RTL8169 is not set
+# CONFIG_SMC911X is not set
+# CONFIG_SUN7I_GMAC is not set
+# CONFIG_SUN4I_EMAC is not set
+# CONFIG_SUN8I_EMAC is not set
+# CONFIG_PCI is not set
+
+#
+# PHY Subsystem
+#
+# CONFIG_PHY is not set
+# CONFIG_SPL_PHY is not set
+# CONFIG_MVEBU_COMPHY_SUPPORT is not set
+
+#
+# Pin controllers
+#
+# CONFIG_PINCTRL is not set
+
+#
+# Power
+#
+
+#
+# Power Domain Support
+#
+# CONFIG_POWER_DOMAIN is not set
+# CONFIG_DM_PMIC is not set
+# CONFIG_PMIC_AS3722 is not set
+# CONFIG_POWER_MC34VR500 is not set
+# CONFIG_DM_REGULATOR is not set
+CONFIG_SUNXI_NO_PMIC=y
+# CONFIG_DM_PWM is not set
+# CONFIG_PWM_SANDBOX is not set
+# CONFIG_RAM is not set
+
+#
+# Remote Processor drivers
+#
+
+#
+# Reset Controller Support
+#
+# CONFIG_DM_RESET is not set
+
+#
+# Real Time Clock
+#
+# CONFIG_DM_RTC is not set
+# CONFIG_RTC_S35392A is not set
+# CONFIG_SCSI is not set
+
+#
+# Serial drivers
+#
+CONFIG_BAUDRATE=115200
+CONFIG_REQUIRE_SERIAL_CONSOLE=y
+CONFIG_SERIAL_PRESENT=y
+CONFIG_SPL_SERIAL_PRESENT=y
+CONFIG_DM_SERIAL=y
+# CONFIG_SERIAL_RX_BUFFER is not set
+# CONFIG_SPL_DM_SERIAL is not set
+# CONFIG_TPL_DM_SERIAL is not set
+# CONFIG_DEBUG_UART_SKIP_INIT is not set
+# CONFIG_ALTERA_JTAG_UART is not set
+# CONFIG_ALTERA_UART is not set
+# CONFIG_ATMEL_USART is not set
+# CONFIG_FSL_LPUART is not set
+# CONFIG_MVEBU_A3700_UART is not set
+# CONFIG_NULLDEV_SERIAL is not set
+CONFIG_SYS_NS16550=y
+# CONFIG_MSM_SERIAL is not set
+# CONFIG_PXA_SERIAL is not set
+
+#
+# Sound support
+#
+# CONFIG_SOUND is not set
+
+#
+# SPI Support
+#
+CONFIG_DM_SPI=y
+# CONFIG_ALTERA_SPI is not set
+# CONFIG_CADENCE_QSPI is not set
+# CONFIG_DESIGNWARE_SPI is not set
+# CONFIG_EXYNOS_SPI is not set
+# CONFIG_FSL_DSPI is not set
+# CONFIG_ICH_SPI is not set
+# CONFIG_MVEBU_A3700_SPI is not set
+# CONFIG_ROCKCHIP_SPI is not set
+CONFIG_SUN6I_SPI=y
+# CONFIG_TEGRA114_SPI is not set
+# CONFIG_TEGRA20_SFLASH is not set
+# CONFIG_TEGRA20_SLINK is not set
+# CONFIG_TEGRA210_QSPI is not set
+# CONFIG_XILINX_SPI is not set
+# CONFIG_SOFT_SPI is not set
+# CONFIG_FSL_ESPI is not set
+# CONFIG_FSL_QSPI is not set
+# CONFIG_ATCSPI200_SPI is not set
+# CONFIG_TI_QSPI is not set
+# CONFIG_OMAP3_SPI is not set
+
+#
+# SPMI support
+#
+# CONFIG_SPMI is not set
+
+#
+# System reset device drivers
+#
+# CONFIG_SYSRESET is not set
+# CONFIG_SYSRESET_SYSCON is not set
+# CONFIG_SYSRESET_WATCHDOG is not set
+# CONFIG_DM_THERMAL is not set
+
+#
+# Timer Support
+#
+# CONFIG_TIMER is not set
+
+#
+# TPM support
+#
+CONFIG_USB=y
+CONFIG_DM_USB=y
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_XHCI_HCD is not set
+# CONFIG_USB_EHCI_HCD is not set
+# CONFIG_USB_OHCI_HCD is not set
+# CONFIG_USB_UHCI_HCD is not set
+# CONFIG_USB_DWC2 is not set
+# CONFIG_USB_DWC3 is not set
+
+#
+# MUSB Controller Driver
+#
+# CONFIG_USB_MUSB_HOST is not set
+# CONFIG_USB_MUSB_GADGET is not set
+# CONFIG_USB_MUSB_TI is not set
+
+#
+# ULPI drivers
+#
+
+#
+# USB peripherals
+#
+CONFIG_USB_STORAGE=y
+CONFIG_USB_KEYBOARD=y
+CONFIG_SYS_USB_EVENT_POLL=y
+# CONFIG_SYS_USB_EVENT_POLL_VIA_INT_QUEUE is not set
+# CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP is not set
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="Allwinner Technology"
+CONFIG_USB_GADGET_VENDOR_NUM=0x1f3a
+CONFIG_USB_GADGET_PRODUCT_NUM=0x1010
+# CONFIG_USB_GADGET_ATMEL_USBA is not set
+# CONFIG_USB_GADGET_BCM_UDC_OTG_PHY is not set
+# CONFIG_USB_GADGET_DWC2_OTG is not set
+# CONFIG_CI_UDC is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+# CONFIG_USB_GADGET_DOWNLOAD is not set
+# CONFIG_USB_ETHER is not set
+# CONFIG_USB_HOST_ETHER is not set
+
+#
+# Graphics support
+#
+# CONFIG_DM_VIDEO is not set
+# CONFIG_SYS_WHITE_ON_BLACK is not set
+# CONFIG_NO_FB_CLEAR is not set
+
+#
+# TrueType Fonts
+#
+# CONFIG_VIDEO_VESA is not set
+# CONFIG_VIDEO_LCD_ANX9804 is not set
+# CONFIG_VIDEO_LCD_SSD2828 is not set
+# CONFIG_VIDEO_LCD_HITACHI_TX18D42VM is not set
+# CONFIG_VIDEO_MVEBU is not set
+# CONFIG_DISPLAY is not set
+# CONFIG_VIDEO_FSL_DCU_FB is not set
+# CONFIG_VIDEO_TEGRA20 is not set
+# CONFIG_VIDEO_BRIDGE is not set
+CONFIG_VIDEO=y
+CONFIG_CFB_CONSOLE=y
+# CONFIG_CFB_CONSOLE_ANSI is not set
+CONFIG_VGA_AS_SINGLE_DEVICE=y
+CONFIG_VIDEO_SW_CURSOR=y
+# CONFIG_CONSOLE_EXTRA_INFO is not set
+CONFIG_CONSOLE_SCROLL_LINES=1
+CONFIG_SYS_CONSOLE_BG_COL=0x00
+CONFIG_SYS_CONSOLE_FG_COL=0xa0
+# CONFIG_LCD is not set
+# CONFIG_VIDEO_SIMPLE is not set
+# CONFIG_VIDEO_DT_SIMPLEFB is not set
+
+#
+# Watchdog Timer Support
+#
+# CONFIG_BCM2835_WDT is not set
+# CONFIG_ULP_WATCHDOG is not set
+# CONFIG_WDT is not set
+# CONFIG_PHYS_TO_BUS is not set
+
+#
+# File systems
+#
+# CONFIG_FS_BTRFS is not set
+# CONFIG_FS_CBFS is not set
+CONFIG_FS_FAT=y
+CONFIG_FAT_WRITE=y
+CONFIG_FS_FAT_MAX_CLUSTSIZE=65536
+# CONFIG_FS_JFFS2 is not set
+# CONFIG_FS_CRAMFS is not set
+# CONFIG_YAFFS2 is not set
+
+#
+# Library routines
+#
+# CONFIG_BCH is not set
+# CONFIG_CC_OPTIMIZE_LIBS_FOR_SPEED is not set
+CONFIG_HAVE_PRIVATE_LIBGCC=y
+CONFIG_USE_PRIVATE_LIBGCC=y
+CONFIG_SYS_HZ=1000
+CONFIG_USE_TINY_PRINTF=y
+# CONFIG_PANIC_HANG is not set
+# CONFIG_REGEX is not set
+# CONFIG_LIB_RAND is not set
+# CONFIG_SPL_TINY_MEMSET is not set
+# CONFIG_TPL_TINY_MEMSET is not set
+# CONFIG_BITREVERSE is not set
+# CONFIG_CMD_DHRYSTONE is not set
+
+#
+# Security support
+#
+# CONFIG_AES is not set
+# CONFIG_RSA is not set
+# CONFIG_TPM is not set
+
+#
+# Hashing Support
+#
+# CONFIG_SHA1 is not set
+# CONFIG_SHA256 is not set
+# CONFIG_SHA_HW_ACCEL is not set
+
+#
+# Compression Support
+#
+# CONFIG_LZ4 is not set
+# CONFIG_LZMA is not set
+# CONFIG_LZO is not set
+# CONFIG_SPL_LZO is not set
+# CONFIG_SPL_GZIP is not set
+# CONFIG_ERRNO_STR is not set
+CONFIG_OF_LIBFDT=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_SPL_OF_LIBFDT is not set
+# CONFIG_FDT_FIXUP_PARTITIONS is not set
+
+#
+# System tables
+#
+CONFIG_GENERATE_SMBIOS_TABLE=y
+CONFIG_SMBIOS_MANUFACTURER=""
+CONFIG_EFI_LOADER=y
+# CONFIG_UNIT_TEST is not set
diff --git a/configs/uniphier_v8_defconfig b/configs/uniphier_v8_defconfig
index bbcf3b0968..2edc3a9537 100644
--- a/configs/uniphier_v8_defconfig
+++ b/configs/uniphier_v8_defconfig
@@ -34,6 +34,7 @@ CONFIG_SYS_EEPROM_PAGE_WRITE_DELAY_MS=10
 CONFIG_MMC_UNIPHIER=y
 CONFIG_MMC_SDHCI=y
 CONFIG_MMC_SDHCI_CADENCE=y
+CONFIG_MMC_SDHCI_SDMA=y
 CONFIG_NAND=y
 CONFIG_NAND_DENALI_DT=y
 CONFIG_NAND_DENALI_SPARE_AREA_SKIP_BYTES=8
diff --git a/down_uboot_spiflash.sh b/down_uboot_spiflash.sh
new file mode 100755
index 0000000000..da9aaed525
--- /dev/null
+++ b/down_uboot_spiflash.sh
@@ -0,0 +1,4 @@
+#!/bin/bash
+sudo sunxi-fel -p spiflash-write 0 ./u-boot-sunxi-with-spl.bin
+sync
+echo "u-boot down flash over !!!"
diff --git a/drivers/Makefile b/drivers/Makefile
index e6062a5683..c0f63ac897 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -51,6 +51,7 @@ obj-$(CONFIG_SPL_USB_HOST_SUPPORT) += block/
 obj-$(CONFIG_SPL_MMC_SUPPORT) += block/
 obj-$(CONFIG_SPL_FPGA_SUPPORT) += fpga/
 obj-$(CONFIG_SPL_THERMAL) += thermal/
+obj-$(CONFIG_SPL_SPI_SUNXI) += mtd/spi/sunxi_spi_spl.o
 
 endif
 endif
diff --git a/drivers/clk/rockchip/clk_rk3036.c b/drivers/clk/rockchip/clk_rk3036.c
index 280ebb9ba2..510a00a3aa 100644
--- a/drivers/clk/rockchip/clk_rk3036.c
+++ b/drivers/clk/rockchip/clk_rk3036.c
@@ -347,6 +347,13 @@ static int rk3036_clk_bind(struct udevice *dev)
 		sys_child->priv = priv;
 	}
 
+#if CONFIG_IS_ENABLED(CONFIG_RESET_ROCKCHIP)
+	ret = offsetof(struct rk3036_cru, cru_softrst_con[0]);
+	ret = rockchip_reset_bind(dev, ret, 9);
+	if (ret)
+		debug("Warning: software reset driver bind faile\n");
+#endif
+
 	return 0;
 }
 
diff --git a/drivers/clk/rockchip/clk_rk3188.c b/drivers/clk/rockchip/clk_rk3188.c
index fca6899d8b..6451c95a32 100644
--- a/drivers/clk/rockchip/clk_rk3188.c
+++ b/drivers/clk/rockchip/clk_rk3188.c
@@ -590,6 +590,13 @@ static int rk3188_clk_bind(struct udevice *dev)
 		sys_child->priv = priv;
 	}
 
+#if CONFIG_IS_ENABLED(CONFIG_RESET_ROCKCHIP)
+	ret = offsetof(struct rk3188_cru, cru_softrst_con[0]);
+	ret = rockchip_reset_bind(dev, ret, 9);
+	if (ret)
+		debug("Warning: software reset driver bind faile\n");
+#endif
+
 	return 0;
 }
 
diff --git a/drivers/clk/rockchip/clk_rk322x.c b/drivers/clk/rockchip/clk_rk322x.c
index ff52b55229..c8a241355a 100644
--- a/drivers/clk/rockchip/clk_rk322x.c
+++ b/drivers/clk/rockchip/clk_rk322x.c
@@ -402,6 +402,13 @@ static int rk322x_clk_bind(struct udevice *dev)
 		sys_child->priv = priv;
 	}
 
+#if CONFIG_IS_ENABLED(CONFIG_RESET_ROCKCHIP)
+	ret = offsetof(struct rk322x_cru, cru_softrst_con[0]);
+	ret = rockchip_reset_bind(dev, ret, 9);
+	if (ret)
+		debug("Warning: software reset driver bind faile\n");
+#endif
+
 	return 0;
 }
 
diff --git a/drivers/clk/rockchip/clk_rk3288.c b/drivers/clk/rockchip/clk_rk3288.c
index ac53239363..b64c1071c1 100644
--- a/drivers/clk/rockchip/clk_rk3288.c
+++ b/drivers/clk/rockchip/clk_rk3288.c
@@ -876,6 +876,13 @@ static int rk3288_clk_bind(struct udevice *dev)
 		sys_child->priv = priv;
 	}
 
+#if CONFIG_IS_ENABLED(CONFIG_RESET_ROCKCHIP)
+	ret = offsetof(struct rk3288_cru, cru_softrst_con[0]);
+	ret = rockchip_reset_bind(dev, ret, 12);
+	if (ret)
+		debug("Warning: software reset driver bind faile\n");
+#endif
+
 	return 0;
 }
 
diff --git a/drivers/clk/rockchip/clk_rk3328.c b/drivers/clk/rockchip/clk_rk3328.c
index 4d522a7816..fa0c777044 100644
--- a/drivers/clk/rockchip/clk_rk3328.c
+++ b/drivers/clk/rockchip/clk_rk3328.c
@@ -614,6 +614,13 @@ static int rk3328_clk_bind(struct udevice *dev)
 		sys_child->priv = priv;
 	}
 
+#if CONFIG_IS_ENABLED(CONFIG_RESET_ROCKCHIP)
+	ret = offsetof(struct rk3328_cru, softrst_con[0]);
+	ret = rockchip_reset_bind(dev, ret, 12);
+	if (ret)
+		debug("Warning: software reset driver bind faile\n");
+#endif
+
 	return ret;
 }
 
diff --git a/drivers/clk/rockchip/clk_rk3368.c b/drivers/clk/rockchip/clk_rk3368.c
index bfeef39d2a..a8319917bb 100644
--- a/drivers/clk/rockchip/clk_rk3368.c
+++ b/drivers/clk/rockchip/clk_rk3368.c
@@ -543,6 +543,13 @@ static int rk3368_clk_bind(struct udevice *dev)
 		sys_child->priv = priv;
 	}
 
+#if CONFIG_IS_ENABLED(CONFIG_RESET_ROCKCHIP)
+	ret = offsetof(struct rk3368_cru, softrst_con[0]);
+	ret = rockchip_reset_bind(dev, ret, 15);
+	if (ret)
+		debug("Warning: software reset driver bind faile\n");
+#endif
+
 	return ret;
 }
 
diff --git a/drivers/clk/rockchip/clk_rk3399.c b/drivers/clk/rockchip/clk_rk3399.c
index 2e85ac7df2..2f4c4e343c 100644
--- a/drivers/clk/rockchip/clk_rk3399.c
+++ b/drivers/clk/rockchip/clk_rk3399.c
@@ -1046,6 +1046,13 @@ static int rk3399_clk_bind(struct udevice *dev)
 		sys_child->priv = priv;
 	}
 
+#if CONFIG_IS_ENABLED(CONFIG_RESET_ROCKCHIP)
+	ret = offsetof(struct rk3399_cru, softrst_con[0]);
+	ret = rockchip_reset_bind(dev, ret, 21);
+	if (ret)
+		debug("Warning: software reset driver bind faile\n");
+#endif
+
 	return 0;
 }
 
@@ -1221,6 +1228,19 @@ static int rk3399_pmuclk_ofdata_to_platdata(struct udevice *dev)
 	return 0;
 }
 
+static int rk3399_pmuclk_bind(struct udevice *dev)
+{
+#if CONFIG_IS_ENABLED(CONFIG_RESET_ROCKCHIP)
+	int ret;
+
+	ret = offsetof(struct rk3399_pmucru, pmucru_softrst_con[0]);
+	ret = rockchip_reset_bind(dev, ret, 2);
+	if (ret)
+		debug("Warning: software reset driver bind faile\n");
+#endif
+	return 0;
+}
+
 static const struct udevice_id rk3399_pmuclk_ids[] = {
 	{ .compatible = "rockchip,rk3399-pmucru" },
 	{ }
@@ -1234,6 +1254,7 @@ U_BOOT_DRIVER(rockchip_rk3399_pmuclk) = {
 	.ofdata_to_platdata = rk3399_pmuclk_ofdata_to_platdata,
 	.ops		= &rk3399_pmuclk_ops,
 	.probe		= rk3399_pmuclk_probe,
+	.bind		= rk3399_pmuclk_bind,
 #if CONFIG_IS_ENABLED(OF_PLATDATA)
 	.platdata_auto_alloc_size = sizeof(struct rk3399_pmuclk_plat),
 #endif
diff --git a/drivers/clk/rockchip/clk_rv1108.c b/drivers/clk/rockchip/clk_rv1108.c
index a1195486a9..224c81355e 100644
--- a/drivers/clk/rockchip/clk_rv1108.c
+++ b/drivers/clk/rockchip/clk_rv1108.c
@@ -240,6 +240,13 @@ static int rv1108_clk_bind(struct udevice *dev)
 		sys_child->priv = priv;
 	}
 
+#if CONFIG_IS_ENABLED(CONFIG_RESET_ROCKCHIP)
+	ret = offsetof(struct rk3368_cru, softrst_con[0]);
+	ret = rockchip_reset_bind(dev, ret, 13);
+	if (ret)
+		debug("Warning: software reset driver bind faile\n");
+#endif
+
 	return 0;
 }
 
diff --git a/drivers/mmc/Kconfig b/drivers/mmc/Kconfig
index 8fbeaa740d..40f7bb0aa5 100644
--- a/drivers/mmc/Kconfig
+++ b/drivers/mmc/Kconfig
@@ -374,7 +374,7 @@ config MMC_SDHCI_ZYNQ
 
 config MMC_SUNXI
 	bool "Allwinner sunxi SD/MMC Host Controller support"
-	depends on ARCH_SUNXI && !UART0_PORT_F
+	depends on ARCH_SUNXI
 	default y
 	help
 	  This selects support for the SD/MMC Host Controller on
diff --git a/drivers/mtd/spi/Kconfig b/drivers/mtd/spi/Kconfig
index 6ba255d676..ede13276a0 100644
--- a/drivers/mtd/spi/Kconfig
+++ b/drivers/mtd/spi/Kconfig
@@ -139,8 +139,7 @@ if SPL
 
 config SPL_SPI_SUNXI
 	bool "Support for SPI Flash on Allwinner SoCs in SPL"
-	depends on MACH_SUN4I || MACH_SUN5I || MACH_SUN7I || MACH_SUNXI_H3_H5 || MACH_SUN50I
-	select SPL_SPI_FLASH_SUPPORT
+	depends on MACH_SUN4I || MACH_SUN5I || MACH_SUN7I || MACH_SUNXI_H3_H5 || MACH_SUN50I || MACH_SUNIV
 	---help---
 	Enable support for SPI Flash. This option allows SPL to read from
 	sunxi SPI Flash. It uses the same method as the boot ROM, so does
diff --git a/drivers/mtd/spi/spi_flash_ids.c b/drivers/mtd/spi/spi_flash_ids.c
index 262d81e98d..709002e4d5 100644
--- a/drivers/mtd/spi/spi_flash_ids.c
+++ b/drivers/mtd/spi/spi_flash_ids.c
@@ -171,6 +171,9 @@ const struct spi_flash_info spi_flash_ids[] = {
 	{"w25q64dw",	   INFO(0xef6017, 0x0,	64 * 1024,   128, RD_FULL | WR_QPP | SECT_4K) },
 	{"w25q128fw",	   INFO(0xef6018, 0x0,	64 * 1024,   256, RD_FULL | WR_QPP | SECT_4K) },
 #endif
+
+	 {"xt25f128b", INFO(0x0b4018, 0x0, 64 * 1024, 256, RD_FULL | WR_QPP | SECT_4K) },
+
 	{},	/* Empty entry to terminate the list */
 	/*
 	 * Note:
diff --git a/drivers/mtd/spi/sunxi_spi_spl.c b/drivers/mtd/spi/sunxi_spi_spl.c
index 35835c2798..6bb601d2d2 100644
--- a/drivers/mtd/spi/sunxi_spi_spl.c
+++ b/drivers/mtd/spi/sunxi_spi_spl.c
@@ -33,17 +33,19 @@
  * supported at the moment.
  */
 
+static u32 spi0_base;
+
 /*****************************************************************************/
 /* SUN4I variant of the SPI controller                                       */
 /*****************************************************************************/
 
-#define SUN4I_SPI0_CCTL             (0x01C05000 + 0x1C)
-#define SUN4I_SPI0_CTL              (0x01C05000 + 0x08)
-#define SUN4I_SPI0_RX               (0x01C05000 + 0x00)
-#define SUN4I_SPI0_TX               (0x01C05000 + 0x04)
-#define SUN4I_SPI0_FIFO_STA         (0x01C05000 + 0x28)
-#define SUN4I_SPI0_BC               (0x01C05000 + 0x20)
-#define SUN4I_SPI0_TC               (0x01C05000 + 0x24)
+#define SUN4I_SPI0_CCTL             (spi0_base + 0x1C)
+#define SUN4I_SPI0_CTL              (spi0_base + 0x08)
+#define SUN4I_SPI0_RX               (spi0_base + 0x00)
+#define SUN4I_SPI0_TX               (spi0_base + 0x04)
+#define SUN4I_SPI0_FIFO_STA         (spi0_base + 0x28)
+#define SUN4I_SPI0_BC               (spi0_base + 0x20)
+#define SUN4I_SPI0_TC               (spi0_base + 0x24)
 
 #define SUN4I_CTL_ENABLE            BIT(0)
 #define SUN4I_CTL_MASTER            BIT(1)
@@ -55,15 +57,15 @@
 /* SUN6I variant of the SPI controller                                       */
 /*****************************************************************************/
 
-#define SUN6I_SPI0_CCTL             (0x01C68000 + 0x24)
-#define SUN6I_SPI0_GCR              (0x01C68000 + 0x04)
-#define SUN6I_SPI0_TCR              (0x01C68000 + 0x08)
-#define SUN6I_SPI0_FIFO_STA         (0x01C68000 + 0x1C)
-#define SUN6I_SPI0_MBC              (0x01C68000 + 0x30)
-#define SUN6I_SPI0_MTC              (0x01C68000 + 0x34)
-#define SUN6I_SPI0_BCC              (0x01C68000 + 0x38)
-#define SUN6I_SPI0_TXD              (0x01C68000 + 0x200)
-#define SUN6I_SPI0_RXD              (0x01C68000 + 0x300)
+#define SUN6I_SPI0_CCTL             (spi0_base + 0x24)
+#define SUN6I_SPI0_GCR              (spi0_base + 0x04)
+#define SUN6I_SPI0_TCR              (spi0_base + 0x08)
+#define SUN6I_SPI0_FIFO_STA         (spi0_base + 0x1C)
+#define SUN6I_SPI0_MBC              (spi0_base + 0x30)
+#define SUN6I_SPI0_MTC              (spi0_base + 0x34)
+#define SUN6I_SPI0_BCC              (spi0_base + 0x38)
+#define SUN6I_SPI0_TXD              (spi0_base + 0x200)
+#define SUN6I_SPI0_RXD              (spi0_base + 0x300)
 
 #define SUN6I_CTL_ENABLE            BIT(0)
 #define SUN6I_CTL_MASTER            BIT(1)
@@ -81,6 +83,7 @@
 
 #define SPI0_CLK_DIV_BY_2           0x1000
 #define SPI0_CLK_DIV_BY_4           0x1001
+#define SPI0_CLK_DIV_BY_32          0x100f
 
 /*****************************************************************************/
 
@@ -114,11 +117,17 @@ static void spi0_enable_clock(void)
 	/* Open the SPI0 gate */
 	setbits_le32(CCM_AHB_GATING0, (1 << AHB_GATE_OFFSET_SPI0));
 
+#ifndef CONFIG_MACH_SUNIV
 	/* Divide by 4 */
 	writel(SPI0_CLK_DIV_BY_4, IS_ENABLED(CONFIG_SUNXI_GEN_SUN6I) ?
 				  SUN6I_SPI0_CCTL : SUN4I_SPI0_CCTL);
 	/* 24MHz from OSC24M */
 	writel((1 << 31), CCM_SPI0_CLK);
+#else
+	/* Divide by 32, clock source is AHB clock 200MHz */
+	writel(SPI0_CLK_DIV_BY_32, IS_ENABLED(CONFIG_SUNXI_GEN_SUN6I) ?
+				  SUN6I_SPI0_CCTL : SUN4I_SPI0_CCTL);
+#endif
 
 	if (IS_ENABLED(CONFIG_SUNXI_GEN_SUN6I)) {
 		/* Enable SPI in the master mode and do a soft reset */
@@ -147,8 +156,10 @@ static void spi0_disable_clock(void)
 		clrbits_le32(SUN4I_SPI0_CTL, SUN4I_CTL_MASTER |
 					     SUN4I_CTL_ENABLE);
 
+#ifndef CONFIG_MACH_SUNIV
 	/* Disable the SPI0 clock */
 	writel(0, CCM_SPI0_CLK);
+#endif
 
 	/* Close the SPI0 gate */
 	clrbits_le32(CCM_AHB_GATING0, (1 << AHB_GATE_OFFSET_SPI0));
@@ -166,6 +177,19 @@ static void spi0_init(void)
 	if (IS_ENABLED(CONFIG_MACH_SUN50I))
 		pin_function = SUN50I_GPC_SPI0;
 
+	if (IS_ENABLED(CONFIG_MACH_SUNIV))
+		pin_function = SUNIV_GPC_SPI0;
+
+	/*
+	 * suniv comes with a sun6i-style SPI controller at the
+	 * sun4i SPI base address
+	 */
+	if (IS_ENABLED(CONFIG_SUNXI_GEN_SUN6I) &&
+	    !IS_ENABLED(CONFIG_MACH_SUNIV))
+		spi0_base = 0x01c68000;
+	else
+		spi0_base = 0x01c05000;
+
 	spi0_pinmux_setup(pin_function);
 	spi0_enable_clock();
 }
diff --git a/drivers/net/sun8i_emac.c b/drivers/net/sun8i_emac.c
index 3ccc6b0bb6..b1dab0aa04 100644
--- a/drivers/net/sun8i_emac.c
+++ b/drivers/net/sun8i_emac.c
@@ -475,12 +475,9 @@ static int parse_phy_pins(struct udevice *dev)
 					      "allwinner,pins", i, NULL);
 		if (!pin_name)
 			break;
-		if (pin_name[0] != 'P')
+		pin = sunxi_gpio_parse_pin_name(pin_name);
+		if (pin < 0)
 			continue;
-		pin = (pin_name[1] - 'A') << 5;
-		if (pin >= 26 << 5)
-			continue;
-		pin += simple_strtol(&pin_name[2], NULL, 10);
 
 		sunxi_gpio_set_cfgpin(pin, SUN8I_GPD8_GMAC);
 		sunxi_gpio_set_drv(pin, drive);
diff --git a/drivers/reset/Kconfig b/drivers/reset/Kconfig
index ce46e2752c..3964b9eb6e 100644
--- a/drivers/reset/Kconfig
+++ b/drivers/reset/Kconfig
@@ -74,4 +74,13 @@ config AST2500_RESET
 	  resets that are supported by watchdog. The main limitation though
 	  is that some reset signals, like I2C or MISC reset multiple devices.
 
+config RESET_ROCKCHIP
+	bool "Reset controller driver for Rockchip SoCs"
+	depends on DM_RESET && ARCH_ROCKCHIP && CLK
+	default y
+	help
+	  Support for reset controller on rockchip SoC. The main limitation
+	  though is that some reset signals, like I2C or MISC reset multiple
+	  devices.
+
 endmenu
diff --git a/drivers/reset/Makefile b/drivers/reset/Makefile
index 252cefeed5..7d7e080c78 100644
--- a/drivers/reset/Makefile
+++ b/drivers/reset/Makefile
@@ -12,3 +12,4 @@ obj-$(CONFIG_TEGRA186_RESET) += tegra186-reset.o
 obj-$(CONFIG_RESET_BCM6345) += reset-bcm6345.o
 obj-$(CONFIG_RESET_UNIPHIER) += reset-uniphier.o
 obj-$(CONFIG_AST2500_RESET) += ast2500-reset.o
+obj-$(CONFIG_RESET_ROCKCHIP) += reset-rockchip.o
diff --git a/drivers/reset/reset-rockchip.c b/drivers/reset/reset-rockchip.c
new file mode 100644
index 0000000000..01047a2f71
--- /dev/null
+++ b/drivers/reset/reset-rockchip.c
@@ -0,0 +1,133 @@
+/*
+ * (C) Copyright 2017 Rockchip Electronics Co., Ltd
+ *
+ * SPDX-License-Identifier: GPL-2.0
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <reset-uclass.h>
+#include <linux/io.h>
+#include <asm/arch/hardware.h>
+#include <dm/lists.h>
+/*
+ * Each reg has 16 bits reset signal for devices
+ * Note: Not including rk2818 and older SoCs
+ */
+#define ROCKCHIP_RESET_NUM_IN_REG	16
+
+struct rockchip_reset_priv {
+	void __iomem *base;
+	/* Rockchip reset reg locate at cru controller */
+	u32 reset_reg_offset;
+	/* Rockchip reset reg number */
+	u32 reset_reg_num;
+};
+
+static int rockchip_reset_request(struct reset_ctl *reset_ctl)
+{
+	struct rockchip_reset_priv *priv = dev_get_priv(reset_ctl->dev);
+
+	debug("%s(reset_ctl=%p) (dev=%p, id=%lu) (reg_num=%d)\n", __func__,
+	      reset_ctl, reset_ctl->dev, reset_ctl->id, priv->reset_reg_num);
+
+	if (reset_ctl->id / ROCKCHIP_RESET_NUM_IN_REG >= priv->reset_reg_num)
+		return -EINVAL;
+
+	return 0;
+}
+
+static int rockchip_reset_free(struct reset_ctl *reset_ctl)
+{
+	debug("%s(reset_ctl=%p) (dev=%p, id=%lu)\n", __func__, reset_ctl,
+	      reset_ctl->dev, reset_ctl->id);
+
+	return 0;
+}
+
+static int rockchip_reset_assert(struct reset_ctl *reset_ctl)
+{
+	struct rockchip_reset_priv *priv = dev_get_priv(reset_ctl->dev);
+	int bank =  reset_ctl->id / ROCKCHIP_RESET_NUM_IN_REG;
+	int offset =  reset_ctl->id % ROCKCHIP_RESET_NUM_IN_REG;
+
+	debug("%s(reset_ctl=%p) (dev=%p, id=%lu) (reg_addr=%p)\n", __func__,
+	      reset_ctl, reset_ctl->dev, reset_ctl->id,
+	      priv->base + (bank * 4));
+
+	rk_setreg(priv->base + (bank * 4), BIT(offset));
+
+	return 0;
+}
+
+static int rockchip_reset_deassert(struct reset_ctl *reset_ctl)
+{
+	struct rockchip_reset_priv *priv = dev_get_priv(reset_ctl->dev);
+	int bank =  reset_ctl->id / ROCKCHIP_RESET_NUM_IN_REG;
+	int offset =  reset_ctl->id % ROCKCHIP_RESET_NUM_IN_REG;
+
+	debug("%s(reset_ctl=%p) (dev=%p, id=%lu) (reg_addr=%p)\n", __func__,
+	      reset_ctl, reset_ctl->dev, reset_ctl->id,
+	      priv->base + (bank * 4));
+
+	rk_clrreg(priv->base + (bank * 4), BIT(offset));
+
+	return 0;
+}
+
+struct reset_ops rockchip_reset_ops = {
+	.request = rockchip_reset_request,
+	.free = rockchip_reset_free,
+	.rst_assert = rockchip_reset_assert,
+	.rst_deassert = rockchip_reset_deassert,
+};
+
+static int rockchip_reset_probe(struct udevice *dev)
+{
+	struct rockchip_reset_priv *priv = dev_get_priv(dev);
+	fdt_addr_t addr;
+	fdt_size_t size;
+
+	addr = dev_read_addr_size(dev, "reg", &size);
+	if (addr == FDT_ADDR_T_NONE)
+		return -EINVAL;
+
+	if ((priv->reset_reg_offset == 0) && (priv->reset_reg_num == 0))
+		return -EINVAL;
+
+	addr += priv->reset_reg_offset;
+	priv->base = ioremap(addr, size);
+
+	debug("%s(base=%p) (reg_offset=%x, reg_num=%d)\n", __func__,
+	      priv->base, priv->reset_reg_offset, priv->reset_reg_num);
+
+	return 0;
+}
+
+int rockchip_reset_bind(struct udevice *pdev, u32 reg_offset, u32 reg_number)
+{
+	struct udevice *rst_dev;
+	struct rockchip_reset_priv *priv;
+	int ret;
+
+	 ret = device_bind_driver_to_node(pdev, "rockchip_reset", "reset",
+					  dev_ofnode(pdev), &rst_dev);
+	if (ret) {
+		debug("Warning: No rockchip reset driver: ret=%d\n", ret);
+		return ret;
+	}
+	priv = malloc(sizeof(struct rockchip_reset_priv));
+	priv->reset_reg_offset = reg_offset;
+	priv->reset_reg_num = reg_number;
+	rst_dev->priv = priv;
+
+	return 0;
+}
+
+U_BOOT_DRIVER(rockchip_reset) = {
+	.name = "rockchip_reset",
+	.id = UCLASS_RESET,
+	.probe = rockchip_reset_probe,
+	.ops = &rockchip_reset_ops,
+	.priv_auto_alloc_size = sizeof(struct rockchip_reset_priv),
+};
diff --git a/drivers/spi/Kconfig b/drivers/spi/Kconfig
index 494639fb01..697aaa593d 100644
--- a/drivers/spi/Kconfig
+++ b/drivers/spi/Kconfig
@@ -132,6 +132,20 @@ config STM32_QSPI
 	  used to access the SPI NOR flash chips on platforms embedding
 	  this ST IP core.
 
+config SUN6I_SPI
+	bool "Allwinner (sun6i+) SPI driver"
+	help
+	  Enable the SPI driver for new Allwinner SoCs.
+
+	  This driver can be used to access the SPI NOR flash on for
+	  communciation with SPI peripherals platforms embedding the
+	  Allwinner SoC.  This driver supports the device-model (only)
+	  and has support for GPIOs as additional chip-selects.
+
+	  For recent platforms (e.g. sun50i), dual-IO receive mode is
+	  also supported, when configured for a SPI-NOR flash in the
+	  device tree.
+
 config TEGRA114_SPI
 	bool "nVidia Tegra114 SPI driver"
 	help
diff --git a/drivers/spi/Makefile b/drivers/spi/Makefile
index e3184db67f..7aabac4367 100644
--- a/drivers/spi/Makefile
+++ b/drivers/spi/Makefile
@@ -39,6 +39,7 @@ obj-$(CONFIG_OMAP3_SPI) += omap3_spi.o
 obj-$(CONFIG_PIC32_SPI) += pic32_spi.o
 obj-$(CONFIG_ROCKCHIP_SPI) += rk_spi.o
 obj-$(CONFIG_SANDBOX_SPI) += sandbox_spi.o
+obj-$(CONFIG_SUN6I_SPI) += sun6i_spi.o
 obj-$(CONFIG_SH_SPI) += sh_spi.o
 obj-$(CONFIG_SH_QSPI) += sh_qspi.o
 obj-$(CONFIG_STM32_QSPI) += stm32_qspi.o
diff --git a/drivers/spi/sun6i_spi.c b/drivers/spi/sun6i_spi.c
new file mode 100644
index 0000000000..750c4d8819
--- /dev/null
+++ b/drivers/spi/sun6i_spi.c
@@ -0,0 +1,539 @@
+/*
+ * SPI driver for Allwinner sunxi SoCs
+ *
+ * Copyright (C) 2015-2017 Theobroma Systems Design und Consulting GmbH
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ */
+
+#include <common.h>
+#ifdef CONFIG_DM_GPIO
+#include <asm/gpio.h>
+#endif
+#include <asm/io.h>
+#include <asm/arch/clock.h>
+#include <dm.h>
+#include <errno.h>
+#include <fdtdec.h>
+#include <wait_bit.h>
+#include <reset.h>
+#include <spi.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+struct sunxi_spi_platdata {
+	void *base;
+	unsigned int max_hz;
+
+	/* We could do with a single delay counter, but it won't do harm
+	   to have two, as the same is the case for most other driver. */
+	uint deactivate_delay_us;	/* Delay to wait after deactivate */
+	uint activate_delay_us;		/* Delay to wait after activate */
+
+#if defined(CONFIG_DM_GPIO)
+	int cs_gpios_num;
+	struct gpio_desc *cs_gpios;
+#endif
+};
+
+struct sunxi_spi_driverdata {
+	unsigned int  fifo_depth;
+};
+
+struct sunxi_spi_privdata {
+	ulong last_transaction_us;	/* Time of last transaction end */
+	unsigned int hz_requested;      /* last requested bitrate */
+	unsigned int hz_actual;         /* currently set bitrate */
+};
+
+struct sunxi_spi_reg {
+	u8	_rsvd[0x4];
+	u32	GCR;   /* SPI Global Control register */
+	u32	TCR;   /* SPI Transfer Control register */
+	u8	_rsvd1[0x4];
+	u32	IER;   /* SPI Interrupt Control register */
+	u32	ISR;   /* SPI Interrupt Status register */
+	u32	FCR;   /* SPI FIFO Control register */
+	u32	FSR;   /* SPI FIFO Status register */
+	u32	WCR;   /* SPI Wait Clock Counter register */
+	u32	CCR;   /* SPI Clock Rate Control register */
+	u8	_rsvd2[0x8];
+	u32	MBC;   /* SPI Burst Counter register */
+	u32	MTC;   /* SPI Transmit Counter register */
+	u32	BCC;   /* SPI Burst Control register */
+	u8      _rsvd3[0x4c];
+	u32     NDMA_MODE_CTL;
+	u8	_rsvd4[0x174];
+	u32	TXD;   /* SPI TX Data register */
+	u8	_rsvd5[0xfc];
+	u32	RXD;   /* SPI RX Data register */
+};
+
+
+#define GCR_MASTER	 BIT(1)
+#define GCR_EN		 BIT(0)
+
+#define TCR_XCH          BIT(31)
+#define TCR_SDC          BIT(11)
+#define TCR_DHB          BIT(8)
+#define TCR_SSSEL_SHIFT  (4)
+#define TCR_SSSEL_MASK   (0x3 << TCR_SSSEL_SHIFT)
+#define TCR_SSLEVEL      BIT(7)
+#define TCR_SSOWNER      BIT(6)
+#define TCR_CPOL         BIT(1)
+#define TCR_CPHA         BIT(0)
+
+#define FCR_RX_FIFO_RST  BIT(31)
+#define FCR_TX_FIFO_RST  BIT(15)
+
+#define BCC_STC_MASK     (0x00FFFFFF)
+
+#define CCTL_SEL_CDR1    0
+#define CCTL_SEL_CDR2    BIT(12)
+#define CDR1(n)          ((n & 0xf) << 8)
+#define CDR2(n)          (((n/2) - 1) & 0xff)
+
+static int sunxi_spi_cs_activate(struct udevice *dev, unsigned cs)
+{
+	struct udevice *bus = dev->parent;
+	struct sunxi_spi_platdata *plat = dev_get_platdata(bus);
+	struct sunxi_spi_reg *spi = (struct sunxi_spi_reg *)plat->base;
+	struct sunxi_spi_privdata *priv = dev_get_priv(bus);
+	int ret = 0;
+
+	debug("%s (%s): cs %d cs_gpios_num %d cs_gpios %p\n",
+	      dev->name, __func__, cs, plat->cs_gpios_num, plat->cs_gpios);
+
+	/* If it's too soon to do another transaction, wait... */
+	if (plat->deactivate_delay_us && priv->last_transaction_us) {
+		ulong delay_us;
+		delay_us = timer_get_us() - priv->last_transaction_us;
+		if (delay_us < plat->deactivate_delay_us)
+			udelay(plat->deactivate_delay_us - delay_us);
+	}
+
+#if defined(CONFIG_DM_GPIO)
+	/* Use GPIOs as chip selects? */
+	if (plat->cs_gpios) {
+		/* Guard against out-of-bounds accesses */
+		if (!(cs < plat->cs_gpios_num))
+			return -ENOENT;
+
+		if (dm_gpio_is_valid(&plat->cs_gpios[cs])) {
+			ret = dm_gpio_set_value(&plat->cs_gpios[cs], 1);
+			goto done;
+		}
+	}
+#endif
+	/* The hardware can control up to 4 CS, however not all of
+	   them will be going to pads. We don't try to second-guess
+	   the DT or higher-level drivers though and just test against
+	   the hard limit. */
+
+	if (!(cs < 4))
+		return -ENOENT;
+
+	/* Control the positional CS output */
+	clrsetbits_le32(&spi->TCR, TCR_SSSEL_MASK, cs << TCR_SSSEL_SHIFT);
+	clrsetbits_le32(&spi->TCR, TCR_SSLEVEL, TCR_SSOWNER);
+
+done:
+	/* We'll delay, even it this is an error return... */
+	if (plat->activate_delay_us)
+		udelay(plat->activate_delay_us);
+
+	return ret;
+}
+
+static void sunxi_spi_cs_deactivate(struct udevice *dev, unsigned cs)
+{
+	struct udevice *bus = dev->parent;
+	struct sunxi_spi_platdata *plat = dev_get_platdata(bus);
+	struct sunxi_spi_reg *spi = (struct sunxi_spi_reg *)plat->base;
+	struct sunxi_spi_privdata *priv = dev_get_priv(bus);
+
+#if defined(CONFIG_DM_GPIO)
+	/* Use GPIOs as chip selects? */
+	if (plat->cs_gpios) {
+		if (dm_gpio_is_valid(&plat->cs_gpios[cs])) {
+			dm_gpio_set_value(&plat->cs_gpios[cs], 0);
+			return;
+		}
+	}
+#endif
+
+	/* We have only the hardware chip select, so use those */
+	setbits_le32(&spi->TCR, TCR_SSLEVEL | TCR_SSOWNER);
+
+	/* Remember time of this transaction for the next delay */
+	if (plat->deactivate_delay_us)
+		priv->last_transaction_us = timer_get_us();
+}
+
+static inline uint8_t *spi_fill_writefifo(struct sunxi_spi_reg *spi,
+					  uint8_t *dout, int cnt)
+{
+	debug("%s: dout = %p, cnt = %d\n", __func__, dout, cnt);
+
+	if (dout) {
+		int i;
+
+		for (i = 0; i < cnt; i++)
+			writeb(dout[i], &spi->TXD);
+
+		dout += cnt;
+	}
+
+	return dout;
+}
+
+static inline uint8_t *spi_drain_readfifo(struct sunxi_spi_reg *spi,
+					  uint8_t *din, int cnt)
+{
+	debug("%s: din = %p, cnt = %d\n", __func__, din, cnt);
+
+	if (din) {
+		int i;
+
+		for (i = 0; i < cnt; i++)
+			din[i] = readb(&spi->RXD);
+
+		din += cnt;
+	}
+
+	return din;
+}
+
+static int sunxi_spi_xfer(struct udevice *dev, unsigned int bitlen,
+			  const void *out, void *in, unsigned long flags)
+{
+	struct udevice *bus = dev->parent;
+	struct sunxi_spi_platdata *plat = dev_get_platdata(bus);
+	struct sunxi_spi_privdata *priv = dev_get_priv(bus);
+	struct sunxi_spi_reg *spi = (struct sunxi_spi_reg *)plat->base;
+	struct sunxi_spi_driverdata *data =
+		(struct sunxi_spi_driverdata *)dev_get_driver_data(dev->parent);
+	struct dm_spi_slave_platdata *slave = dev_get_parent_platdata(dev);
+	uint8_t *dout = (uint8_t *)out;
+	uint8_t *din = (uint8_t *)in;
+	int fifo_depth = data->fifo_depth;
+	unsigned int n_bytes = DIV_ROUND_UP(bitlen, 8);
+	int ret = 0;
+	/*
+	 * We assume that 1ms (for any delays within the module to
+	 * start the transfer) + 2x the time to transfer a full FIFO
+	 * (for the data- and bitrate-dependent part) is a reasonable
+	 * timeout to detect the module being stuck.
+	 */
+	ulong timeout_ms =
+		(DIV_ROUND_UP(fifo_depth * 16000, priv->hz_actual)) + 1;
+
+	debug("%s (%s): regs %p bitlen %d din %p flags %lx fifo_depth %d\n",
+	      dev->name, __func__, spi, bitlen, din, flags, fifo_depth);
+
+	if (flags & SPI_XFER_BEGIN) {
+		ret = sunxi_spi_cs_activate(dev, slave->cs);
+		if (ret < 0) {
+			printf("%s: failed to activate chip-select %d\n",
+			       dev->name, slave->cs);
+			return ret;
+		}
+	}
+
+	/* Reset FIFO */
+	writel(FCR_RX_FIFO_RST | FCR_TX_FIFO_RST, &spi->FCR);
+	/* Wait until the FIFO reset autoclears */
+	ret = wait_for_bit(dev->name, &spi->FCR,
+			   FCR_RX_FIFO_RST | FCR_TX_FIFO_RST,
+			   false, 10, true);
+	if (ret < 0) {
+		printf("%s: failed to reset FIFO within 10ms\n", bus->name);
+		return ret;
+	}
+
+	/* Set the discard burst bits depending on whether we are receiving */
+	clrbits_le32(&spi->TCR, TCR_DHB);
+	if (!din)
+		setbits_le32(&spi->TCR, TCR_DHB);
+
+	/* Transfer in blocks of FIFO_DEPTH */
+	while (n_bytes > 0) {
+		int cnt = (n_bytes < fifo_depth) ? n_bytes : fifo_depth;
+		int txcnt = dout ? cnt : 0;
+
+		/* We need to set up the transfer counters in every
+		   iteration, as the hardware block counts those down
+		   to 0 and leaves the 0 in the register (i.e. there's
+		   no shadow register within the controller that these
+		   values are copied into). */
+
+		/* master burst counter:     total length (tx + rx + dummy) */
+		writel(cnt, &spi->MBC);
+		/* master transmit counter:  tx */
+		writel(txcnt, &spi->MTC);
+		/* burst control counter:    single-mode tx */
+		clrsetbits_le32(&spi->BCC, BCC_STC_MASK, txcnt & BCC_STC_MASK);
+
+		dout = spi_fill_writefifo(spi, dout, txcnt);
+
+		/* Start transfer ... */
+		setbits_le32(&spi->TCR, TCR_XCH);
+		/* ... and wait until it finshes. */
+		ret = wait_for_bit(dev->name, &spi->TCR, TCR_XCH,
+				   false, timeout_ms, true);
+		if (ret < 0) {
+			printf("%s: stuck in XCH for %ld ms\n",
+			       bus->name, timeout_ms);
+			goto fail;
+		}
+
+		din = spi_drain_readfifo(spi, din, cnt);
+
+		n_bytes -= cnt;
+	}
+
+ fail:
+	if (flags & SPI_XFER_END)
+		sunxi_spi_cs_deactivate(dev, slave->cs);
+
+	return 0;
+};
+
+static int sunxi_spi_ofdata_to_platdata(struct udevice *dev)
+{
+	struct sunxi_spi_platdata *plat = dev_get_platdata(dev);
+	const void *blob = gd->fdt_blob;
+	int node = dev_of_offset(dev);
+	fdt_addr_t addr;
+	fdt_size_t size;
+
+	debug("%s: %p\n", __func__, dev);
+
+	addr = fdtdec_get_addr_size_auto_noparent(blob, node, "reg", 0,
+						  &size, false);
+	if (addr == FDT_ADDR_T_NONE) {
+		debug("%s: failed to find base address\n", dev->name);
+		return -ENODEV;
+	}
+	plat->base = (void *)addr;
+	plat->max_hz = fdtdec_get_int(blob, node, "spi-max-frequency", 0);
+	plat->activate_delay_us = fdtdec_get_int(blob, node,
+						 "spi-activate_delay", 0);
+	plat->deactivate_delay_us = fdtdec_get_int(blob, node,
+						   "spi-deactivate-delay", 0);
+
+#if defined(CONFIG_DM_GPIO)
+	plat->cs_gpios_num = gpio_get_list_count(dev, "cs-gpios");
+	if (plat->cs_gpios_num > 0) {
+		int i;
+
+		plat->cs_gpios = calloc(plat->cs_gpios_num,
+					sizeof(struct gpio_desc));
+		if (!plat->cs_gpios)
+			return -ENOMEM;
+
+		for (i = 0; i < plat->cs_gpios_num; ++i)
+			gpio_request_by_name(dev, "cs-gpios", i,
+					     &plat->cs_gpios[i], 0);
+	}
+#endif
+	return 0;
+}
+
+static int sunxi_spi_probe(struct udevice *dev)
+{
+	unsigned int pin_func = SUNXI_GPC_SPI0;
+	int ret;
+
+	if (IS_ENABLED(CONFIG_MACH_SUN50I))
+		pin_func = SUN50I_GPC_SPI0;
+
+	if (IS_ENABLED(CONFIG_MACH_SUNIV))
+		pin_func = SUNIV_GPC_SPI0;
+
+	ret = sunxi_gpio_setup_dt_pins(gd->fdt_blob, dev_of_offset(dev),
+				       NULL, pin_func);
+
+	if (ret < 0) {
+		printf("SPI: pinctrl node not found.\n");
+	} else if (!ret) {
+		printf("SPI: pinctrl node not valid.\n");
+	}
+
+	return (ret <= 0) ? -EINVAL : 0;
+}
+
+static int sunxi_spi_claim_bus(struct udevice *dev)
+{
+	struct sunxi_spi_platdata *plat = dev_get_platdata(dev->parent);
+	struct spi_slave *spi_slave = dev_get_parent_priv(dev);
+	struct sunxi_spi_reg *spi = (struct sunxi_spi_reg *)plat->base;
+
+	debug("%s: %p %p\n", __func__, dev, dev->parent);
+
+	/* Enable in master-mode */
+	setbits_le32(&spi->GCR, GCR_MASTER | GCR_EN);
+	/* All CS control is manual and set them to inactive */
+	clrbits_le32(&spi->TCR, TCR_SSSEL_MASK);
+	setbits_le32(&spi->TCR, TCR_SSOWNER);
+	/* Apply polarity and phase from the mode bits */
+	if (spi_slave->mode & SPI_CPOL)
+		setbits_le32(&spi->TCR, TCR_CPOL);
+	if (spi_slave->mode & SPI_CPHA)
+		setbits_le32(&spi->TCR, TCR_CPHA);
+
+#if defined(DM_GPIO)
+	/* Set all cs-gpios to inactive */
+	for (i = 0; i < plat->cs_gpios_num; ++i)
+		if (dm_gpio_is_valid(&plat->cs_gpios[i]))
+			dm_gpio_set_value(&plat->cs_gpios[i], 0);
+#endif
+
+
+	return 0;
+}
+
+static int sunxi_spi_release_bus(struct udevice *dev)
+{
+	struct sunxi_spi_platdata *plat = dev_get_platdata(dev->parent);
+	struct sunxi_spi_reg *spi = (struct sunxi_spi_reg *)plat->base;
+
+	clrbits_le32(&spi->GCR, GCR_EN);
+
+	return 0;
+}
+
+static int sunxi_spi_set_speed(struct udevice *bus, unsigned int hz)
+{
+	struct sunxi_ccm_reg *ccm = (struct sunxi_ccm_reg *)SUNXI_CCM_BASE;
+	struct sunxi_spi_platdata *plat = dev_get_platdata(bus);
+	struct sunxi_spi_reg *spi = (struct sunxi_spi_reg *)plat->base;
+	struct sunxi_spi_privdata *priv = dev_get_priv(bus);
+	unsigned sclk_shift, hz_ahb, hz_sclk, target_freq;
+
+	debug("%s: %p, %d\n", __func__, bus, hz);
+
+	if (plat->max_hz && (hz > plat->max_hz)) {
+		debug("%s: selected speed (%d) exceeds maximum of %d\n",
+		      bus->name, hz, plat->max_hz);
+		hz = plat->max_hz;
+	}
+
+	/* If the last request was for the same speed, we're done */
+	if (priv->hz_requested == hz)
+		return 0;
+
+	/* The CCU section in the manual recommends to have the module
+	   reset deasserted before the module clock gate is opened. */
+	setbits_le32(&ccm->ahb_reset0_cfg, 1 << AHB_RESET_OFFSET_SPI0);
+
+
+	/* Enable and set the module clock.
+	 *
+	 * At least for the A31, there's a requirements to provide at
+	 * least 2x the sample clock, so we should never go below that
+	 * ratio between the AHB clock and the (ampling) SCLK. On the
+	 * low end of the clock, we use the provide two step-downs for
+	 * clocks on the low end (below 375kHz).
+	 *
+	 * However, testing shows that for high-speed modes (on the
+	 * A64), we may not divide SCLK from the AHB clock.
+	 */
+#ifndef CONFIG_MACH_SUNIV
+	if (hz < 100000)
+		sclk_shift = 8;
+	else if (hz < 50000000)
+		sclk_shift = 2;
+	else
+		sclk_shift = 0;
+
+	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_SPI0);
+
+	/* Program the SPI clock control */
+	writel(CCTL_SEL_CDR1 | CDR1(sclk_shift), &spi->CCR);
+
+	target_freq = hz * (1 << sclk_shift);
+
+	if (target_freq < 24000000) {
+		writel(BIT(31) | max(24000000 / target_freq - 1, 0xf),
+		       &ccm->spi0_clk_cfg);
+		hz_ahb = 24000000 / ((readl(&ccm->spi0_clk_cfg) & 0xf) + 1);
+	} else {
+		writel(BIT(31) | (0x01 << 24) | max(600000000 / target_freq - 1, 0xf),
+		       &ccm->spi0_clk_cfg);
+		hz_ahb = 600000000 / ((readl(&ccm->spi0_clk_cfg) & 0xf) + 1);
+	}
+#else
+	hz_ahb = target_freq = 200000000; /* AHB clock on suniv */
+	sclk_shift = 0;
+	while(target_freq > hz && sclk_shift < 0xf) {
+		target_freq >>= 1;
+		sclk_shift += 1;
+	};
+
+	setbits_le32(&ccm->ahb_gate0, 1 << AHB_GATE_OFFSET_SPI0);
+
+	writel(CCTL_SEL_CDR1 | CDR1(sclk_shift), &spi->CCR);
+#endif
+
+	hz_sclk = hz_ahb >> sclk_shift;
+	priv->hz_actual = hz_sclk;
+	debug("%s: hz_ahb %d  hz_sclk %d\n", bus->name, hz_ahb, hz_sclk);
+
+	/* If this is a high-speed mode (which we define---based upon
+	   empirical testing---to be above 50 MHz), we need to move the
+	   sampling point during data read. */
+	if (hz_sclk > 50000000)
+		setbits_le32(&spi->TCR, TCR_SDC);
+	else
+		clrbits_le32(&spi->TCR, TCR_SDC);
+
+	return 0;
+};
+
+static int sunxi_spi_set_mode(struct udevice *bus, unsigned int mode)
+{
+	return 0;
+};
+
+static const struct dm_spi_ops sunxi_spi_ops = {
+	.claim_bus	= sunxi_spi_claim_bus,
+	.release_bus	= sunxi_spi_release_bus,
+	.xfer		= sunxi_spi_xfer,
+	.set_speed	= sunxi_spi_set_speed,
+	.set_mode	= sunxi_spi_set_mode,
+	/*
+	 * cs_info is not needed, since we require all chip selects to be
+	 * in the device tree explicitly
+	 */
+};
+
+static struct sunxi_spi_driverdata  sun6i_a31_data = {
+	.fifo_depth = 128,
+};
+
+static struct sunxi_spi_driverdata  sun50i_a64_data = {
+	.fifo_depth = 64,
+};
+
+static const struct udevice_id sunxi_spi_ids[] = {
+	{ .compatible = "allwinner,sun6i-a31-spi",
+	  .data = (uintptr_t)&sun6i_a31_data },
+	{ .compatible = "allwinner,sun8i-h3-spi",
+	  .data = (uintptr_t)&sun50i_a64_data },
+	{ }
+};
+
+U_BOOT_DRIVER(sunxi_spi) = {
+	.name = "sunxi_spi",
+	.id = UCLASS_SPI,
+	.of_match = sunxi_spi_ids,
+	.ofdata_to_platdata = sunxi_spi_ofdata_to_platdata,
+	.platdata_auto_alloc_size = sizeof(struct sunxi_spi_platdata),
+	.priv_auto_alloc_size = sizeof(struct sunxi_spi_privdata),
+	.probe = sunxi_spi_probe,
+	.ops = &sunxi_spi_ops,
+};
diff --git a/drivers/usb/musb-new/sunxi.c b/drivers/usb/musb-new/sunxi.c
index 7ee44ea919..aedc24b937 100644
--- a/drivers/usb/musb-new/sunxi.c
+++ b/drivers/usb/musb-new/sunxi.c
@@ -312,13 +312,16 @@ static int musb_usb_probe(struct udevice *dev)
 {
 	struct musb_host_data *host = dev_get_priv(dev);
 	struct usb_bus_priv *priv = dev_get_uclass_priv(dev);
+	void *base = dev_read_addr_ptr(dev);
 	int ret;
 
+	if (!base)
+		return -EINVAL;
+
 	priv->desc_before_addr = true;
 
 #ifdef CONFIG_USB_MUSB_HOST
-	host->host = musb_init_controller(&musb_plat, NULL,
-					  (void *)SUNXI_USB0_BASE);
+	host->host = musb_init_controller(&musb_plat, NULL, base);
 	if (!host->host)
 		return -EIO;
 
@@ -326,7 +329,7 @@ static int musb_usb_probe(struct udevice *dev)
 	if (!ret)
 		printf("Allwinner mUSB OTG (Host)\n");
 #else
-	ret = musb_register(&musb_plat, NULL, (void *)SUNXI_USB0_BASE);
+	ret = musb_register(&musb_plat, NULL, base);
 	if (!ret)
 		printf("Allwinner mUSB OTG (Peripheral)\n");
 #endif
diff --git a/drivers/video/Kconfig b/drivers/video/Kconfig
index 45a105db06..2fc0defcd0 100644
--- a/drivers/video/Kconfig
+++ b/drivers/video/Kconfig
@@ -38,6 +38,7 @@ config BACKLIGHT_GPIO
 config VIDEO_BPP8
 	bool "Support 8-bit-per-pixel displays"
 	depends on DM_VIDEO
+	default n if ARCH_SUNXI
 	default y if DM_VIDEO
 	help
 	  Support drawing text and bitmaps onto a 8-bit-per-pixel display.
@@ -48,6 +49,7 @@ config VIDEO_BPP8
 config VIDEO_BPP16
 	bool "Support 16-bit-per-pixel displays"
 	depends on DM_VIDEO
+	default n if ARCH_SUNXI
 	default y if DM_VIDEO
 	help
 	  Support drawing text and bitmaps onto a 16-bit-per-pixel display.
diff --git a/drivers/video/cfb_console.c b/drivers/video/cfb_console.c
index 0b25897062..241525f851 100644
--- a/drivers/video/cfb_console.c
+++ b/drivers/video/cfb_console.c
@@ -75,7 +75,7 @@
 #if defined(CONFIG_VIDEO_MXS)
 #define VIDEO_FB_16BPP_WORD_SWAP
 #endif
-
+#define CONFIG_HIDE_LOGO_VERSION
 /*
  * Defines for the MB862xx driver
  */
diff --git a/include/configs/suniv.h b/include/configs/suniv.h
new file mode 100644
index 0000000000..b9d8e9c3a9
--- /dev/null
+++ b/include/configs/suniv.h
@@ -0,0 +1,36 @@
+/*
+ * Configuration settings for new Allwinner F-series (suniv) CPU
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#define CONFIG_SUNXI_USB_PHYS 1
+
+/*
+ * Include common sunxi configuration where most the settings are
+ */
+#include <configs/sunxi-common.h>
+
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_VIDEO_BMP_LOGO
+/*
+*#define CONFIG_BOOTCOMMAND   "sf probe 0 60000000; "                           \
+*                     "sf read 0x80C00000 0x100000 0x4000; "  \
+*                     "sf read 0x80008000 0x110000 0x400000; " \
+*                     "bootz 0x80008000 - 0x80C00000"
+*/
+
+#ifdef CONFIG_BOOTCOMMAND
+	#undef CONFIG_BOOTCOMMAND
+#endif
+
+#define CONFIG_BOOTCOMMAND   "sf probe 0 50000000; "                           \
+                     "sf read 0x80C00000 0x100000 0x4000; "  \
+                     "sf read 0x80008000 0x110000 0x400000; " \
+                     "bootz 0x80008000 - 0x80C00000"
+
+
+#endif /* __CONFIG_H */
diff --git a/include/configs/sunxi-common.h b/include/configs/sunxi-common.h
index 3855c564f9..f1c417ddd4 100644
--- a/include/configs/sunxi-common.h
+++ b/include/configs/sunxi-common.h
@@ -40,7 +40,12 @@
 /* Serial & console */
 #define CONFIG_SYS_NS16550_SERIAL
 /* ns16550 reg in the low bits of cpu reg */
+#ifndef CONFIG_MACH_SUNIV
 #define CONFIG_SYS_NS16550_CLK		24000000
+#else
+/* suniv doesn't have apb2 and uart is connected to apb1 */
+#define CONFIG_SYS_NS16550_CLK		100000000
+#endif
 #ifndef CONFIG_DM_SERIAL
 # define CONFIG_SYS_NS16550_REG_SIZE	-4
 # define CONFIG_SYS_NS16550_COM1		SUNXI_UART0_BASE
@@ -70,6 +75,16 @@
  * we get warnings if the Kconfig value mismatches. */
 #define CONFIG_SPL_STACK_R_ADDR		0x2fe00000
 #define CONFIG_SPL_BSS_START_ADDR	0x2ff80000
+#elif defined(CONFIG_MACH_SUNIV)
+#define SDRAM_OFFSET(x) 0x8##x
+#define CONFIG_SYS_SDRAM_BASE		0x80000000
+#define CONFIG_SYS_LOAD_ADDR		0x81000000 /* default load address */
+#define CONFIG_SYS_TEXT_BASE		0x81700000
+/* Note SPL_STACK_R_ADDR is set through Kconfig, we include it here 
+ * since it needs to fit in with the other values. By also #defining it
+ * we get warnings if the Kconfig value mismatches. */
+#define CONFIG_SPL_STACK_R_ADDR		0x81e00000
+#define CONFIG_SPL_BSS_START_ADDR	0x81f80000
 #else
 #define SDRAM_OFFSET(x) 0x4##x
 #define CONFIG_SYS_SDRAM_BASE		0x40000000
@@ -155,16 +170,21 @@
 #define CONFIG_SYS_MMC_ENV_DEV		0
 #endif
 #define CONFIG_SYS_MMC_MAX_DEVICE	4
+#elif defined(CONFIG_ENV_IS_IN_SPI_FLASH)
+#define CONFIG_ENV_SECT_SIZE 0x1000
 #elif defined(CONFIG_ENV_IS_NOWHERE)
 #define CONFIG_ENV_SIZE			(128 << 10)
 #endif
 
-#ifndef CONFIG_MACH_SUN8I_V3S
-/* 64MB of malloc() pool */
-#define CONFIG_SYS_MALLOC_LEN		(CONFIG_ENV_SIZE + (64 << 20))
-#else
+#if defined(CONFIG_MACH_SUN8I_V3S)
 /* 2MB of malloc() pool */
 #define CONFIG_SYS_MALLOC_LEN		(CONFIG_ENV_SIZE + (2 << 20))
+#elif defined(CONFIG_MACH_SUNIV)
+/* 1MB of malloc() pool */
+#define CONFIG_SYS_MALLOC_LEN		(CONFIG_ENV_SIZE + (1 << 20))
+#else
+/* 64MB of malloc() pool */
+#define CONFIG_SYS_MALLOC_LEN		(CONFIG_ENV_SIZE + (64 << 20))
 #endif
 
 /*
@@ -340,19 +360,7 @@ extern int soft_i2c_gpio_scl;
 #define RAMDISK_ADDR_R	__stringify(SDRAM_OFFSET(FE00000))
 
 #else
-/*
- * 160M RAM (256M minimum minus 64MB heap + 32MB for u-boot, stack, fb, etc.
- * 32M uncompressed kernel, 16M compressed kernel, 1M fdt,
- * 1M script, 1M pxe and the ramdisk at the end.
- */
-#ifndef CONFIG_MACH_SUN8I_V3S
-#define BOOTM_SIZE     __stringify(0xa000000)
-#define KERNEL_ADDR_R  __stringify(SDRAM_OFFSET(2000000))
-#define FDT_ADDR_R     __stringify(SDRAM_OFFSET(3000000))
-#define SCRIPT_ADDR_R  __stringify(SDRAM_OFFSET(3100000))
-#define PXEFILE_ADDR_R __stringify(SDRAM_OFFSET(3200000))
-#define RAMDISK_ADDR_R __stringify(SDRAM_OFFSET(3300000))
-#else
+#if defined(CONFIG_MACH_SUN8I_V3S)
 /*
  * 64M RAM minus 2MB heap + 16MB for u-boot, stack, fb, etc.
  * 16M uncompressed kernel, 8M compressed kernel, 1M fdt,
@@ -364,6 +372,30 @@ extern int soft_i2c_gpio_scl;
 #define SCRIPT_ADDR_R  __stringify(SDRAM_OFFSET(1900000))
 #define PXEFILE_ADDR_R __stringify(SDRAM_OFFSET(1A00000))
 #define RAMDISK_ADDR_R __stringify(SDRAM_OFFSET(1B00000))
+#elif defined(CONFIG_MACH_SUNIV)
+/*
+ * 32M RAM minus 1MB heap + 8MB for u-boot, stack, fb, etc.
+ * 8M uncompressed kernel, 4M compressed kernel, 512K fdt,
+ * 512K script, 512K pxe and the ramdisk at the end.
+ */
+#define BOOTM_SIZE     __stringify(0x1700000)
+#define KERNEL_ADDR_R  __stringify(SDRAM_OFFSET(0500000))
+#define FDT_ADDR_R     __stringify(SDRAM_OFFSET(0C00000))
+#define SCRIPT_ADDR_R  __stringify(SDRAM_OFFSET(0C50000))
+#define PXEFILE_ADDR_R __stringify(SDRAM_OFFSET(0D00000))
+#define RAMDISK_ADDR_R __stringify(SDRAM_OFFSET(0D50000))
+#else
+/*
+ * 160M RAM (256M minimum minus 64MB heap + 32MB for u-boot, stack, fb, etc.
+ * 32M uncompressed kernel, 16M compressed kernel, 1M fdt,
+ * 1M script, 1M pxe and the ramdisk at the end.
+ */
+#define BOOTM_SIZE     __stringify(0xa000000)
+#define KERNEL_ADDR_R  __stringify(SDRAM_OFFSET(2000000))
+#define FDT_ADDR_R     __stringify(SDRAM_OFFSET(3000000))
+#define SCRIPT_ADDR_R  __stringify(SDRAM_OFFSET(3100000))
+#define PXEFILE_ADDR_R __stringify(SDRAM_OFFSET(3200000))
+#define RAMDISK_ADDR_R __stringify(SDRAM_OFFSET(3300000))
 #endif
 #endif
 
diff --git a/include/configs/uniphier.h b/include/configs/uniphier.h
index 12cbe9b79d..5ab06f6072 100644
--- a/include/configs/uniphier.h
+++ b/include/configs/uniphier.h
@@ -215,8 +215,6 @@
 
 #define CONFIG_SYS_SDRAM_BASE		0x80000000
 #define CONFIG_NR_DRAM_BANKS		3
-/* for LD20; the last 64 byte is used for dynamic DDR PHY training */
-#define CONFIG_SYS_MEM_TOP_HIDE		64
 
 #define CONFIG_SYS_INIT_SP_ADDR		(CONFIG_SYS_TEXT_BASE)
 
diff --git a/include/dt-bindings/clock/suniv-ccu.h b/include/dt-bindings/clock/suniv-ccu.h
new file mode 100644
index 0000000000..9c22d70b2c
--- /dev/null
+++ b/include/dt-bindings/clock/suniv-ccu.h
@@ -0,0 +1,69 @@
+/*
+ * Copyright (c) 2018 Icenowy Zheng <icenowy@aosc.xyz>
+ *
+ * SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+ */
+
+#ifndef _DT_BINDINGS_CLK_SUNIV_H_
+#define _DT_BINDINGS_CLK_SUNIV_H_
+
+#define CLK_CPU			11
+
+#define CLK_BUS_MMC0		14
+#define CLK_BUS_MMC1		15
+#define CLK_BUS_DRAM		16
+#define CLK_BUS_SPI0		17
+#define CLK_BUS_SPI1		18
+#define CLK_BUS_OTG		19
+#define CLK_BUS_VE		20
+#define CLK_BUS_LCD		21
+#define CLK_BUS_DEINTERLACE	22
+#define CLK_BUS_CSI		23
+#define CLK_BUS_TVD		24
+#define CLK_BUS_TVE		25
+#define CLK_BUS_DE_BE		26
+#define CLK_BUS_DE_FE		27
+#define CLK_BUS_CODEC		28
+#define CLK_BUS_SPDIF		29
+#define CLK_BUS_IR		30
+#define CLK_BUS_RSB		31
+#define CLK_BUS_I2S0		32
+#define CLK_BUS_I2C0		33
+#define CLK_BUS_I2C1		34
+#define CLK_BUS_I2C2		35
+#define CLK_BUS_PIO		36
+#define CLK_BUS_UART0		37
+#define CLK_BUS_UART1		38
+#define CLK_BUS_UART2		39
+
+#define CLK_MMC0		40
+#define CLK_MMC0_SAMPLE		41
+#define CLK_MMC0_OUTPUT		42
+#define CLK_MMC1		43
+#define CLK_MMC1_SAMPLE		44
+#define CLK_MMC1_OUTPUT		45
+#define CLK_I2S			46
+#define CLK_SPDIF		47
+
+#define CLK_USB_PHY0		48
+
+#define CLK_DRAM_VE		49
+#define CLK_DRAM_CSI		50
+#define CLK_DRAM_DEINTERLACE	51
+#define CLK_DRAM_TVD		52
+#define CLK_DRAM_DE_FE		53
+#define CLK_DRAM_DE_BE		54
+
+#define CLK_DE_BE		55
+#define CLK_DE_FE		56
+#define CLK_TCON		57
+#define CLK_DEINTERLACE		58
+#define CLK_TVE2_CLK		59
+#define CLK_TVE1_CLK		60
+#define CLK_TVD			61
+#define CLK_CSI			62
+#define CLK_VE			63
+#define CLK_CODEC		64
+#define CLK_AVS			65
+
+#endif
diff --git a/include/dt-bindings/reset/suniv-ccu.h b/include/dt-bindings/reset/suniv-ccu.h
new file mode 100644
index 0000000000..993f6b5381
--- /dev/null
+++ b/include/dt-bindings/reset/suniv-ccu.h
@@ -0,0 +1,37 @@
+/*
+ * Copyright (C) 2018 Icenowy Zheng <icenowy@aosc.xyz>
+ *
+ * SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+ */
+
+#ifndef _DT_BINDINGS_RST_SUNIV_H_
+#define _DT_BINDINGS_RST_SUNIV_H_
+
+#define RST_USB_PHY0		0
+#define RST_BUS_MMC0		1
+#define RST_BUS_MMC1		2
+#define RST_BUS_DRAM		3
+#define RST_BUS_SPI0		4
+#define RST_BUS_SPI1		5
+#define RST_BUS_OTG		6
+#define RST_BUS_VE		7
+#define RST_BUS_LCD		8
+#define RST_BUS_DEINTERLACE		9
+#define RST_BUS_CSI		10
+#define RST_BUS_TVD		11
+#define RST_BUS_TVE		12
+#define RST_BUS_DE_BE		13
+#define RST_BUS_DE_FE		14
+#define RST_BUS_CODEC		15
+#define RST_BUS_SPDIF		16
+#define RST_BUS_IR		17
+#define RST_BUS_RSB		18
+#define RST_BUS_I2S0		19
+#define RST_BUS_I2C0		20
+#define RST_BUS_I2C1		21
+#define RST_BUS_I2C2		22
+#define RST_BUS_UART0		23
+#define RST_BUS_UART1		24
+#define RST_BUS_UART2		25
+
+#endif /* _DT_BINDINGS_RST_SUNIV_H_ */
diff --git a/lib/Kconfig b/lib/Kconfig
index 00ac650e74..710deb7a63 100644
--- a/lib/Kconfig
+++ b/lib/Kconfig
@@ -57,6 +57,7 @@ config PANIC_HANG
 
 config REGEX
 	bool "Enable regular expression support"
+	default n if ARCH_SUNXI
 	default y if NET
 	help
 	  If this variable is defined, U-Boot is linked against the
diff --git a/tools/Makefile b/tools/Makefile
index 4d32fe5910..8701017db2 100644
--- a/tools/Makefile
+++ b/tools/Makefile
@@ -220,7 +220,7 @@ LOGO-$(CONFIG_VIDEO_LOGO) += $(LOGO_DATA_H)
 
 # Generic logo
 ifeq ($(LOGO_BMP),)
-LOGO_BMP= $(srctree)/$(src)/logos/denx.bmp
+LOGO_BMP= $(srctree)/$(src)/logos/lichee800480.bmp
 
 # Use board logo and fallback to vendor
 ifneq ($(wildcard $(srctree)/$(src)/logos/$(BOARD).bmp),)
@@ -232,7 +232,7 @@ endif
 endif
 
 endif # !LOGO_BMP
-
+$LOGO_BMP= logos/lichee.bmp
 #
 # Use native tools and options
 # Define __KERNEL_STRICT_NAMES to prevent typedef overlaps
diff --git a/tools/logos/lichee480320.bmp b/tools/logos/lichee480320.bmp
new file mode 100644
index 0000000000000000000000000000000000000000..88676624dbd9114ce1b6b8a0c0e43344a1b86760
GIT binary patch
literal 154678
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

literal 0
HcmV?d00001

diff --git a/tools/logos/lichee800480.bmp b/tools/logos/lichee800480.bmp
new file mode 100644
index 0000000000000000000000000000000000000000..d80110df7b5bbe643a521886ca94e00346d96f04
GIT binary patch
literal 385078
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

literal 0
HcmV?d00001

